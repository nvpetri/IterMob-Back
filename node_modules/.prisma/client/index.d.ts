
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model tbl_endereco
 * 
 */
export type tbl_endereco = $Result.DefaultSelection<Prisma.$tbl_enderecoPayload>
/**
 * Model tbl_usuarios
 * 
 */
export type tbl_usuarios = $Result.DefaultSelection<Prisma.$tbl_usuariosPayload>
/**
 * Model tbl_autenticacao
 * 
 */
export type tbl_autenticacao = $Result.DefaultSelection<Prisma.$tbl_autenticacaoPayload>
/**
 * Model favoritos
 * 
 */
export type favoritos = $Result.DefaultSelection<Prisma.$favoritosPayload>
/**
 * Model itinerario
 * 
 */
export type itinerario = $Result.DefaultSelection<Prisma.$itinerarioPayload>
/**
 * Model tabela
 * 
 */
export type tabela = $Result.DefaultSelection<Prisma.$tabelaPayload>
/**
 * Model tbl_historico_viagens
 * 
 */
export type tbl_historico_viagens = $Result.DefaultSelection<Prisma.$tbl_historico_viagensPayload>
/**
 * Model tbl_operacional
 * 
 */
export type tbl_operacional = $Result.DefaultSelection<Prisma.$tbl_operacionalPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tbl_enderecos
 * const tbl_enderecos = await prisma.tbl_endereco.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tbl_enderecos
   * const tbl_enderecos = await prisma.tbl_endereco.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.tbl_endereco`: Exposes CRUD operations for the **tbl_endereco** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_enderecos
    * const tbl_enderecos = await prisma.tbl_endereco.findMany()
    * ```
    */
  get tbl_endereco(): Prisma.tbl_enderecoDelegate<ExtArgs>;

  /**
   * `prisma.tbl_usuarios`: Exposes CRUD operations for the **tbl_usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_usuarios
    * const tbl_usuarios = await prisma.tbl_usuarios.findMany()
    * ```
    */
  get tbl_usuarios(): Prisma.tbl_usuariosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_autenticacao`: Exposes CRUD operations for the **tbl_autenticacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_autenticacaos
    * const tbl_autenticacaos = await prisma.tbl_autenticacao.findMany()
    * ```
    */
  get tbl_autenticacao(): Prisma.tbl_autenticacaoDelegate<ExtArgs>;

  /**
   * `prisma.favoritos`: Exposes CRUD operations for the **favoritos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favoritos
    * const favoritos = await prisma.favoritos.findMany()
    * ```
    */
  get favoritos(): Prisma.favoritosDelegate<ExtArgs>;

  /**
   * `prisma.itinerario`: Exposes CRUD operations for the **itinerario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Itinerarios
    * const itinerarios = await prisma.itinerario.findMany()
    * ```
    */
  get itinerario(): Prisma.itinerarioDelegate<ExtArgs>;

  /**
   * `prisma.tabela`: Exposes CRUD operations for the **tabela** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tabelas
    * const tabelas = await prisma.tabela.findMany()
    * ```
    */
  get tabela(): Prisma.tabelaDelegate<ExtArgs>;

  /**
   * `prisma.tbl_historico_viagens`: Exposes CRUD operations for the **tbl_historico_viagens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_historico_viagens
    * const tbl_historico_viagens = await prisma.tbl_historico_viagens.findMany()
    * ```
    */
  get tbl_historico_viagens(): Prisma.tbl_historico_viagensDelegate<ExtArgs>;

  /**
   * `prisma.tbl_operacional`: Exposes CRUD operations for the **tbl_operacional** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_operacionals
    * const tbl_operacionals = await prisma.tbl_operacional.findMany()
    * ```
    */
  get tbl_operacional(): Prisma.tbl_operacionalDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    tbl_endereco: 'tbl_endereco',
    tbl_usuarios: 'tbl_usuarios',
    tbl_autenticacao: 'tbl_autenticacao',
    favoritos: 'favoritos',
    itinerario: 'itinerario',
    tabela: 'tabela',
    tbl_historico_viagens: 'tbl_historico_viagens',
    tbl_operacional: 'tbl_operacional'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "tbl_endereco" | "tbl_usuarios" | "tbl_autenticacao" | "favoritos" | "itinerario" | "tabela" | "tbl_historico_viagens" | "tbl_operacional"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      tbl_endereco: {
        payload: Prisma.$tbl_enderecoPayload<ExtArgs>
        fields: Prisma.tbl_enderecoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_enderecoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_enderecoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          findFirst: {
            args: Prisma.tbl_enderecoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_enderecoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          findMany: {
            args: Prisma.tbl_enderecoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>[]
          }
          create: {
            args: Prisma.tbl_enderecoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          createMany: {
            args: Prisma.tbl_enderecoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tbl_enderecoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>[]
          }
          delete: {
            args: Prisma.tbl_enderecoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          update: {
            args: Prisma.tbl_enderecoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_enderecoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_enderecoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_enderecoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_enderecoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_endereco>
          }
          groupBy: {
            args: Prisma.tbl_enderecoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_enderecoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_enderecoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_enderecoCountAggregateOutputType> | number
          }
        }
      }
      tbl_usuarios: {
        payload: Prisma.$tbl_usuariosPayload<ExtArgs>
        fields: Prisma.tbl_usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_usuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_usuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload>
          }
          findFirst: {
            args: Prisma.tbl_usuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_usuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload>
          }
          findMany: {
            args: Prisma.tbl_usuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload>[]
          }
          create: {
            args: Prisma.tbl_usuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload>
          }
          createMany: {
            args: Prisma.tbl_usuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tbl_usuariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload>[]
          }
          delete: {
            args: Prisma.tbl_usuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload>
          }
          update: {
            args: Prisma.tbl_usuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_usuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_usuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_usuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuariosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_usuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_usuarios>
          }
          groupBy: {
            args: Prisma.tbl_usuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_usuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_usuariosCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_usuariosCountAggregateOutputType> | number
          }
        }
      }
      tbl_autenticacao: {
        payload: Prisma.$tbl_autenticacaoPayload<ExtArgs>
        fields: Prisma.tbl_autenticacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_autenticacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_autenticacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload>
          }
          findFirst: {
            args: Prisma.tbl_autenticacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_autenticacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload>
          }
          findMany: {
            args: Prisma.tbl_autenticacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload>[]
          }
          create: {
            args: Prisma.tbl_autenticacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload>
          }
          createMany: {
            args: Prisma.tbl_autenticacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tbl_autenticacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload>[]
          }
          delete: {
            args: Prisma.tbl_autenticacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload>
          }
          update: {
            args: Prisma.tbl_autenticacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_autenticacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_autenticacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_autenticacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_autenticacaoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_autenticacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_autenticacao>
          }
          groupBy: {
            args: Prisma.tbl_autenticacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_autenticacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_autenticacaoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_autenticacaoCountAggregateOutputType> | number
          }
        }
      }
      favoritos: {
        payload: Prisma.$favoritosPayload<ExtArgs>
        fields: Prisma.favoritosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.favoritosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.favoritosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          findFirst: {
            args: Prisma.favoritosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.favoritosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          findMany: {
            args: Prisma.favoritosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>[]
          }
          create: {
            args: Prisma.favoritosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          createMany: {
            args: Prisma.favoritosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.favoritosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>[]
          }
          delete: {
            args: Prisma.favoritosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          update: {
            args: Prisma.favoritosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          deleteMany: {
            args: Prisma.favoritosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.favoritosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.favoritosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          aggregate: {
            args: Prisma.FavoritosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavoritos>
          }
          groupBy: {
            args: Prisma.favoritosGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoritosGroupByOutputType>[]
          }
          count: {
            args: Prisma.favoritosCountArgs<ExtArgs>
            result: $Utils.Optional<FavoritosCountAggregateOutputType> | number
          }
        }
      }
      itinerario: {
        payload: Prisma.$itinerarioPayload<ExtArgs>
        fields: Prisma.itinerarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.itinerarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.itinerarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload>
          }
          findFirst: {
            args: Prisma.itinerarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.itinerarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload>
          }
          findMany: {
            args: Prisma.itinerarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload>[]
          }
          create: {
            args: Prisma.itinerarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload>
          }
          createMany: {
            args: Prisma.itinerarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.itinerarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload>[]
          }
          delete: {
            args: Prisma.itinerarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload>
          }
          update: {
            args: Prisma.itinerarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload>
          }
          deleteMany: {
            args: Prisma.itinerarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.itinerarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.itinerarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itinerarioPayload>
          }
          aggregate: {
            args: Prisma.ItinerarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItinerario>
          }
          groupBy: {
            args: Prisma.itinerarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ItinerarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.itinerarioCountArgs<ExtArgs>
            result: $Utils.Optional<ItinerarioCountAggregateOutputType> | number
          }
        }
      }
      tabela: {
        payload: Prisma.$tabelaPayload<ExtArgs>
        fields: Prisma.tabelaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tabelaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tabelaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload>
          }
          findFirst: {
            args: Prisma.tabelaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tabelaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload>
          }
          findMany: {
            args: Prisma.tabelaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload>[]
          }
          create: {
            args: Prisma.tabelaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload>
          }
          createMany: {
            args: Prisma.tabelaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tabelaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload>[]
          }
          delete: {
            args: Prisma.tabelaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload>
          }
          update: {
            args: Prisma.tabelaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload>
          }
          deleteMany: {
            args: Prisma.tabelaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tabelaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tabelaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tabelaPayload>
          }
          aggregate: {
            args: Prisma.TabelaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTabela>
          }
          groupBy: {
            args: Prisma.tabelaGroupByArgs<ExtArgs>
            result: $Utils.Optional<TabelaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tabelaCountArgs<ExtArgs>
            result: $Utils.Optional<TabelaCountAggregateOutputType> | number
          }
        }
      }
      tbl_historico_viagens: {
        payload: Prisma.$tbl_historico_viagensPayload<ExtArgs>
        fields: Prisma.tbl_historico_viagensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_historico_viagensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_historico_viagensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload>
          }
          findFirst: {
            args: Prisma.tbl_historico_viagensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_historico_viagensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload>
          }
          findMany: {
            args: Prisma.tbl_historico_viagensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload>[]
          }
          create: {
            args: Prisma.tbl_historico_viagensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload>
          }
          createMany: {
            args: Prisma.tbl_historico_viagensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tbl_historico_viagensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload>[]
          }
          delete: {
            args: Prisma.tbl_historico_viagensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload>
          }
          update: {
            args: Prisma.tbl_historico_viagensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload>
          }
          deleteMany: {
            args: Prisma.tbl_historico_viagensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_historico_viagensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_historico_viagensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_historico_viagensPayload>
          }
          aggregate: {
            args: Prisma.Tbl_historico_viagensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_historico_viagens>
          }
          groupBy: {
            args: Prisma.tbl_historico_viagensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_historico_viagensGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_historico_viagensCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_historico_viagensCountAggregateOutputType> | number
          }
        }
      }
      tbl_operacional: {
        payload: Prisma.$tbl_operacionalPayload<ExtArgs>
        fields: Prisma.tbl_operacionalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_operacionalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_operacionalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload>
          }
          findFirst: {
            args: Prisma.tbl_operacionalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_operacionalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload>
          }
          findMany: {
            args: Prisma.tbl_operacionalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload>[]
          }
          create: {
            args: Prisma.tbl_operacionalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload>
          }
          createMany: {
            args: Prisma.tbl_operacionalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tbl_operacionalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload>[]
          }
          delete: {
            args: Prisma.tbl_operacionalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload>
          }
          update: {
            args: Prisma.tbl_operacionalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload>
          }
          deleteMany: {
            args: Prisma.tbl_operacionalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_operacionalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_operacionalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_operacionalPayload>
          }
          aggregate: {
            args: Prisma.Tbl_operacionalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_operacional>
          }
          groupBy: {
            args: Prisma.tbl_operacionalGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_operacionalGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_operacionalCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_operacionalCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Tbl_usuariosCountOutputType
   */

  export type Tbl_usuariosCountOutputType = {
    favoritos: number
    tbl_autenticacao: number
    tbl_endereco: number
    tbl_historico_viagens: number
  }

  export type Tbl_usuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoritos?: boolean | Tbl_usuariosCountOutputTypeCountFavoritosArgs
    tbl_autenticacao?: boolean | Tbl_usuariosCountOutputTypeCountTbl_autenticacaoArgs
    tbl_endereco?: boolean | Tbl_usuariosCountOutputTypeCountTbl_enderecoArgs
    tbl_historico_viagens?: boolean | Tbl_usuariosCountOutputTypeCountTbl_historico_viagensArgs
  }

  // Custom InputTypes
  /**
   * Tbl_usuariosCountOutputType without action
   */
  export type Tbl_usuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_usuariosCountOutputType
     */
    select?: Tbl_usuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_usuariosCountOutputType without action
   */
  export type Tbl_usuariosCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: favoritosWhereInput
  }

  /**
   * Tbl_usuariosCountOutputType without action
   */
  export type Tbl_usuariosCountOutputTypeCountTbl_autenticacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_autenticacaoWhereInput
  }

  /**
   * Tbl_usuariosCountOutputType without action
   */
  export type Tbl_usuariosCountOutputTypeCountTbl_enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_enderecoWhereInput
  }

  /**
   * Tbl_usuariosCountOutputType without action
   */
  export type Tbl_usuariosCountOutputTypeCountTbl_historico_viagensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_historico_viagensWhereInput
  }


  /**
   * Count Type ItinerarioCountOutputType
   */

  export type ItinerarioCountOutputType = {
    favoritos: number
  }

  export type ItinerarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoritos?: boolean | ItinerarioCountOutputTypeCountFavoritosArgs
  }

  // Custom InputTypes
  /**
   * ItinerarioCountOutputType without action
   */
  export type ItinerarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItinerarioCountOutputType
     */
    select?: ItinerarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ItinerarioCountOutputType without action
   */
  export type ItinerarioCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: favoritosWhereInput
  }


  /**
   * Count Type TabelaCountOutputType
   */

  export type TabelaCountOutputType = {
    tbl_operacional: number
  }

  export type TabelaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_operacional?: boolean | TabelaCountOutputTypeCountTbl_operacionalArgs
  }

  // Custom InputTypes
  /**
   * TabelaCountOutputType without action
   */
  export type TabelaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TabelaCountOutputType
     */
    select?: TabelaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TabelaCountOutputType without action
   */
  export type TabelaCountOutputTypeCountTbl_operacionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_operacionalWhereInput
  }


  /**
   * Count Type Tbl_operacionalCountOutputType
   */

  export type Tbl_operacionalCountOutputType = {
    tbl_historico_viagens: number
  }

  export type Tbl_operacionalCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_historico_viagens?: boolean | Tbl_operacionalCountOutputTypeCountTbl_historico_viagensArgs
  }

  // Custom InputTypes
  /**
   * Tbl_operacionalCountOutputType without action
   */
  export type Tbl_operacionalCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_operacionalCountOutputType
     */
    select?: Tbl_operacionalCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_operacionalCountOutputType without action
   */
  export type Tbl_operacionalCountOutputTypeCountTbl_historico_viagensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_historico_viagensWhereInput
  }


  /**
   * Models
   */

  /**
   * Model tbl_endereco
   */

  export type AggregateTbl_endereco = {
    _count: Tbl_enderecoCountAggregateOutputType | null
    _avg: Tbl_enderecoAvgAggregateOutputType | null
    _sum: Tbl_enderecoSumAggregateOutputType | null
    _min: Tbl_enderecoMinAggregateOutputType | null
    _max: Tbl_enderecoMaxAggregateOutputType | null
  }

  export type Tbl_enderecoAvgAggregateOutputType = {
    id: number | null
    id_usuario: number | null
  }

  export type Tbl_enderecoSumAggregateOutputType = {
    id: number | null
    id_usuario: number | null
  }

  export type Tbl_enderecoMinAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    cep: string | null
    rua: string | null
    numero: string | null
    cidade: string | null
    bairro: string | null
    estado: string | null
  }

  export type Tbl_enderecoMaxAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    cep: string | null
    rua: string | null
    numero: string | null
    cidade: string | null
    bairro: string | null
    estado: string | null
  }

  export type Tbl_enderecoCountAggregateOutputType = {
    id: number
    id_usuario: number
    cep: number
    rua: number
    numero: number
    cidade: number
    bairro: number
    estado: number
    _all: number
  }


  export type Tbl_enderecoAvgAggregateInputType = {
    id?: true
    id_usuario?: true
  }

  export type Tbl_enderecoSumAggregateInputType = {
    id?: true
    id_usuario?: true
  }

  export type Tbl_enderecoMinAggregateInputType = {
    id?: true
    id_usuario?: true
    cep?: true
    rua?: true
    numero?: true
    cidade?: true
    bairro?: true
    estado?: true
  }

  export type Tbl_enderecoMaxAggregateInputType = {
    id?: true
    id_usuario?: true
    cep?: true
    rua?: true
    numero?: true
    cidade?: true
    bairro?: true
    estado?: true
  }

  export type Tbl_enderecoCountAggregateInputType = {
    id?: true
    id_usuario?: true
    cep?: true
    rua?: true
    numero?: true
    cidade?: true
    bairro?: true
    estado?: true
    _all?: true
  }

  export type Tbl_enderecoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_endereco to aggregate.
     */
    where?: tbl_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_enderecos to fetch.
     */
    orderBy?: tbl_enderecoOrderByWithRelationInput | tbl_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_enderecos
    **/
    _count?: true | Tbl_enderecoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_enderecoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_enderecoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_enderecoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_enderecoMaxAggregateInputType
  }

  export type GetTbl_enderecoAggregateType<T extends Tbl_enderecoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_endereco]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_endereco[P]>
      : GetScalarType<T[P], AggregateTbl_endereco[P]>
  }




  export type tbl_enderecoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_enderecoWhereInput
    orderBy?: tbl_enderecoOrderByWithAggregationInput | tbl_enderecoOrderByWithAggregationInput[]
    by: Tbl_enderecoScalarFieldEnum[] | Tbl_enderecoScalarFieldEnum
    having?: tbl_enderecoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_enderecoCountAggregateInputType | true
    _avg?: Tbl_enderecoAvgAggregateInputType
    _sum?: Tbl_enderecoSumAggregateInputType
    _min?: Tbl_enderecoMinAggregateInputType
    _max?: Tbl_enderecoMaxAggregateInputType
  }

  export type Tbl_enderecoGroupByOutputType = {
    id: number
    id_usuario: number | null
    cep: string
    rua: string
    numero: string | null
    cidade: string
    bairro: string | null
    estado: string
    _count: Tbl_enderecoCountAggregateOutputType | null
    _avg: Tbl_enderecoAvgAggregateOutputType | null
    _sum: Tbl_enderecoSumAggregateOutputType | null
    _min: Tbl_enderecoMinAggregateOutputType | null
    _max: Tbl_enderecoMaxAggregateOutputType | null
  }

  type GetTbl_enderecoGroupByPayload<T extends tbl_enderecoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_enderecoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_enderecoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_enderecoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_enderecoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_enderecoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_usuario?: boolean
    cep?: boolean
    rua?: boolean
    numero?: boolean
    cidade?: boolean
    bairro?: boolean
    estado?: boolean
    tbl_usuarios?: boolean | tbl_endereco$tbl_usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_endereco"]>

  export type tbl_enderecoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_usuario?: boolean
    cep?: boolean
    rua?: boolean
    numero?: boolean
    cidade?: boolean
    bairro?: boolean
    estado?: boolean
    tbl_usuarios?: boolean | tbl_endereco$tbl_usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_endereco"]>

  export type tbl_enderecoSelectScalar = {
    id?: boolean
    id_usuario?: boolean
    cep?: boolean
    rua?: boolean
    numero?: boolean
    cidade?: boolean
    bairro?: boolean
    estado?: boolean
  }

  export type tbl_enderecoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuarios?: boolean | tbl_endereco$tbl_usuariosArgs<ExtArgs>
  }
  export type tbl_enderecoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuarios?: boolean | tbl_endereco$tbl_usuariosArgs<ExtArgs>
  }

  export type $tbl_enderecoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_endereco"
    objects: {
      tbl_usuarios: Prisma.$tbl_usuariosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_usuario: number | null
      cep: string
      rua: string
      numero: string | null
      cidade: string
      bairro: string | null
      estado: string
    }, ExtArgs["result"]["tbl_endereco"]>
    composites: {}
  }

  type tbl_enderecoGetPayload<S extends boolean | null | undefined | tbl_enderecoDefaultArgs> = $Result.GetResult<Prisma.$tbl_enderecoPayload, S>

  type tbl_enderecoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_enderecoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_enderecoCountAggregateInputType | true
    }

  export interface tbl_enderecoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_endereco'], meta: { name: 'tbl_endereco' } }
    /**
     * Find zero or one Tbl_endereco that matches the filter.
     * @param {tbl_enderecoFindUniqueArgs} args - Arguments to find a Tbl_endereco
     * @example
     * // Get one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_enderecoFindUniqueArgs>(args: SelectSubset<T, tbl_enderecoFindUniqueArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_endereco that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_enderecoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_endereco
     * @example
     * // Get one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_enderecoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_enderecoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_endereco that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoFindFirstArgs} args - Arguments to find a Tbl_endereco
     * @example
     * // Get one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_enderecoFindFirstArgs>(args?: SelectSubset<T, tbl_enderecoFindFirstArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_endereco that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoFindFirstOrThrowArgs} args - Arguments to find a Tbl_endereco
     * @example
     * // Get one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_enderecoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_enderecoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_enderecos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_enderecos
     * const tbl_enderecos = await prisma.tbl_endereco.findMany()
     * 
     * // Get first 10 Tbl_enderecos
     * const tbl_enderecos = await prisma.tbl_endereco.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_enderecoWithIdOnly = await prisma.tbl_endereco.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_enderecoFindManyArgs>(args?: SelectSubset<T, tbl_enderecoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_endereco.
     * @param {tbl_enderecoCreateArgs} args - Arguments to create a Tbl_endereco.
     * @example
     * // Create one Tbl_endereco
     * const Tbl_endereco = await prisma.tbl_endereco.create({
     *   data: {
     *     // ... data to create a Tbl_endereco
     *   }
     * })
     * 
     */
    create<T extends tbl_enderecoCreateArgs>(args: SelectSubset<T, tbl_enderecoCreateArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_enderecos.
     * @param {tbl_enderecoCreateManyArgs} args - Arguments to create many Tbl_enderecos.
     * @example
     * // Create many Tbl_enderecos
     * const tbl_endereco = await prisma.tbl_endereco.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_enderecoCreateManyArgs>(args?: SelectSubset<T, tbl_enderecoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tbl_enderecos and returns the data saved in the database.
     * @param {tbl_enderecoCreateManyAndReturnArgs} args - Arguments to create many Tbl_enderecos.
     * @example
     * // Create many Tbl_enderecos
     * const tbl_endereco = await prisma.tbl_endereco.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tbl_enderecos and only return the `id`
     * const tbl_enderecoWithIdOnly = await prisma.tbl_endereco.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tbl_enderecoCreateManyAndReturnArgs>(args?: SelectSubset<T, tbl_enderecoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tbl_endereco.
     * @param {tbl_enderecoDeleteArgs} args - Arguments to delete one Tbl_endereco.
     * @example
     * // Delete one Tbl_endereco
     * const Tbl_endereco = await prisma.tbl_endereco.delete({
     *   where: {
     *     // ... filter to delete one Tbl_endereco
     *   }
     * })
     * 
     */
    delete<T extends tbl_enderecoDeleteArgs>(args: SelectSubset<T, tbl_enderecoDeleteArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_endereco.
     * @param {tbl_enderecoUpdateArgs} args - Arguments to update one Tbl_endereco.
     * @example
     * // Update one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_enderecoUpdateArgs>(args: SelectSubset<T, tbl_enderecoUpdateArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_enderecos.
     * @param {tbl_enderecoDeleteManyArgs} args - Arguments to filter Tbl_enderecos to delete.
     * @example
     * // Delete a few Tbl_enderecos
     * const { count } = await prisma.tbl_endereco.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_enderecoDeleteManyArgs>(args?: SelectSubset<T, tbl_enderecoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_enderecos
     * const tbl_endereco = await prisma.tbl_endereco.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_enderecoUpdateManyArgs>(args: SelectSubset<T, tbl_enderecoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_endereco.
     * @param {tbl_enderecoUpsertArgs} args - Arguments to update or create a Tbl_endereco.
     * @example
     * // Update or create a Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.upsert({
     *   create: {
     *     // ... data to create a Tbl_endereco
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_endereco we want to update
     *   }
     * })
     */
    upsert<T extends tbl_enderecoUpsertArgs>(args: SelectSubset<T, tbl_enderecoUpsertArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoCountArgs} args - Arguments to filter Tbl_enderecos to count.
     * @example
     * // Count the number of Tbl_enderecos
     * const count = await prisma.tbl_endereco.count({
     *   where: {
     *     // ... the filter for the Tbl_enderecos we want to count
     *   }
     * })
    **/
    count<T extends tbl_enderecoCountArgs>(
      args?: Subset<T, tbl_enderecoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_enderecoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_enderecoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_enderecoAggregateArgs>(args: Subset<T, Tbl_enderecoAggregateArgs>): Prisma.PrismaPromise<GetTbl_enderecoAggregateType<T>>

    /**
     * Group by Tbl_endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_enderecoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_enderecoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_enderecoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_enderecoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_enderecoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_endereco model
   */
  readonly fields: tbl_enderecoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_endereco.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_enderecoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_usuarios<T extends tbl_endereco$tbl_usuariosArgs<ExtArgs> = {}>(args?: Subset<T, tbl_endereco$tbl_usuariosArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_endereco model
   */ 
  interface tbl_enderecoFieldRefs {
    readonly id: FieldRef<"tbl_endereco", 'Int'>
    readonly id_usuario: FieldRef<"tbl_endereco", 'Int'>
    readonly cep: FieldRef<"tbl_endereco", 'String'>
    readonly rua: FieldRef<"tbl_endereco", 'String'>
    readonly numero: FieldRef<"tbl_endereco", 'String'>
    readonly cidade: FieldRef<"tbl_endereco", 'String'>
    readonly bairro: FieldRef<"tbl_endereco", 'String'>
    readonly estado: FieldRef<"tbl_endereco", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_endereco findUnique
   */
  export type tbl_enderecoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_endereco to fetch.
     */
    where: tbl_enderecoWhereUniqueInput
  }

  /**
   * tbl_endereco findUniqueOrThrow
   */
  export type tbl_enderecoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_endereco to fetch.
     */
    where: tbl_enderecoWhereUniqueInput
  }

  /**
   * tbl_endereco findFirst
   */
  export type tbl_enderecoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_endereco to fetch.
     */
    where?: tbl_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_enderecos to fetch.
     */
    orderBy?: tbl_enderecoOrderByWithRelationInput | tbl_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_enderecos.
     */
    cursor?: tbl_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_enderecos.
     */
    distinct?: Tbl_enderecoScalarFieldEnum | Tbl_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_endereco findFirstOrThrow
   */
  export type tbl_enderecoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_endereco to fetch.
     */
    where?: tbl_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_enderecos to fetch.
     */
    orderBy?: tbl_enderecoOrderByWithRelationInput | tbl_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_enderecos.
     */
    cursor?: tbl_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_enderecos.
     */
    distinct?: Tbl_enderecoScalarFieldEnum | Tbl_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_endereco findMany
   */
  export type tbl_enderecoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_enderecos to fetch.
     */
    where?: tbl_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_enderecos to fetch.
     */
    orderBy?: tbl_enderecoOrderByWithRelationInput | tbl_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_enderecos.
     */
    cursor?: tbl_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_enderecos.
     */
    skip?: number
    distinct?: Tbl_enderecoScalarFieldEnum | Tbl_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_endereco create
   */
  export type tbl_enderecoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_endereco.
     */
    data: XOR<tbl_enderecoCreateInput, tbl_enderecoUncheckedCreateInput>
  }

  /**
   * tbl_endereco createMany
   */
  export type tbl_enderecoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_enderecos.
     */
    data: tbl_enderecoCreateManyInput | tbl_enderecoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_endereco createManyAndReturn
   */
  export type tbl_enderecoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tbl_enderecos.
     */
    data: tbl_enderecoCreateManyInput | tbl_enderecoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tbl_endereco update
   */
  export type tbl_enderecoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_endereco.
     */
    data: XOR<tbl_enderecoUpdateInput, tbl_enderecoUncheckedUpdateInput>
    /**
     * Choose, which tbl_endereco to update.
     */
    where: tbl_enderecoWhereUniqueInput
  }

  /**
   * tbl_endereco updateMany
   */
  export type tbl_enderecoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_enderecos.
     */
    data: XOR<tbl_enderecoUpdateManyMutationInput, tbl_enderecoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_enderecos to update
     */
    where?: tbl_enderecoWhereInput
  }

  /**
   * tbl_endereco upsert
   */
  export type tbl_enderecoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_endereco to update in case it exists.
     */
    where: tbl_enderecoWhereUniqueInput
    /**
     * In case the tbl_endereco found by the `where` argument doesn't exist, create a new tbl_endereco with this data.
     */
    create: XOR<tbl_enderecoCreateInput, tbl_enderecoUncheckedCreateInput>
    /**
     * In case the tbl_endereco was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_enderecoUpdateInput, tbl_enderecoUncheckedUpdateInput>
  }

  /**
   * tbl_endereco delete
   */
  export type tbl_enderecoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter which tbl_endereco to delete.
     */
    where: tbl_enderecoWhereUniqueInput
  }

  /**
   * tbl_endereco deleteMany
   */
  export type tbl_enderecoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_enderecos to delete
     */
    where?: tbl_enderecoWhereInput
  }

  /**
   * tbl_endereco.tbl_usuarios
   */
  export type tbl_endereco$tbl_usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    where?: tbl_usuariosWhereInput
  }

  /**
   * tbl_endereco without action
   */
  export type tbl_enderecoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_usuarios
   */

  export type AggregateTbl_usuarios = {
    _count: Tbl_usuariosCountAggregateOutputType | null
    _avg: Tbl_usuariosAvgAggregateOutputType | null
    _sum: Tbl_usuariosSumAggregateOutputType | null
    _min: Tbl_usuariosMinAggregateOutputType | null
    _max: Tbl_usuariosMaxAggregateOutputType | null
  }

  export type Tbl_usuariosAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_usuariosSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_usuariosMinAggregateOutputType = {
    id: number | null
    cpf: string | null
    nome: string | null
    sobrenome: string | null
    email: string | null
    telefone: string | null
    foto_perfil: string | null
  }

  export type Tbl_usuariosMaxAggregateOutputType = {
    id: number | null
    cpf: string | null
    nome: string | null
    sobrenome: string | null
    email: string | null
    telefone: string | null
    foto_perfil: string | null
  }

  export type Tbl_usuariosCountAggregateOutputType = {
    id: number
    cpf: number
    nome: number
    sobrenome: number
    email: number
    telefone: number
    foto_perfil: number
    _all: number
  }


  export type Tbl_usuariosAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_usuariosSumAggregateInputType = {
    id?: true
  }

  export type Tbl_usuariosMinAggregateInputType = {
    id?: true
    cpf?: true
    nome?: true
    sobrenome?: true
    email?: true
    telefone?: true
    foto_perfil?: true
  }

  export type Tbl_usuariosMaxAggregateInputType = {
    id?: true
    cpf?: true
    nome?: true
    sobrenome?: true
    email?: true
    telefone?: true
    foto_perfil?: true
  }

  export type Tbl_usuariosCountAggregateInputType = {
    id?: true
    cpf?: true
    nome?: true
    sobrenome?: true
    email?: true
    telefone?: true
    foto_perfil?: true
    _all?: true
  }

  export type Tbl_usuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_usuarios to aggregate.
     */
    where?: tbl_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuariosOrderByWithRelationInput | tbl_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_usuarios
    **/
    _count?: true | Tbl_usuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_usuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_usuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_usuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_usuariosMaxAggregateInputType
  }

  export type GetTbl_usuariosAggregateType<T extends Tbl_usuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_usuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_usuarios[P]>
      : GetScalarType<T[P], AggregateTbl_usuarios[P]>
  }




  export type tbl_usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_usuariosWhereInput
    orderBy?: tbl_usuariosOrderByWithAggregationInput | tbl_usuariosOrderByWithAggregationInput[]
    by: Tbl_usuariosScalarFieldEnum[] | Tbl_usuariosScalarFieldEnum
    having?: tbl_usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_usuariosCountAggregateInputType | true
    _avg?: Tbl_usuariosAvgAggregateInputType
    _sum?: Tbl_usuariosSumAggregateInputType
    _min?: Tbl_usuariosMinAggregateInputType
    _max?: Tbl_usuariosMaxAggregateInputType
  }

  export type Tbl_usuariosGroupByOutputType = {
    id: number
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil: string | null
    _count: Tbl_usuariosCountAggregateOutputType | null
    _avg: Tbl_usuariosAvgAggregateOutputType | null
    _sum: Tbl_usuariosSumAggregateOutputType | null
    _min: Tbl_usuariosMinAggregateOutputType | null
    _max: Tbl_usuariosMaxAggregateOutputType | null
  }

  type GetTbl_usuariosGroupByPayload<T extends tbl_usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_usuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_usuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_usuariosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_usuariosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cpf?: boolean
    nome?: boolean
    sobrenome?: boolean
    email?: boolean
    telefone?: boolean
    foto_perfil?: boolean
    favoritos?: boolean | tbl_usuarios$favoritosArgs<ExtArgs>
    tbl_autenticacao?: boolean | tbl_usuarios$tbl_autenticacaoArgs<ExtArgs>
    tbl_endereco?: boolean | tbl_usuarios$tbl_enderecoArgs<ExtArgs>
    tbl_historico_viagens?: boolean | tbl_usuarios$tbl_historico_viagensArgs<ExtArgs>
    _count?: boolean | Tbl_usuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_usuarios"]>

  export type tbl_usuariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cpf?: boolean
    nome?: boolean
    sobrenome?: boolean
    email?: boolean
    telefone?: boolean
    foto_perfil?: boolean
  }, ExtArgs["result"]["tbl_usuarios"]>

  export type tbl_usuariosSelectScalar = {
    id?: boolean
    cpf?: boolean
    nome?: boolean
    sobrenome?: boolean
    email?: boolean
    telefone?: boolean
    foto_perfil?: boolean
  }

  export type tbl_usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoritos?: boolean | tbl_usuarios$favoritosArgs<ExtArgs>
    tbl_autenticacao?: boolean | tbl_usuarios$tbl_autenticacaoArgs<ExtArgs>
    tbl_endereco?: boolean | tbl_usuarios$tbl_enderecoArgs<ExtArgs>
    tbl_historico_viagens?: boolean | tbl_usuarios$tbl_historico_viagensArgs<ExtArgs>
    _count?: boolean | Tbl_usuariosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tbl_usuariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tbl_usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_usuarios"
    objects: {
      favoritos: Prisma.$favoritosPayload<ExtArgs>[]
      tbl_autenticacao: Prisma.$tbl_autenticacaoPayload<ExtArgs>[]
      tbl_endereco: Prisma.$tbl_enderecoPayload<ExtArgs>[]
      tbl_historico_viagens: Prisma.$tbl_historico_viagensPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cpf: string
      nome: string
      sobrenome: string
      email: string
      telefone: string
      foto_perfil: string | null
    }, ExtArgs["result"]["tbl_usuarios"]>
    composites: {}
  }

  type tbl_usuariosGetPayload<S extends boolean | null | undefined | tbl_usuariosDefaultArgs> = $Result.GetResult<Prisma.$tbl_usuariosPayload, S>

  type tbl_usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_usuariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_usuariosCountAggregateInputType | true
    }

  export interface tbl_usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_usuarios'], meta: { name: 'tbl_usuarios' } }
    /**
     * Find zero or one Tbl_usuarios that matches the filter.
     * @param {tbl_usuariosFindUniqueArgs} args - Arguments to find a Tbl_usuarios
     * @example
     * // Get one Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_usuariosFindUniqueArgs>(args: SelectSubset<T, tbl_usuariosFindUniqueArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_usuarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_usuariosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_usuarios
     * @example
     * // Get one Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_usuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuariosFindFirstArgs} args - Arguments to find a Tbl_usuarios
     * @example
     * // Get one Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_usuariosFindFirstArgs>(args?: SelectSubset<T, tbl_usuariosFindFirstArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuariosFindFirstOrThrowArgs} args - Arguments to find a Tbl_usuarios
     * @example
     * // Get one Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_usuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.findMany()
     * 
     * // Get first 10 Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_usuariosWithIdOnly = await prisma.tbl_usuarios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_usuariosFindManyArgs>(args?: SelectSubset<T, tbl_usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_usuarios.
     * @param {tbl_usuariosCreateArgs} args - Arguments to create a Tbl_usuarios.
     * @example
     * // Create one Tbl_usuarios
     * const Tbl_usuarios = await prisma.tbl_usuarios.create({
     *   data: {
     *     // ... data to create a Tbl_usuarios
     *   }
     * })
     * 
     */
    create<T extends tbl_usuariosCreateArgs>(args: SelectSubset<T, tbl_usuariosCreateArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_usuarios.
     * @param {tbl_usuariosCreateManyArgs} args - Arguments to create many Tbl_usuarios.
     * @example
     * // Create many Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_usuariosCreateManyArgs>(args?: SelectSubset<T, tbl_usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tbl_usuarios and returns the data saved in the database.
     * @param {tbl_usuariosCreateManyAndReturnArgs} args - Arguments to create many Tbl_usuarios.
     * @example
     * // Create many Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tbl_usuarios and only return the `id`
     * const tbl_usuariosWithIdOnly = await prisma.tbl_usuarios.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tbl_usuariosCreateManyAndReturnArgs>(args?: SelectSubset<T, tbl_usuariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tbl_usuarios.
     * @param {tbl_usuariosDeleteArgs} args - Arguments to delete one Tbl_usuarios.
     * @example
     * // Delete one Tbl_usuarios
     * const Tbl_usuarios = await prisma.tbl_usuarios.delete({
     *   where: {
     *     // ... filter to delete one Tbl_usuarios
     *   }
     * })
     * 
     */
    delete<T extends tbl_usuariosDeleteArgs>(args: SelectSubset<T, tbl_usuariosDeleteArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_usuarios.
     * @param {tbl_usuariosUpdateArgs} args - Arguments to update one Tbl_usuarios.
     * @example
     * // Update one Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_usuariosUpdateArgs>(args: SelectSubset<T, tbl_usuariosUpdateArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_usuarios.
     * @param {tbl_usuariosDeleteManyArgs} args - Arguments to filter Tbl_usuarios to delete.
     * @example
     * // Delete a few Tbl_usuarios
     * const { count } = await prisma.tbl_usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_usuariosDeleteManyArgs>(args?: SelectSubset<T, tbl_usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_usuariosUpdateManyArgs>(args: SelectSubset<T, tbl_usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_usuarios.
     * @param {tbl_usuariosUpsertArgs} args - Arguments to update or create a Tbl_usuarios.
     * @example
     * // Update or create a Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuarios.upsert({
     *   create: {
     *     // ... data to create a Tbl_usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_usuarios we want to update
     *   }
     * })
     */
    upsert<T extends tbl_usuariosUpsertArgs>(args: SelectSubset<T, tbl_usuariosUpsertArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuariosCountArgs} args - Arguments to filter Tbl_usuarios to count.
     * @example
     * // Count the number of Tbl_usuarios
     * const count = await prisma.tbl_usuarios.count({
     *   where: {
     *     // ... the filter for the Tbl_usuarios we want to count
     *   }
     * })
    **/
    count<T extends tbl_usuariosCountArgs>(
      args?: Subset<T, tbl_usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_usuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_usuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_usuariosAggregateArgs>(args: Subset<T, Tbl_usuariosAggregateArgs>): Prisma.PrismaPromise<GetTbl_usuariosAggregateType<T>>

    /**
     * Group by Tbl_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_usuariosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_usuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_usuarios model
   */
  readonly fields: tbl_usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    favoritos<T extends tbl_usuarios$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuarios$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_autenticacao<T extends tbl_usuarios$tbl_autenticacaoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuarios$tbl_autenticacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_endereco<T extends tbl_usuarios$tbl_enderecoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuarios$tbl_enderecoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_historico_viagens<T extends tbl_usuarios$tbl_historico_viagensArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuarios$tbl_historico_viagensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_usuarios model
   */ 
  interface tbl_usuariosFieldRefs {
    readonly id: FieldRef<"tbl_usuarios", 'Int'>
    readonly cpf: FieldRef<"tbl_usuarios", 'String'>
    readonly nome: FieldRef<"tbl_usuarios", 'String'>
    readonly sobrenome: FieldRef<"tbl_usuarios", 'String'>
    readonly email: FieldRef<"tbl_usuarios", 'String'>
    readonly telefone: FieldRef<"tbl_usuarios", 'String'>
    readonly foto_perfil: FieldRef<"tbl_usuarios", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_usuarios findUnique
   */
  export type tbl_usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuarios to fetch.
     */
    where: tbl_usuariosWhereUniqueInput
  }

  /**
   * tbl_usuarios findUniqueOrThrow
   */
  export type tbl_usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuarios to fetch.
     */
    where: tbl_usuariosWhereUniqueInput
  }

  /**
   * tbl_usuarios findFirst
   */
  export type tbl_usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuarios to fetch.
     */
    where?: tbl_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuariosOrderByWithRelationInput | tbl_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_usuarios.
     */
    cursor?: tbl_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_usuarios.
     */
    distinct?: Tbl_usuariosScalarFieldEnum | Tbl_usuariosScalarFieldEnum[]
  }

  /**
   * tbl_usuarios findFirstOrThrow
   */
  export type tbl_usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuarios to fetch.
     */
    where?: tbl_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuariosOrderByWithRelationInput | tbl_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_usuarios.
     */
    cursor?: tbl_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_usuarios.
     */
    distinct?: Tbl_usuariosScalarFieldEnum | Tbl_usuariosScalarFieldEnum[]
  }

  /**
   * tbl_usuarios findMany
   */
  export type tbl_usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuarios to fetch.
     */
    where?: tbl_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuariosOrderByWithRelationInput | tbl_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_usuarios.
     */
    cursor?: tbl_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    distinct?: Tbl_usuariosScalarFieldEnum | Tbl_usuariosScalarFieldEnum[]
  }

  /**
   * tbl_usuarios create
   */
  export type tbl_usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_usuarios.
     */
    data: XOR<tbl_usuariosCreateInput, tbl_usuariosUncheckedCreateInput>
  }

  /**
   * tbl_usuarios createMany
   */
  export type tbl_usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_usuarios.
     */
    data: tbl_usuariosCreateManyInput | tbl_usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_usuarios createManyAndReturn
   */
  export type tbl_usuariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tbl_usuarios.
     */
    data: tbl_usuariosCreateManyInput | tbl_usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_usuarios update
   */
  export type tbl_usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_usuarios.
     */
    data: XOR<tbl_usuariosUpdateInput, tbl_usuariosUncheckedUpdateInput>
    /**
     * Choose, which tbl_usuarios to update.
     */
    where: tbl_usuariosWhereUniqueInput
  }

  /**
   * tbl_usuarios updateMany
   */
  export type tbl_usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_usuarios.
     */
    data: XOR<tbl_usuariosUpdateManyMutationInput, tbl_usuariosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_usuarios to update
     */
    where?: tbl_usuariosWhereInput
  }

  /**
   * tbl_usuarios upsert
   */
  export type tbl_usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_usuarios to update in case it exists.
     */
    where: tbl_usuariosWhereUniqueInput
    /**
     * In case the tbl_usuarios found by the `where` argument doesn't exist, create a new tbl_usuarios with this data.
     */
    create: XOR<tbl_usuariosCreateInput, tbl_usuariosUncheckedCreateInput>
    /**
     * In case the tbl_usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_usuariosUpdateInput, tbl_usuariosUncheckedUpdateInput>
  }

  /**
   * tbl_usuarios delete
   */
  export type tbl_usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
    /**
     * Filter which tbl_usuarios to delete.
     */
    where: tbl_usuariosWhereUniqueInput
  }

  /**
   * tbl_usuarios deleteMany
   */
  export type tbl_usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_usuarios to delete
     */
    where?: tbl_usuariosWhereInput
  }

  /**
   * tbl_usuarios.favoritos
   */
  export type tbl_usuarios$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    where?: favoritosWhereInput
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    cursor?: favoritosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * tbl_usuarios.tbl_autenticacao
   */
  export type tbl_usuarios$tbl_autenticacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    where?: tbl_autenticacaoWhereInput
    orderBy?: tbl_autenticacaoOrderByWithRelationInput | tbl_autenticacaoOrderByWithRelationInput[]
    cursor?: tbl_autenticacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_autenticacaoScalarFieldEnum | Tbl_autenticacaoScalarFieldEnum[]
  }

  /**
   * tbl_usuarios.tbl_endereco
   */
  export type tbl_usuarios$tbl_enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    where?: tbl_enderecoWhereInput
    orderBy?: tbl_enderecoOrderByWithRelationInput | tbl_enderecoOrderByWithRelationInput[]
    cursor?: tbl_enderecoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_enderecoScalarFieldEnum | Tbl_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_usuarios.tbl_historico_viagens
   */
  export type tbl_usuarios$tbl_historico_viagensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    where?: tbl_historico_viagensWhereInput
    orderBy?: tbl_historico_viagensOrderByWithRelationInput | tbl_historico_viagensOrderByWithRelationInput[]
    cursor?: tbl_historico_viagensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_historico_viagensScalarFieldEnum | Tbl_historico_viagensScalarFieldEnum[]
  }

  /**
   * tbl_usuarios without action
   */
  export type tbl_usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuarios
     */
    select?: tbl_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuariosInclude<ExtArgs> | null
  }


  /**
   * Model tbl_autenticacao
   */

  export type AggregateTbl_autenticacao = {
    _count: Tbl_autenticacaoCountAggregateOutputType | null
    _avg: Tbl_autenticacaoAvgAggregateOutputType | null
    _sum: Tbl_autenticacaoSumAggregateOutputType | null
    _min: Tbl_autenticacaoMinAggregateOutputType | null
    _max: Tbl_autenticacaoMaxAggregateOutputType | null
  }

  export type Tbl_autenticacaoAvgAggregateOutputType = {
    id: number | null
    id_usuario: number | null
  }

  export type Tbl_autenticacaoSumAggregateOutputType = {
    id: number | null
    id_usuario: number | null
  }

  export type Tbl_autenticacaoMinAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    senha: string | null
  }

  export type Tbl_autenticacaoMaxAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    senha: string | null
  }

  export type Tbl_autenticacaoCountAggregateOutputType = {
    id: number
    id_usuario: number
    senha: number
    _all: number
  }


  export type Tbl_autenticacaoAvgAggregateInputType = {
    id?: true
    id_usuario?: true
  }

  export type Tbl_autenticacaoSumAggregateInputType = {
    id?: true
    id_usuario?: true
  }

  export type Tbl_autenticacaoMinAggregateInputType = {
    id?: true
    id_usuario?: true
    senha?: true
  }

  export type Tbl_autenticacaoMaxAggregateInputType = {
    id?: true
    id_usuario?: true
    senha?: true
  }

  export type Tbl_autenticacaoCountAggregateInputType = {
    id?: true
    id_usuario?: true
    senha?: true
    _all?: true
  }

  export type Tbl_autenticacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_autenticacao to aggregate.
     */
    where?: tbl_autenticacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_autenticacaos to fetch.
     */
    orderBy?: tbl_autenticacaoOrderByWithRelationInput | tbl_autenticacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_autenticacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_autenticacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_autenticacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_autenticacaos
    **/
    _count?: true | Tbl_autenticacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_autenticacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_autenticacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_autenticacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_autenticacaoMaxAggregateInputType
  }

  export type GetTbl_autenticacaoAggregateType<T extends Tbl_autenticacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_autenticacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_autenticacao[P]>
      : GetScalarType<T[P], AggregateTbl_autenticacao[P]>
  }




  export type tbl_autenticacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_autenticacaoWhereInput
    orderBy?: tbl_autenticacaoOrderByWithAggregationInput | tbl_autenticacaoOrderByWithAggregationInput[]
    by: Tbl_autenticacaoScalarFieldEnum[] | Tbl_autenticacaoScalarFieldEnum
    having?: tbl_autenticacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_autenticacaoCountAggregateInputType | true
    _avg?: Tbl_autenticacaoAvgAggregateInputType
    _sum?: Tbl_autenticacaoSumAggregateInputType
    _min?: Tbl_autenticacaoMinAggregateInputType
    _max?: Tbl_autenticacaoMaxAggregateInputType
  }

  export type Tbl_autenticacaoGroupByOutputType = {
    id: number
    id_usuario: number
    senha: string
    _count: Tbl_autenticacaoCountAggregateOutputType | null
    _avg: Tbl_autenticacaoAvgAggregateOutputType | null
    _sum: Tbl_autenticacaoSumAggregateOutputType | null
    _min: Tbl_autenticacaoMinAggregateOutputType | null
    _max: Tbl_autenticacaoMaxAggregateOutputType | null
  }

  type GetTbl_autenticacaoGroupByPayload<T extends tbl_autenticacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_autenticacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_autenticacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_autenticacaoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_autenticacaoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_autenticacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_usuario?: boolean
    senha?: boolean
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_autenticacao"]>

  export type tbl_autenticacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_usuario?: boolean
    senha?: boolean
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_autenticacao"]>

  export type tbl_autenticacaoSelectScalar = {
    id?: boolean
    id_usuario?: boolean
    senha?: boolean
  }

  export type tbl_autenticacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
  }
  export type tbl_autenticacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
  }

  export type $tbl_autenticacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_autenticacao"
    objects: {
      tbl_usuarios: Prisma.$tbl_usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_usuario: number
      senha: string
    }, ExtArgs["result"]["tbl_autenticacao"]>
    composites: {}
  }

  type tbl_autenticacaoGetPayload<S extends boolean | null | undefined | tbl_autenticacaoDefaultArgs> = $Result.GetResult<Prisma.$tbl_autenticacaoPayload, S>

  type tbl_autenticacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_autenticacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_autenticacaoCountAggregateInputType | true
    }

  export interface tbl_autenticacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_autenticacao'], meta: { name: 'tbl_autenticacao' } }
    /**
     * Find zero or one Tbl_autenticacao that matches the filter.
     * @param {tbl_autenticacaoFindUniqueArgs} args - Arguments to find a Tbl_autenticacao
     * @example
     * // Get one Tbl_autenticacao
     * const tbl_autenticacao = await prisma.tbl_autenticacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_autenticacaoFindUniqueArgs>(args: SelectSubset<T, tbl_autenticacaoFindUniqueArgs<ExtArgs>>): Prisma__tbl_autenticacaoClient<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_autenticacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_autenticacaoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_autenticacao
     * @example
     * // Get one Tbl_autenticacao
     * const tbl_autenticacao = await prisma.tbl_autenticacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_autenticacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_autenticacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_autenticacaoClient<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_autenticacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_autenticacaoFindFirstArgs} args - Arguments to find a Tbl_autenticacao
     * @example
     * // Get one Tbl_autenticacao
     * const tbl_autenticacao = await prisma.tbl_autenticacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_autenticacaoFindFirstArgs>(args?: SelectSubset<T, tbl_autenticacaoFindFirstArgs<ExtArgs>>): Prisma__tbl_autenticacaoClient<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_autenticacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_autenticacaoFindFirstOrThrowArgs} args - Arguments to find a Tbl_autenticacao
     * @example
     * // Get one Tbl_autenticacao
     * const tbl_autenticacao = await prisma.tbl_autenticacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_autenticacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_autenticacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_autenticacaoClient<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_autenticacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_autenticacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_autenticacaos
     * const tbl_autenticacaos = await prisma.tbl_autenticacao.findMany()
     * 
     * // Get first 10 Tbl_autenticacaos
     * const tbl_autenticacaos = await prisma.tbl_autenticacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_autenticacaoWithIdOnly = await prisma.tbl_autenticacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_autenticacaoFindManyArgs>(args?: SelectSubset<T, tbl_autenticacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_autenticacao.
     * @param {tbl_autenticacaoCreateArgs} args - Arguments to create a Tbl_autenticacao.
     * @example
     * // Create one Tbl_autenticacao
     * const Tbl_autenticacao = await prisma.tbl_autenticacao.create({
     *   data: {
     *     // ... data to create a Tbl_autenticacao
     *   }
     * })
     * 
     */
    create<T extends tbl_autenticacaoCreateArgs>(args: SelectSubset<T, tbl_autenticacaoCreateArgs<ExtArgs>>): Prisma__tbl_autenticacaoClient<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_autenticacaos.
     * @param {tbl_autenticacaoCreateManyArgs} args - Arguments to create many Tbl_autenticacaos.
     * @example
     * // Create many Tbl_autenticacaos
     * const tbl_autenticacao = await prisma.tbl_autenticacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_autenticacaoCreateManyArgs>(args?: SelectSubset<T, tbl_autenticacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tbl_autenticacaos and returns the data saved in the database.
     * @param {tbl_autenticacaoCreateManyAndReturnArgs} args - Arguments to create many Tbl_autenticacaos.
     * @example
     * // Create many Tbl_autenticacaos
     * const tbl_autenticacao = await prisma.tbl_autenticacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tbl_autenticacaos and only return the `id`
     * const tbl_autenticacaoWithIdOnly = await prisma.tbl_autenticacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tbl_autenticacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, tbl_autenticacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tbl_autenticacao.
     * @param {tbl_autenticacaoDeleteArgs} args - Arguments to delete one Tbl_autenticacao.
     * @example
     * // Delete one Tbl_autenticacao
     * const Tbl_autenticacao = await prisma.tbl_autenticacao.delete({
     *   where: {
     *     // ... filter to delete one Tbl_autenticacao
     *   }
     * })
     * 
     */
    delete<T extends tbl_autenticacaoDeleteArgs>(args: SelectSubset<T, tbl_autenticacaoDeleteArgs<ExtArgs>>): Prisma__tbl_autenticacaoClient<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_autenticacao.
     * @param {tbl_autenticacaoUpdateArgs} args - Arguments to update one Tbl_autenticacao.
     * @example
     * // Update one Tbl_autenticacao
     * const tbl_autenticacao = await prisma.tbl_autenticacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_autenticacaoUpdateArgs>(args: SelectSubset<T, tbl_autenticacaoUpdateArgs<ExtArgs>>): Prisma__tbl_autenticacaoClient<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_autenticacaos.
     * @param {tbl_autenticacaoDeleteManyArgs} args - Arguments to filter Tbl_autenticacaos to delete.
     * @example
     * // Delete a few Tbl_autenticacaos
     * const { count } = await prisma.tbl_autenticacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_autenticacaoDeleteManyArgs>(args?: SelectSubset<T, tbl_autenticacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_autenticacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_autenticacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_autenticacaos
     * const tbl_autenticacao = await prisma.tbl_autenticacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_autenticacaoUpdateManyArgs>(args: SelectSubset<T, tbl_autenticacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_autenticacao.
     * @param {tbl_autenticacaoUpsertArgs} args - Arguments to update or create a Tbl_autenticacao.
     * @example
     * // Update or create a Tbl_autenticacao
     * const tbl_autenticacao = await prisma.tbl_autenticacao.upsert({
     *   create: {
     *     // ... data to create a Tbl_autenticacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_autenticacao we want to update
     *   }
     * })
     */
    upsert<T extends tbl_autenticacaoUpsertArgs>(args: SelectSubset<T, tbl_autenticacaoUpsertArgs<ExtArgs>>): Prisma__tbl_autenticacaoClient<$Result.GetResult<Prisma.$tbl_autenticacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_autenticacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_autenticacaoCountArgs} args - Arguments to filter Tbl_autenticacaos to count.
     * @example
     * // Count the number of Tbl_autenticacaos
     * const count = await prisma.tbl_autenticacao.count({
     *   where: {
     *     // ... the filter for the Tbl_autenticacaos we want to count
     *   }
     * })
    **/
    count<T extends tbl_autenticacaoCountArgs>(
      args?: Subset<T, tbl_autenticacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_autenticacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_autenticacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_autenticacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_autenticacaoAggregateArgs>(args: Subset<T, Tbl_autenticacaoAggregateArgs>): Prisma.PrismaPromise<GetTbl_autenticacaoAggregateType<T>>

    /**
     * Group by Tbl_autenticacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_autenticacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_autenticacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_autenticacaoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_autenticacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_autenticacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_autenticacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_autenticacao model
   */
  readonly fields: tbl_autenticacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_autenticacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_autenticacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_usuarios<T extends tbl_usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuariosDefaultArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_autenticacao model
   */ 
  interface tbl_autenticacaoFieldRefs {
    readonly id: FieldRef<"tbl_autenticacao", 'Int'>
    readonly id_usuario: FieldRef<"tbl_autenticacao", 'Int'>
    readonly senha: FieldRef<"tbl_autenticacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_autenticacao findUnique
   */
  export type tbl_autenticacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_autenticacao to fetch.
     */
    where: tbl_autenticacaoWhereUniqueInput
  }

  /**
   * tbl_autenticacao findUniqueOrThrow
   */
  export type tbl_autenticacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_autenticacao to fetch.
     */
    where: tbl_autenticacaoWhereUniqueInput
  }

  /**
   * tbl_autenticacao findFirst
   */
  export type tbl_autenticacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_autenticacao to fetch.
     */
    where?: tbl_autenticacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_autenticacaos to fetch.
     */
    orderBy?: tbl_autenticacaoOrderByWithRelationInput | tbl_autenticacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_autenticacaos.
     */
    cursor?: tbl_autenticacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_autenticacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_autenticacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_autenticacaos.
     */
    distinct?: Tbl_autenticacaoScalarFieldEnum | Tbl_autenticacaoScalarFieldEnum[]
  }

  /**
   * tbl_autenticacao findFirstOrThrow
   */
  export type tbl_autenticacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_autenticacao to fetch.
     */
    where?: tbl_autenticacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_autenticacaos to fetch.
     */
    orderBy?: tbl_autenticacaoOrderByWithRelationInput | tbl_autenticacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_autenticacaos.
     */
    cursor?: tbl_autenticacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_autenticacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_autenticacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_autenticacaos.
     */
    distinct?: Tbl_autenticacaoScalarFieldEnum | Tbl_autenticacaoScalarFieldEnum[]
  }

  /**
   * tbl_autenticacao findMany
   */
  export type tbl_autenticacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_autenticacaos to fetch.
     */
    where?: tbl_autenticacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_autenticacaos to fetch.
     */
    orderBy?: tbl_autenticacaoOrderByWithRelationInput | tbl_autenticacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_autenticacaos.
     */
    cursor?: tbl_autenticacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_autenticacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_autenticacaos.
     */
    skip?: number
    distinct?: Tbl_autenticacaoScalarFieldEnum | Tbl_autenticacaoScalarFieldEnum[]
  }

  /**
   * tbl_autenticacao create
   */
  export type tbl_autenticacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_autenticacao.
     */
    data: XOR<tbl_autenticacaoCreateInput, tbl_autenticacaoUncheckedCreateInput>
  }

  /**
   * tbl_autenticacao createMany
   */
  export type tbl_autenticacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_autenticacaos.
     */
    data: tbl_autenticacaoCreateManyInput | tbl_autenticacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_autenticacao createManyAndReturn
   */
  export type tbl_autenticacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tbl_autenticacaos.
     */
    data: tbl_autenticacaoCreateManyInput | tbl_autenticacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tbl_autenticacao update
   */
  export type tbl_autenticacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_autenticacao.
     */
    data: XOR<tbl_autenticacaoUpdateInput, tbl_autenticacaoUncheckedUpdateInput>
    /**
     * Choose, which tbl_autenticacao to update.
     */
    where: tbl_autenticacaoWhereUniqueInput
  }

  /**
   * tbl_autenticacao updateMany
   */
  export type tbl_autenticacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_autenticacaos.
     */
    data: XOR<tbl_autenticacaoUpdateManyMutationInput, tbl_autenticacaoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_autenticacaos to update
     */
    where?: tbl_autenticacaoWhereInput
  }

  /**
   * tbl_autenticacao upsert
   */
  export type tbl_autenticacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_autenticacao to update in case it exists.
     */
    where: tbl_autenticacaoWhereUniqueInput
    /**
     * In case the tbl_autenticacao found by the `where` argument doesn't exist, create a new tbl_autenticacao with this data.
     */
    create: XOR<tbl_autenticacaoCreateInput, tbl_autenticacaoUncheckedCreateInput>
    /**
     * In case the tbl_autenticacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_autenticacaoUpdateInput, tbl_autenticacaoUncheckedUpdateInput>
  }

  /**
   * tbl_autenticacao delete
   */
  export type tbl_autenticacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
    /**
     * Filter which tbl_autenticacao to delete.
     */
    where: tbl_autenticacaoWhereUniqueInput
  }

  /**
   * tbl_autenticacao deleteMany
   */
  export type tbl_autenticacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_autenticacaos to delete
     */
    where?: tbl_autenticacaoWhereInput
  }

  /**
   * tbl_autenticacao without action
   */
  export type tbl_autenticacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_autenticacao
     */
    select?: tbl_autenticacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_autenticacaoInclude<ExtArgs> | null
  }


  /**
   * Model favoritos
   */

  export type AggregateFavoritos = {
    _count: FavoritosCountAggregateOutputType | null
    _avg: FavoritosAvgAggregateOutputType | null
    _sum: FavoritosSumAggregateOutputType | null
    _min: FavoritosMinAggregateOutputType | null
    _max: FavoritosMaxAggregateOutputType | null
  }

  export type FavoritosAvgAggregateOutputType = {
    id: number | null
    id_itinerario: number | null
    id_usuario: number | null
  }

  export type FavoritosSumAggregateOutputType = {
    id: number | null
    id_itinerario: number | null
    id_usuario: number | null
  }

  export type FavoritosMinAggregateOutputType = {
    id: number | null
    id_itinerario: number | null
    id_usuario: number | null
  }

  export type FavoritosMaxAggregateOutputType = {
    id: number | null
    id_itinerario: number | null
    id_usuario: number | null
  }

  export type FavoritosCountAggregateOutputType = {
    id: number
    id_itinerario: number
    id_usuario: number
    _all: number
  }


  export type FavoritosAvgAggregateInputType = {
    id?: true
    id_itinerario?: true
    id_usuario?: true
  }

  export type FavoritosSumAggregateInputType = {
    id?: true
    id_itinerario?: true
    id_usuario?: true
  }

  export type FavoritosMinAggregateInputType = {
    id?: true
    id_itinerario?: true
    id_usuario?: true
  }

  export type FavoritosMaxAggregateInputType = {
    id?: true
    id_itinerario?: true
    id_usuario?: true
  }

  export type FavoritosCountAggregateInputType = {
    id?: true
    id_itinerario?: true
    id_usuario?: true
    _all?: true
  }

  export type FavoritosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which favoritos to aggregate.
     */
    where?: favoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favoritos to fetch.
     */
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: favoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned favoritos
    **/
    _count?: true | FavoritosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FavoritosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FavoritosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoritosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoritosMaxAggregateInputType
  }

  export type GetFavoritosAggregateType<T extends FavoritosAggregateArgs> = {
        [P in keyof T & keyof AggregateFavoritos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavoritos[P]>
      : GetScalarType<T[P], AggregateFavoritos[P]>
  }




  export type favoritosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: favoritosWhereInput
    orderBy?: favoritosOrderByWithAggregationInput | favoritosOrderByWithAggregationInput[]
    by: FavoritosScalarFieldEnum[] | FavoritosScalarFieldEnum
    having?: favoritosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoritosCountAggregateInputType | true
    _avg?: FavoritosAvgAggregateInputType
    _sum?: FavoritosSumAggregateInputType
    _min?: FavoritosMinAggregateInputType
    _max?: FavoritosMaxAggregateInputType
  }

  export type FavoritosGroupByOutputType = {
    id: number
    id_itinerario: number
    id_usuario: number
    _count: FavoritosCountAggregateOutputType | null
    _avg: FavoritosAvgAggregateOutputType | null
    _sum: FavoritosSumAggregateOutputType | null
    _min: FavoritosMinAggregateOutputType | null
    _max: FavoritosMaxAggregateOutputType | null
  }

  type GetFavoritosGroupByPayload<T extends favoritosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoritosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoritosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoritosGroupByOutputType[P]>
            : GetScalarType<T[P], FavoritosGroupByOutputType[P]>
        }
      >
    >


  export type favoritosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_itinerario?: boolean
    id_usuario?: boolean
    itinerario?: boolean | itinerarioDefaultArgs<ExtArgs>
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type favoritosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_itinerario?: boolean
    id_usuario?: boolean
    itinerario?: boolean | itinerarioDefaultArgs<ExtArgs>
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type favoritosSelectScalar = {
    id?: boolean
    id_itinerario?: boolean
    id_usuario?: boolean
  }

  export type favoritosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itinerario?: boolean | itinerarioDefaultArgs<ExtArgs>
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
  }
  export type favoritosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itinerario?: boolean | itinerarioDefaultArgs<ExtArgs>
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
  }

  export type $favoritosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "favoritos"
    objects: {
      itinerario: Prisma.$itinerarioPayload<ExtArgs>
      tbl_usuarios: Prisma.$tbl_usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_itinerario: number
      id_usuario: number
    }, ExtArgs["result"]["favoritos"]>
    composites: {}
  }

  type favoritosGetPayload<S extends boolean | null | undefined | favoritosDefaultArgs> = $Result.GetResult<Prisma.$favoritosPayload, S>

  type favoritosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<favoritosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FavoritosCountAggregateInputType | true
    }

  export interface favoritosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['favoritos'], meta: { name: 'favoritos' } }
    /**
     * Find zero or one Favoritos that matches the filter.
     * @param {favoritosFindUniqueArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends favoritosFindUniqueArgs>(args: SelectSubset<T, favoritosFindUniqueArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Favoritos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {favoritosFindUniqueOrThrowArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends favoritosFindUniqueOrThrowArgs>(args: SelectSubset<T, favoritosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosFindFirstArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends favoritosFindFirstArgs>(args?: SelectSubset<T, favoritosFindFirstArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Favoritos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosFindFirstOrThrowArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends favoritosFindFirstOrThrowArgs>(args?: SelectSubset<T, favoritosFindFirstOrThrowArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favoritos
     * const favoritos = await prisma.favoritos.findMany()
     * 
     * // Get first 10 Favoritos
     * const favoritos = await prisma.favoritos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends favoritosFindManyArgs>(args?: SelectSubset<T, favoritosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Favoritos.
     * @param {favoritosCreateArgs} args - Arguments to create a Favoritos.
     * @example
     * // Create one Favoritos
     * const Favoritos = await prisma.favoritos.create({
     *   data: {
     *     // ... data to create a Favoritos
     *   }
     * })
     * 
     */
    create<T extends favoritosCreateArgs>(args: SelectSubset<T, favoritosCreateArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Favoritos.
     * @param {favoritosCreateManyArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favoritos = await prisma.favoritos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends favoritosCreateManyArgs>(args?: SelectSubset<T, favoritosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favoritos and returns the data saved in the database.
     * @param {favoritosCreateManyAndReturnArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favoritos = await prisma.favoritos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favoritos and only return the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends favoritosCreateManyAndReturnArgs>(args?: SelectSubset<T, favoritosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Favoritos.
     * @param {favoritosDeleteArgs} args - Arguments to delete one Favoritos.
     * @example
     * // Delete one Favoritos
     * const Favoritos = await prisma.favoritos.delete({
     *   where: {
     *     // ... filter to delete one Favoritos
     *   }
     * })
     * 
     */
    delete<T extends favoritosDeleteArgs>(args: SelectSubset<T, favoritosDeleteArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Favoritos.
     * @param {favoritosUpdateArgs} args - Arguments to update one Favoritos.
     * @example
     * // Update one Favoritos
     * const favoritos = await prisma.favoritos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends favoritosUpdateArgs>(args: SelectSubset<T, favoritosUpdateArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Favoritos.
     * @param {favoritosDeleteManyArgs} args - Arguments to filter Favoritos to delete.
     * @example
     * // Delete a few Favoritos
     * const { count } = await prisma.favoritos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends favoritosDeleteManyArgs>(args?: SelectSubset<T, favoritosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favoritos
     * const favoritos = await prisma.favoritos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends favoritosUpdateManyArgs>(args: SelectSubset<T, favoritosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Favoritos.
     * @param {favoritosUpsertArgs} args - Arguments to update or create a Favoritos.
     * @example
     * // Update or create a Favoritos
     * const favoritos = await prisma.favoritos.upsert({
     *   create: {
     *     // ... data to create a Favoritos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favoritos we want to update
     *   }
     * })
     */
    upsert<T extends favoritosUpsertArgs>(args: SelectSubset<T, favoritosUpsertArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosCountArgs} args - Arguments to filter Favoritos to count.
     * @example
     * // Count the number of Favoritos
     * const count = await prisma.favoritos.count({
     *   where: {
     *     // ... the filter for the Favoritos we want to count
     *   }
     * })
    **/
    count<T extends favoritosCountArgs>(
      args?: Subset<T, favoritosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoritosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoritosAggregateArgs>(args: Subset<T, FavoritosAggregateArgs>): Prisma.PrismaPromise<GetFavoritosAggregateType<T>>

    /**
     * Group by Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends favoritosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: favoritosGroupByArgs['orderBy'] }
        : { orderBy?: favoritosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, favoritosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoritosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the favoritos model
   */
  readonly fields: favoritosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for favoritos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__favoritosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    itinerario<T extends itinerarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, itinerarioDefaultArgs<ExtArgs>>): Prisma__itinerarioClient<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_usuarios<T extends tbl_usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuariosDefaultArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the favoritos model
   */ 
  interface favoritosFieldRefs {
    readonly id: FieldRef<"favoritos", 'Int'>
    readonly id_itinerario: FieldRef<"favoritos", 'Int'>
    readonly id_usuario: FieldRef<"favoritos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * favoritos findUnique
   */
  export type favoritosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where: favoritosWhereUniqueInput
  }

  /**
   * favoritos findUniqueOrThrow
   */
  export type favoritosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where: favoritosWhereUniqueInput
  }

  /**
   * favoritos findFirst
   */
  export type favoritosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where?: favoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favoritos to fetch.
     */
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for favoritos.
     */
    cursor?: favoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of favoritos.
     */
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * favoritos findFirstOrThrow
   */
  export type favoritosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where?: favoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favoritos to fetch.
     */
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for favoritos.
     */
    cursor?: favoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of favoritos.
     */
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * favoritos findMany
   */
  export type favoritosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where?: favoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favoritos to fetch.
     */
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing favoritos.
     */
    cursor?: favoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favoritos.
     */
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * favoritos create
   */
  export type favoritosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * The data needed to create a favoritos.
     */
    data: XOR<favoritosCreateInput, favoritosUncheckedCreateInput>
  }

  /**
   * favoritos createMany
   */
  export type favoritosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many favoritos.
     */
    data: favoritosCreateManyInput | favoritosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * favoritos createManyAndReturn
   */
  export type favoritosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many favoritos.
     */
    data: favoritosCreateManyInput | favoritosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * favoritos update
   */
  export type favoritosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * The data needed to update a favoritos.
     */
    data: XOR<favoritosUpdateInput, favoritosUncheckedUpdateInput>
    /**
     * Choose, which favoritos to update.
     */
    where: favoritosWhereUniqueInput
  }

  /**
   * favoritos updateMany
   */
  export type favoritosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update favoritos.
     */
    data: XOR<favoritosUpdateManyMutationInput, favoritosUncheckedUpdateManyInput>
    /**
     * Filter which favoritos to update
     */
    where?: favoritosWhereInput
  }

  /**
   * favoritos upsert
   */
  export type favoritosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * The filter to search for the favoritos to update in case it exists.
     */
    where: favoritosWhereUniqueInput
    /**
     * In case the favoritos found by the `where` argument doesn't exist, create a new favoritos with this data.
     */
    create: XOR<favoritosCreateInput, favoritosUncheckedCreateInput>
    /**
     * In case the favoritos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<favoritosUpdateInput, favoritosUncheckedUpdateInput>
  }

  /**
   * favoritos delete
   */
  export type favoritosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter which favoritos to delete.
     */
    where: favoritosWhereUniqueInput
  }

  /**
   * favoritos deleteMany
   */
  export type favoritosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which favoritos to delete
     */
    where?: favoritosWhereInput
  }

  /**
   * favoritos without action
   */
  export type favoritosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
  }


  /**
   * Model itinerario
   */

  export type AggregateItinerario = {
    _count: ItinerarioCountAggregateOutputType | null
    _avg: ItinerarioAvgAggregateOutputType | null
    _sum: ItinerarioSumAggregateOutputType | null
    _min: ItinerarioMinAggregateOutputType | null
    _max: ItinerarioMaxAggregateOutputType | null
  }

  export type ItinerarioAvgAggregateOutputType = {
    id: number | null
  }

  export type ItinerarioSumAggregateOutputType = {
    id: number | null
  }

  export type ItinerarioMinAggregateOutputType = {
    id: number | null
    origem: string | null
    destino: string | null
    linha: string | null
  }

  export type ItinerarioMaxAggregateOutputType = {
    id: number | null
    origem: string | null
    destino: string | null
    linha: string | null
  }

  export type ItinerarioCountAggregateOutputType = {
    id: number
    origem: number
    destino: number
    linha: number
    _all: number
  }


  export type ItinerarioAvgAggregateInputType = {
    id?: true
  }

  export type ItinerarioSumAggregateInputType = {
    id?: true
  }

  export type ItinerarioMinAggregateInputType = {
    id?: true
    origem?: true
    destino?: true
    linha?: true
  }

  export type ItinerarioMaxAggregateInputType = {
    id?: true
    origem?: true
    destino?: true
    linha?: true
  }

  export type ItinerarioCountAggregateInputType = {
    id?: true
    origem?: true
    destino?: true
    linha?: true
    _all?: true
  }

  export type ItinerarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which itinerario to aggregate.
     */
    where?: itinerarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of itinerarios to fetch.
     */
    orderBy?: itinerarioOrderByWithRelationInput | itinerarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: itinerarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` itinerarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` itinerarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned itinerarios
    **/
    _count?: true | ItinerarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItinerarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItinerarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItinerarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItinerarioMaxAggregateInputType
  }

  export type GetItinerarioAggregateType<T extends ItinerarioAggregateArgs> = {
        [P in keyof T & keyof AggregateItinerario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItinerario[P]>
      : GetScalarType<T[P], AggregateItinerario[P]>
  }




  export type itinerarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: itinerarioWhereInput
    orderBy?: itinerarioOrderByWithAggregationInput | itinerarioOrderByWithAggregationInput[]
    by: ItinerarioScalarFieldEnum[] | ItinerarioScalarFieldEnum
    having?: itinerarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItinerarioCountAggregateInputType | true
    _avg?: ItinerarioAvgAggregateInputType
    _sum?: ItinerarioSumAggregateInputType
    _min?: ItinerarioMinAggregateInputType
    _max?: ItinerarioMaxAggregateInputType
  }

  export type ItinerarioGroupByOutputType = {
    id: number
    origem: string
    destino: string
    linha: string
    _count: ItinerarioCountAggregateOutputType | null
    _avg: ItinerarioAvgAggregateOutputType | null
    _sum: ItinerarioSumAggregateOutputType | null
    _min: ItinerarioMinAggregateOutputType | null
    _max: ItinerarioMaxAggregateOutputType | null
  }

  type GetItinerarioGroupByPayload<T extends itinerarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItinerarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItinerarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItinerarioGroupByOutputType[P]>
            : GetScalarType<T[P], ItinerarioGroupByOutputType[P]>
        }
      >
    >


  export type itinerarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    origem?: boolean
    destino?: boolean
    linha?: boolean
    favoritos?: boolean | itinerario$favoritosArgs<ExtArgs>
    _count?: boolean | ItinerarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["itinerario"]>

  export type itinerarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    origem?: boolean
    destino?: boolean
    linha?: boolean
  }, ExtArgs["result"]["itinerario"]>

  export type itinerarioSelectScalar = {
    id?: boolean
    origem?: boolean
    destino?: boolean
    linha?: boolean
  }

  export type itinerarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoritos?: boolean | itinerario$favoritosArgs<ExtArgs>
    _count?: boolean | ItinerarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type itinerarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $itinerarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "itinerario"
    objects: {
      favoritos: Prisma.$favoritosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      origem: string
      destino: string
      linha: string
    }, ExtArgs["result"]["itinerario"]>
    composites: {}
  }

  type itinerarioGetPayload<S extends boolean | null | undefined | itinerarioDefaultArgs> = $Result.GetResult<Prisma.$itinerarioPayload, S>

  type itinerarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<itinerarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ItinerarioCountAggregateInputType | true
    }

  export interface itinerarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['itinerario'], meta: { name: 'itinerario' } }
    /**
     * Find zero or one Itinerario that matches the filter.
     * @param {itinerarioFindUniqueArgs} args - Arguments to find a Itinerario
     * @example
     * // Get one Itinerario
     * const itinerario = await prisma.itinerario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends itinerarioFindUniqueArgs>(args: SelectSubset<T, itinerarioFindUniqueArgs<ExtArgs>>): Prisma__itinerarioClient<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Itinerario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {itinerarioFindUniqueOrThrowArgs} args - Arguments to find a Itinerario
     * @example
     * // Get one Itinerario
     * const itinerario = await prisma.itinerario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends itinerarioFindUniqueOrThrowArgs>(args: SelectSubset<T, itinerarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__itinerarioClient<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Itinerario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itinerarioFindFirstArgs} args - Arguments to find a Itinerario
     * @example
     * // Get one Itinerario
     * const itinerario = await prisma.itinerario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends itinerarioFindFirstArgs>(args?: SelectSubset<T, itinerarioFindFirstArgs<ExtArgs>>): Prisma__itinerarioClient<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Itinerario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itinerarioFindFirstOrThrowArgs} args - Arguments to find a Itinerario
     * @example
     * // Get one Itinerario
     * const itinerario = await prisma.itinerario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends itinerarioFindFirstOrThrowArgs>(args?: SelectSubset<T, itinerarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__itinerarioClient<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Itinerarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itinerarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Itinerarios
     * const itinerarios = await prisma.itinerario.findMany()
     * 
     * // Get first 10 Itinerarios
     * const itinerarios = await prisma.itinerario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const itinerarioWithIdOnly = await prisma.itinerario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends itinerarioFindManyArgs>(args?: SelectSubset<T, itinerarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Itinerario.
     * @param {itinerarioCreateArgs} args - Arguments to create a Itinerario.
     * @example
     * // Create one Itinerario
     * const Itinerario = await prisma.itinerario.create({
     *   data: {
     *     // ... data to create a Itinerario
     *   }
     * })
     * 
     */
    create<T extends itinerarioCreateArgs>(args: SelectSubset<T, itinerarioCreateArgs<ExtArgs>>): Prisma__itinerarioClient<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Itinerarios.
     * @param {itinerarioCreateManyArgs} args - Arguments to create many Itinerarios.
     * @example
     * // Create many Itinerarios
     * const itinerario = await prisma.itinerario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends itinerarioCreateManyArgs>(args?: SelectSubset<T, itinerarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Itinerarios and returns the data saved in the database.
     * @param {itinerarioCreateManyAndReturnArgs} args - Arguments to create many Itinerarios.
     * @example
     * // Create many Itinerarios
     * const itinerario = await prisma.itinerario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Itinerarios and only return the `id`
     * const itinerarioWithIdOnly = await prisma.itinerario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends itinerarioCreateManyAndReturnArgs>(args?: SelectSubset<T, itinerarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Itinerario.
     * @param {itinerarioDeleteArgs} args - Arguments to delete one Itinerario.
     * @example
     * // Delete one Itinerario
     * const Itinerario = await prisma.itinerario.delete({
     *   where: {
     *     // ... filter to delete one Itinerario
     *   }
     * })
     * 
     */
    delete<T extends itinerarioDeleteArgs>(args: SelectSubset<T, itinerarioDeleteArgs<ExtArgs>>): Prisma__itinerarioClient<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Itinerario.
     * @param {itinerarioUpdateArgs} args - Arguments to update one Itinerario.
     * @example
     * // Update one Itinerario
     * const itinerario = await prisma.itinerario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends itinerarioUpdateArgs>(args: SelectSubset<T, itinerarioUpdateArgs<ExtArgs>>): Prisma__itinerarioClient<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Itinerarios.
     * @param {itinerarioDeleteManyArgs} args - Arguments to filter Itinerarios to delete.
     * @example
     * // Delete a few Itinerarios
     * const { count } = await prisma.itinerario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends itinerarioDeleteManyArgs>(args?: SelectSubset<T, itinerarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Itinerarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itinerarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Itinerarios
     * const itinerario = await prisma.itinerario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends itinerarioUpdateManyArgs>(args: SelectSubset<T, itinerarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Itinerario.
     * @param {itinerarioUpsertArgs} args - Arguments to update or create a Itinerario.
     * @example
     * // Update or create a Itinerario
     * const itinerario = await prisma.itinerario.upsert({
     *   create: {
     *     // ... data to create a Itinerario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Itinerario we want to update
     *   }
     * })
     */
    upsert<T extends itinerarioUpsertArgs>(args: SelectSubset<T, itinerarioUpsertArgs<ExtArgs>>): Prisma__itinerarioClient<$Result.GetResult<Prisma.$itinerarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Itinerarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itinerarioCountArgs} args - Arguments to filter Itinerarios to count.
     * @example
     * // Count the number of Itinerarios
     * const count = await prisma.itinerario.count({
     *   where: {
     *     // ... the filter for the Itinerarios we want to count
     *   }
     * })
    **/
    count<T extends itinerarioCountArgs>(
      args?: Subset<T, itinerarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItinerarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Itinerario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItinerarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItinerarioAggregateArgs>(args: Subset<T, ItinerarioAggregateArgs>): Prisma.PrismaPromise<GetItinerarioAggregateType<T>>

    /**
     * Group by Itinerario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itinerarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends itinerarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: itinerarioGroupByArgs['orderBy'] }
        : { orderBy?: itinerarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, itinerarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItinerarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the itinerario model
   */
  readonly fields: itinerarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for itinerario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__itinerarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    favoritos<T extends itinerario$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, itinerario$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the itinerario model
   */ 
  interface itinerarioFieldRefs {
    readonly id: FieldRef<"itinerario", 'Int'>
    readonly origem: FieldRef<"itinerario", 'String'>
    readonly destino: FieldRef<"itinerario", 'String'>
    readonly linha: FieldRef<"itinerario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * itinerario findUnique
   */
  export type itinerarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
    /**
     * Filter, which itinerario to fetch.
     */
    where: itinerarioWhereUniqueInput
  }

  /**
   * itinerario findUniqueOrThrow
   */
  export type itinerarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
    /**
     * Filter, which itinerario to fetch.
     */
    where: itinerarioWhereUniqueInput
  }

  /**
   * itinerario findFirst
   */
  export type itinerarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
    /**
     * Filter, which itinerario to fetch.
     */
    where?: itinerarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of itinerarios to fetch.
     */
    orderBy?: itinerarioOrderByWithRelationInput | itinerarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for itinerarios.
     */
    cursor?: itinerarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` itinerarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` itinerarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of itinerarios.
     */
    distinct?: ItinerarioScalarFieldEnum | ItinerarioScalarFieldEnum[]
  }

  /**
   * itinerario findFirstOrThrow
   */
  export type itinerarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
    /**
     * Filter, which itinerario to fetch.
     */
    where?: itinerarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of itinerarios to fetch.
     */
    orderBy?: itinerarioOrderByWithRelationInput | itinerarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for itinerarios.
     */
    cursor?: itinerarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` itinerarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` itinerarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of itinerarios.
     */
    distinct?: ItinerarioScalarFieldEnum | ItinerarioScalarFieldEnum[]
  }

  /**
   * itinerario findMany
   */
  export type itinerarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
    /**
     * Filter, which itinerarios to fetch.
     */
    where?: itinerarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of itinerarios to fetch.
     */
    orderBy?: itinerarioOrderByWithRelationInput | itinerarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing itinerarios.
     */
    cursor?: itinerarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` itinerarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` itinerarios.
     */
    skip?: number
    distinct?: ItinerarioScalarFieldEnum | ItinerarioScalarFieldEnum[]
  }

  /**
   * itinerario create
   */
  export type itinerarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
    /**
     * The data needed to create a itinerario.
     */
    data: XOR<itinerarioCreateInput, itinerarioUncheckedCreateInput>
  }

  /**
   * itinerario createMany
   */
  export type itinerarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many itinerarios.
     */
    data: itinerarioCreateManyInput | itinerarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * itinerario createManyAndReturn
   */
  export type itinerarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many itinerarios.
     */
    data: itinerarioCreateManyInput | itinerarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * itinerario update
   */
  export type itinerarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
    /**
     * The data needed to update a itinerario.
     */
    data: XOR<itinerarioUpdateInput, itinerarioUncheckedUpdateInput>
    /**
     * Choose, which itinerario to update.
     */
    where: itinerarioWhereUniqueInput
  }

  /**
   * itinerario updateMany
   */
  export type itinerarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update itinerarios.
     */
    data: XOR<itinerarioUpdateManyMutationInput, itinerarioUncheckedUpdateManyInput>
    /**
     * Filter which itinerarios to update
     */
    where?: itinerarioWhereInput
  }

  /**
   * itinerario upsert
   */
  export type itinerarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
    /**
     * The filter to search for the itinerario to update in case it exists.
     */
    where: itinerarioWhereUniqueInput
    /**
     * In case the itinerario found by the `where` argument doesn't exist, create a new itinerario with this data.
     */
    create: XOR<itinerarioCreateInput, itinerarioUncheckedCreateInput>
    /**
     * In case the itinerario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<itinerarioUpdateInput, itinerarioUncheckedUpdateInput>
  }

  /**
   * itinerario delete
   */
  export type itinerarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
    /**
     * Filter which itinerario to delete.
     */
    where: itinerarioWhereUniqueInput
  }

  /**
   * itinerario deleteMany
   */
  export type itinerarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which itinerarios to delete
     */
    where?: itinerarioWhereInput
  }

  /**
   * itinerario.favoritos
   */
  export type itinerario$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    where?: favoritosWhereInput
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    cursor?: favoritosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * itinerario without action
   */
  export type itinerarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the itinerario
     */
    select?: itinerarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itinerarioInclude<ExtArgs> | null
  }


  /**
   * Model tabela
   */

  export type AggregateTabela = {
    _count: TabelaCountAggregateOutputType | null
    _avg: TabelaAvgAggregateOutputType | null
    _sum: TabelaSumAggregateOutputType | null
    _min: TabelaMinAggregateOutputType | null
    _max: TabelaMaxAggregateOutputType | null
  }

  export type TabelaAvgAggregateOutputType = {
    id: number | null
    prefixo: number | null
  }

  export type TabelaSumAggregateOutputType = {
    id: number | null
    prefixo: number | null
  }

  export type TabelaMinAggregateOutputType = {
    id: number | null
    prefixo: number | null
    linha: string | null
    motorista: string | null
  }

  export type TabelaMaxAggregateOutputType = {
    id: number | null
    prefixo: number | null
    linha: string | null
    motorista: string | null
  }

  export type TabelaCountAggregateOutputType = {
    id: number
    prefixo: number
    linha: number
    motorista: number
    _all: number
  }


  export type TabelaAvgAggregateInputType = {
    id?: true
    prefixo?: true
  }

  export type TabelaSumAggregateInputType = {
    id?: true
    prefixo?: true
  }

  export type TabelaMinAggregateInputType = {
    id?: true
    prefixo?: true
    linha?: true
    motorista?: true
  }

  export type TabelaMaxAggregateInputType = {
    id?: true
    prefixo?: true
    linha?: true
    motorista?: true
  }

  export type TabelaCountAggregateInputType = {
    id?: true
    prefixo?: true
    linha?: true
    motorista?: true
    _all?: true
  }

  export type TabelaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tabela to aggregate.
     */
    where?: tabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tabelas to fetch.
     */
    orderBy?: tabelaOrderByWithRelationInput | tabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tabelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tabelas
    **/
    _count?: true | TabelaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TabelaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TabelaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TabelaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TabelaMaxAggregateInputType
  }

  export type GetTabelaAggregateType<T extends TabelaAggregateArgs> = {
        [P in keyof T & keyof AggregateTabela]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTabela[P]>
      : GetScalarType<T[P], AggregateTabela[P]>
  }




  export type tabelaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tabelaWhereInput
    orderBy?: tabelaOrderByWithAggregationInput | tabelaOrderByWithAggregationInput[]
    by: TabelaScalarFieldEnum[] | TabelaScalarFieldEnum
    having?: tabelaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TabelaCountAggregateInputType | true
    _avg?: TabelaAvgAggregateInputType
    _sum?: TabelaSumAggregateInputType
    _min?: TabelaMinAggregateInputType
    _max?: TabelaMaxAggregateInputType
  }

  export type TabelaGroupByOutputType = {
    id: number
    prefixo: number
    linha: string
    motorista: string
    _count: TabelaCountAggregateOutputType | null
    _avg: TabelaAvgAggregateOutputType | null
    _sum: TabelaSumAggregateOutputType | null
    _min: TabelaMinAggregateOutputType | null
    _max: TabelaMaxAggregateOutputType | null
  }

  type GetTabelaGroupByPayload<T extends tabelaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TabelaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TabelaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TabelaGroupByOutputType[P]>
            : GetScalarType<T[P], TabelaGroupByOutputType[P]>
        }
      >
    >


  export type tabelaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    prefixo?: boolean
    linha?: boolean
    motorista?: boolean
    tbl_operacional?: boolean | tabela$tbl_operacionalArgs<ExtArgs>
    _count?: boolean | TabelaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tabela"]>

  export type tabelaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    prefixo?: boolean
    linha?: boolean
    motorista?: boolean
  }, ExtArgs["result"]["tabela"]>

  export type tabelaSelectScalar = {
    id?: boolean
    prefixo?: boolean
    linha?: boolean
    motorista?: boolean
  }

  export type tabelaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_operacional?: boolean | tabela$tbl_operacionalArgs<ExtArgs>
    _count?: boolean | TabelaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tabelaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tabelaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tabela"
    objects: {
      tbl_operacional: Prisma.$tbl_operacionalPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      prefixo: number
      linha: string
      motorista: string
    }, ExtArgs["result"]["tabela"]>
    composites: {}
  }

  type tabelaGetPayload<S extends boolean | null | undefined | tabelaDefaultArgs> = $Result.GetResult<Prisma.$tabelaPayload, S>

  type tabelaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tabelaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TabelaCountAggregateInputType | true
    }

  export interface tabelaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tabela'], meta: { name: 'tabela' } }
    /**
     * Find zero or one Tabela that matches the filter.
     * @param {tabelaFindUniqueArgs} args - Arguments to find a Tabela
     * @example
     * // Get one Tabela
     * const tabela = await prisma.tabela.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tabelaFindUniqueArgs>(args: SelectSubset<T, tabelaFindUniqueArgs<ExtArgs>>): Prisma__tabelaClient<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tabela that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tabelaFindUniqueOrThrowArgs} args - Arguments to find a Tabela
     * @example
     * // Get one Tabela
     * const tabela = await prisma.tabela.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tabelaFindUniqueOrThrowArgs>(args: SelectSubset<T, tabelaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tabelaClient<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tabela that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tabelaFindFirstArgs} args - Arguments to find a Tabela
     * @example
     * // Get one Tabela
     * const tabela = await prisma.tabela.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tabelaFindFirstArgs>(args?: SelectSubset<T, tabelaFindFirstArgs<ExtArgs>>): Prisma__tabelaClient<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tabela that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tabelaFindFirstOrThrowArgs} args - Arguments to find a Tabela
     * @example
     * // Get one Tabela
     * const tabela = await prisma.tabela.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tabelaFindFirstOrThrowArgs>(args?: SelectSubset<T, tabelaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tabelaClient<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tabelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tabelaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tabelas
     * const tabelas = await prisma.tabela.findMany()
     * 
     * // Get first 10 Tabelas
     * const tabelas = await prisma.tabela.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tabelaWithIdOnly = await prisma.tabela.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tabelaFindManyArgs>(args?: SelectSubset<T, tabelaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tabela.
     * @param {tabelaCreateArgs} args - Arguments to create a Tabela.
     * @example
     * // Create one Tabela
     * const Tabela = await prisma.tabela.create({
     *   data: {
     *     // ... data to create a Tabela
     *   }
     * })
     * 
     */
    create<T extends tabelaCreateArgs>(args: SelectSubset<T, tabelaCreateArgs<ExtArgs>>): Prisma__tabelaClient<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tabelas.
     * @param {tabelaCreateManyArgs} args - Arguments to create many Tabelas.
     * @example
     * // Create many Tabelas
     * const tabela = await prisma.tabela.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tabelaCreateManyArgs>(args?: SelectSubset<T, tabelaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tabelas and returns the data saved in the database.
     * @param {tabelaCreateManyAndReturnArgs} args - Arguments to create many Tabelas.
     * @example
     * // Create many Tabelas
     * const tabela = await prisma.tabela.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tabelas and only return the `id`
     * const tabelaWithIdOnly = await prisma.tabela.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tabelaCreateManyAndReturnArgs>(args?: SelectSubset<T, tabelaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tabela.
     * @param {tabelaDeleteArgs} args - Arguments to delete one Tabela.
     * @example
     * // Delete one Tabela
     * const Tabela = await prisma.tabela.delete({
     *   where: {
     *     // ... filter to delete one Tabela
     *   }
     * })
     * 
     */
    delete<T extends tabelaDeleteArgs>(args: SelectSubset<T, tabelaDeleteArgs<ExtArgs>>): Prisma__tabelaClient<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tabela.
     * @param {tabelaUpdateArgs} args - Arguments to update one Tabela.
     * @example
     * // Update one Tabela
     * const tabela = await prisma.tabela.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tabelaUpdateArgs>(args: SelectSubset<T, tabelaUpdateArgs<ExtArgs>>): Prisma__tabelaClient<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tabelas.
     * @param {tabelaDeleteManyArgs} args - Arguments to filter Tabelas to delete.
     * @example
     * // Delete a few Tabelas
     * const { count } = await prisma.tabela.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tabelaDeleteManyArgs>(args?: SelectSubset<T, tabelaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tabelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tabelaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tabelas
     * const tabela = await prisma.tabela.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tabelaUpdateManyArgs>(args: SelectSubset<T, tabelaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tabela.
     * @param {tabelaUpsertArgs} args - Arguments to update or create a Tabela.
     * @example
     * // Update or create a Tabela
     * const tabela = await prisma.tabela.upsert({
     *   create: {
     *     // ... data to create a Tabela
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tabela we want to update
     *   }
     * })
     */
    upsert<T extends tabelaUpsertArgs>(args: SelectSubset<T, tabelaUpsertArgs<ExtArgs>>): Prisma__tabelaClient<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tabelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tabelaCountArgs} args - Arguments to filter Tabelas to count.
     * @example
     * // Count the number of Tabelas
     * const count = await prisma.tabela.count({
     *   where: {
     *     // ... the filter for the Tabelas we want to count
     *   }
     * })
    **/
    count<T extends tabelaCountArgs>(
      args?: Subset<T, tabelaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TabelaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tabela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TabelaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TabelaAggregateArgs>(args: Subset<T, TabelaAggregateArgs>): Prisma.PrismaPromise<GetTabelaAggregateType<T>>

    /**
     * Group by Tabela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tabelaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tabelaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tabelaGroupByArgs['orderBy'] }
        : { orderBy?: tabelaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tabelaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTabelaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tabela model
   */
  readonly fields: tabelaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tabela.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tabelaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_operacional<T extends tabela$tbl_operacionalArgs<ExtArgs> = {}>(args?: Subset<T, tabela$tbl_operacionalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tabela model
   */ 
  interface tabelaFieldRefs {
    readonly id: FieldRef<"tabela", 'Int'>
    readonly prefixo: FieldRef<"tabela", 'Int'>
    readonly linha: FieldRef<"tabela", 'String'>
    readonly motorista: FieldRef<"tabela", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tabela findUnique
   */
  export type tabelaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
    /**
     * Filter, which tabela to fetch.
     */
    where: tabelaWhereUniqueInput
  }

  /**
   * tabela findUniqueOrThrow
   */
  export type tabelaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
    /**
     * Filter, which tabela to fetch.
     */
    where: tabelaWhereUniqueInput
  }

  /**
   * tabela findFirst
   */
  export type tabelaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
    /**
     * Filter, which tabela to fetch.
     */
    where?: tabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tabelas to fetch.
     */
    orderBy?: tabelaOrderByWithRelationInput | tabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tabelas.
     */
    cursor?: tabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tabelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tabelas.
     */
    distinct?: TabelaScalarFieldEnum | TabelaScalarFieldEnum[]
  }

  /**
   * tabela findFirstOrThrow
   */
  export type tabelaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
    /**
     * Filter, which tabela to fetch.
     */
    where?: tabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tabelas to fetch.
     */
    orderBy?: tabelaOrderByWithRelationInput | tabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tabelas.
     */
    cursor?: tabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tabelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tabelas.
     */
    distinct?: TabelaScalarFieldEnum | TabelaScalarFieldEnum[]
  }

  /**
   * tabela findMany
   */
  export type tabelaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
    /**
     * Filter, which tabelas to fetch.
     */
    where?: tabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tabelas to fetch.
     */
    orderBy?: tabelaOrderByWithRelationInput | tabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tabelas.
     */
    cursor?: tabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tabelas.
     */
    skip?: number
    distinct?: TabelaScalarFieldEnum | TabelaScalarFieldEnum[]
  }

  /**
   * tabela create
   */
  export type tabelaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
    /**
     * The data needed to create a tabela.
     */
    data: XOR<tabelaCreateInput, tabelaUncheckedCreateInput>
  }

  /**
   * tabela createMany
   */
  export type tabelaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tabelas.
     */
    data: tabelaCreateManyInput | tabelaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tabela createManyAndReturn
   */
  export type tabelaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tabelas.
     */
    data: tabelaCreateManyInput | tabelaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tabela update
   */
  export type tabelaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
    /**
     * The data needed to update a tabela.
     */
    data: XOR<tabelaUpdateInput, tabelaUncheckedUpdateInput>
    /**
     * Choose, which tabela to update.
     */
    where: tabelaWhereUniqueInput
  }

  /**
   * tabela updateMany
   */
  export type tabelaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tabelas.
     */
    data: XOR<tabelaUpdateManyMutationInput, tabelaUncheckedUpdateManyInput>
    /**
     * Filter which tabelas to update
     */
    where?: tabelaWhereInput
  }

  /**
   * tabela upsert
   */
  export type tabelaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
    /**
     * The filter to search for the tabela to update in case it exists.
     */
    where: tabelaWhereUniqueInput
    /**
     * In case the tabela found by the `where` argument doesn't exist, create a new tabela with this data.
     */
    create: XOR<tabelaCreateInput, tabelaUncheckedCreateInput>
    /**
     * In case the tabela was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tabelaUpdateInput, tabelaUncheckedUpdateInput>
  }

  /**
   * tabela delete
   */
  export type tabelaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
    /**
     * Filter which tabela to delete.
     */
    where: tabelaWhereUniqueInput
  }

  /**
   * tabela deleteMany
   */
  export type tabelaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tabelas to delete
     */
    where?: tabelaWhereInput
  }

  /**
   * tabela.tbl_operacional
   */
  export type tabela$tbl_operacionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    where?: tbl_operacionalWhereInput
    orderBy?: tbl_operacionalOrderByWithRelationInput | tbl_operacionalOrderByWithRelationInput[]
    cursor?: tbl_operacionalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_operacionalScalarFieldEnum | Tbl_operacionalScalarFieldEnum[]
  }

  /**
   * tabela without action
   */
  export type tabelaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tabela
     */
    select?: tabelaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tabelaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_historico_viagens
   */

  export type AggregateTbl_historico_viagens = {
    _count: Tbl_historico_viagensCountAggregateOutputType | null
    _avg: Tbl_historico_viagensAvgAggregateOutputType | null
    _sum: Tbl_historico_viagensSumAggregateOutputType | null
    _min: Tbl_historico_viagensMinAggregateOutputType | null
    _max: Tbl_historico_viagensMaxAggregateOutputType | null
  }

  export type Tbl_historico_viagensAvgAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    codigo_operacao: number | null
    id_operacional: number | null
  }

  export type Tbl_historico_viagensSumAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    codigo_operacao: number | null
    id_operacional: number | null
  }

  export type Tbl_historico_viagensMinAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    codigo_operacao: number | null
    id_operacional: number | null
    data_viagem: Date | null
  }

  export type Tbl_historico_viagensMaxAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    codigo_operacao: number | null
    id_operacional: number | null
    data_viagem: Date | null
  }

  export type Tbl_historico_viagensCountAggregateOutputType = {
    id: number
    id_usuario: number
    codigo_operacao: number
    id_operacional: number
    data_viagem: number
    _all: number
  }


  export type Tbl_historico_viagensAvgAggregateInputType = {
    id?: true
    id_usuario?: true
    codigo_operacao?: true
    id_operacional?: true
  }

  export type Tbl_historico_viagensSumAggregateInputType = {
    id?: true
    id_usuario?: true
    codigo_operacao?: true
    id_operacional?: true
  }

  export type Tbl_historico_viagensMinAggregateInputType = {
    id?: true
    id_usuario?: true
    codigo_operacao?: true
    id_operacional?: true
    data_viagem?: true
  }

  export type Tbl_historico_viagensMaxAggregateInputType = {
    id?: true
    id_usuario?: true
    codigo_operacao?: true
    id_operacional?: true
    data_viagem?: true
  }

  export type Tbl_historico_viagensCountAggregateInputType = {
    id?: true
    id_usuario?: true
    codigo_operacao?: true
    id_operacional?: true
    data_viagem?: true
    _all?: true
  }

  export type Tbl_historico_viagensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_historico_viagens to aggregate.
     */
    where?: tbl_historico_viagensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_historico_viagens to fetch.
     */
    orderBy?: tbl_historico_viagensOrderByWithRelationInput | tbl_historico_viagensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_historico_viagensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_historico_viagens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_historico_viagens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_historico_viagens
    **/
    _count?: true | Tbl_historico_viagensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_historico_viagensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_historico_viagensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_historico_viagensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_historico_viagensMaxAggregateInputType
  }

  export type GetTbl_historico_viagensAggregateType<T extends Tbl_historico_viagensAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_historico_viagens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_historico_viagens[P]>
      : GetScalarType<T[P], AggregateTbl_historico_viagens[P]>
  }




  export type tbl_historico_viagensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_historico_viagensWhereInput
    orderBy?: tbl_historico_viagensOrderByWithAggregationInput | tbl_historico_viagensOrderByWithAggregationInput[]
    by: Tbl_historico_viagensScalarFieldEnum[] | Tbl_historico_viagensScalarFieldEnum
    having?: tbl_historico_viagensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_historico_viagensCountAggregateInputType | true
    _avg?: Tbl_historico_viagensAvgAggregateInputType
    _sum?: Tbl_historico_viagensSumAggregateInputType
    _min?: Tbl_historico_viagensMinAggregateInputType
    _max?: Tbl_historico_viagensMaxAggregateInputType
  }

  export type Tbl_historico_viagensGroupByOutputType = {
    id: number
    id_usuario: number
    codigo_operacao: number
    id_operacional: number
    data_viagem: Date
    _count: Tbl_historico_viagensCountAggregateOutputType | null
    _avg: Tbl_historico_viagensAvgAggregateOutputType | null
    _sum: Tbl_historico_viagensSumAggregateOutputType | null
    _min: Tbl_historico_viagensMinAggregateOutputType | null
    _max: Tbl_historico_viagensMaxAggregateOutputType | null
  }

  type GetTbl_historico_viagensGroupByPayload<T extends tbl_historico_viagensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_historico_viagensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_historico_viagensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_historico_viagensGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_historico_viagensGroupByOutputType[P]>
        }
      >
    >


  export type tbl_historico_viagensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_usuario?: boolean
    codigo_operacao?: boolean
    id_operacional?: boolean
    data_viagem?: boolean
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
    tbl_operacional?: boolean | tbl_operacionalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_historico_viagens"]>

  export type tbl_historico_viagensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_usuario?: boolean
    codigo_operacao?: boolean
    id_operacional?: boolean
    data_viagem?: boolean
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
    tbl_operacional?: boolean | tbl_operacionalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_historico_viagens"]>

  export type tbl_historico_viagensSelectScalar = {
    id?: boolean
    id_usuario?: boolean
    codigo_operacao?: boolean
    id_operacional?: boolean
    data_viagem?: boolean
  }

  export type tbl_historico_viagensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
    tbl_operacional?: boolean | tbl_operacionalDefaultArgs<ExtArgs>
  }
  export type tbl_historico_viagensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuarios?: boolean | tbl_usuariosDefaultArgs<ExtArgs>
    tbl_operacional?: boolean | tbl_operacionalDefaultArgs<ExtArgs>
  }

  export type $tbl_historico_viagensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_historico_viagens"
    objects: {
      tbl_usuarios: Prisma.$tbl_usuariosPayload<ExtArgs>
      tbl_operacional: Prisma.$tbl_operacionalPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_usuario: number
      codigo_operacao: number
      id_operacional: number
      data_viagem: Date
    }, ExtArgs["result"]["tbl_historico_viagens"]>
    composites: {}
  }

  type tbl_historico_viagensGetPayload<S extends boolean | null | undefined | tbl_historico_viagensDefaultArgs> = $Result.GetResult<Prisma.$tbl_historico_viagensPayload, S>

  type tbl_historico_viagensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_historico_viagensFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_historico_viagensCountAggregateInputType | true
    }

  export interface tbl_historico_viagensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_historico_viagens'], meta: { name: 'tbl_historico_viagens' } }
    /**
     * Find zero or one Tbl_historico_viagens that matches the filter.
     * @param {tbl_historico_viagensFindUniqueArgs} args - Arguments to find a Tbl_historico_viagens
     * @example
     * // Get one Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_historico_viagensFindUniqueArgs>(args: SelectSubset<T, tbl_historico_viagensFindUniqueArgs<ExtArgs>>): Prisma__tbl_historico_viagensClient<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_historico_viagens that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_historico_viagensFindUniqueOrThrowArgs} args - Arguments to find a Tbl_historico_viagens
     * @example
     * // Get one Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_historico_viagensFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_historico_viagensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_historico_viagensClient<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_historico_viagens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_historico_viagensFindFirstArgs} args - Arguments to find a Tbl_historico_viagens
     * @example
     * // Get one Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_historico_viagensFindFirstArgs>(args?: SelectSubset<T, tbl_historico_viagensFindFirstArgs<ExtArgs>>): Prisma__tbl_historico_viagensClient<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_historico_viagens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_historico_viagensFindFirstOrThrowArgs} args - Arguments to find a Tbl_historico_viagens
     * @example
     * // Get one Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_historico_viagensFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_historico_viagensFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_historico_viagensClient<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_historico_viagens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_historico_viagensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.findMany()
     * 
     * // Get first 10 Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_historico_viagensWithIdOnly = await prisma.tbl_historico_viagens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_historico_viagensFindManyArgs>(args?: SelectSubset<T, tbl_historico_viagensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_historico_viagens.
     * @param {tbl_historico_viagensCreateArgs} args - Arguments to create a Tbl_historico_viagens.
     * @example
     * // Create one Tbl_historico_viagens
     * const Tbl_historico_viagens = await prisma.tbl_historico_viagens.create({
     *   data: {
     *     // ... data to create a Tbl_historico_viagens
     *   }
     * })
     * 
     */
    create<T extends tbl_historico_viagensCreateArgs>(args: SelectSubset<T, tbl_historico_viagensCreateArgs<ExtArgs>>): Prisma__tbl_historico_viagensClient<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_historico_viagens.
     * @param {tbl_historico_viagensCreateManyArgs} args - Arguments to create many Tbl_historico_viagens.
     * @example
     * // Create many Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_historico_viagensCreateManyArgs>(args?: SelectSubset<T, tbl_historico_viagensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tbl_historico_viagens and returns the data saved in the database.
     * @param {tbl_historico_viagensCreateManyAndReturnArgs} args - Arguments to create many Tbl_historico_viagens.
     * @example
     * // Create many Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tbl_historico_viagens and only return the `id`
     * const tbl_historico_viagensWithIdOnly = await prisma.tbl_historico_viagens.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tbl_historico_viagensCreateManyAndReturnArgs>(args?: SelectSubset<T, tbl_historico_viagensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tbl_historico_viagens.
     * @param {tbl_historico_viagensDeleteArgs} args - Arguments to delete one Tbl_historico_viagens.
     * @example
     * // Delete one Tbl_historico_viagens
     * const Tbl_historico_viagens = await prisma.tbl_historico_viagens.delete({
     *   where: {
     *     // ... filter to delete one Tbl_historico_viagens
     *   }
     * })
     * 
     */
    delete<T extends tbl_historico_viagensDeleteArgs>(args: SelectSubset<T, tbl_historico_viagensDeleteArgs<ExtArgs>>): Prisma__tbl_historico_viagensClient<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_historico_viagens.
     * @param {tbl_historico_viagensUpdateArgs} args - Arguments to update one Tbl_historico_viagens.
     * @example
     * // Update one Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_historico_viagensUpdateArgs>(args: SelectSubset<T, tbl_historico_viagensUpdateArgs<ExtArgs>>): Prisma__tbl_historico_viagensClient<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_historico_viagens.
     * @param {tbl_historico_viagensDeleteManyArgs} args - Arguments to filter Tbl_historico_viagens to delete.
     * @example
     * // Delete a few Tbl_historico_viagens
     * const { count } = await prisma.tbl_historico_viagens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_historico_viagensDeleteManyArgs>(args?: SelectSubset<T, tbl_historico_viagensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_historico_viagens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_historico_viagensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_historico_viagensUpdateManyArgs>(args: SelectSubset<T, tbl_historico_viagensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_historico_viagens.
     * @param {tbl_historico_viagensUpsertArgs} args - Arguments to update or create a Tbl_historico_viagens.
     * @example
     * // Update or create a Tbl_historico_viagens
     * const tbl_historico_viagens = await prisma.tbl_historico_viagens.upsert({
     *   create: {
     *     // ... data to create a Tbl_historico_viagens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_historico_viagens we want to update
     *   }
     * })
     */
    upsert<T extends tbl_historico_viagensUpsertArgs>(args: SelectSubset<T, tbl_historico_viagensUpsertArgs<ExtArgs>>): Prisma__tbl_historico_viagensClient<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_historico_viagens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_historico_viagensCountArgs} args - Arguments to filter Tbl_historico_viagens to count.
     * @example
     * // Count the number of Tbl_historico_viagens
     * const count = await prisma.tbl_historico_viagens.count({
     *   where: {
     *     // ... the filter for the Tbl_historico_viagens we want to count
     *   }
     * })
    **/
    count<T extends tbl_historico_viagensCountArgs>(
      args?: Subset<T, tbl_historico_viagensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_historico_viagensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_historico_viagens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_historico_viagensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_historico_viagensAggregateArgs>(args: Subset<T, Tbl_historico_viagensAggregateArgs>): Prisma.PrismaPromise<GetTbl_historico_viagensAggregateType<T>>

    /**
     * Group by Tbl_historico_viagens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_historico_viagensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_historico_viagensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_historico_viagensGroupByArgs['orderBy'] }
        : { orderBy?: tbl_historico_viagensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_historico_viagensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_historico_viagensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_historico_viagens model
   */
  readonly fields: tbl_historico_viagensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_historico_viagens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_historico_viagensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_usuarios<T extends tbl_usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuariosDefaultArgs<ExtArgs>>): Prisma__tbl_usuariosClient<$Result.GetResult<Prisma.$tbl_usuariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_operacional<T extends tbl_operacionalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_operacionalDefaultArgs<ExtArgs>>): Prisma__tbl_operacionalClient<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_historico_viagens model
   */ 
  interface tbl_historico_viagensFieldRefs {
    readonly id: FieldRef<"tbl_historico_viagens", 'Int'>
    readonly id_usuario: FieldRef<"tbl_historico_viagens", 'Int'>
    readonly codigo_operacao: FieldRef<"tbl_historico_viagens", 'Int'>
    readonly id_operacional: FieldRef<"tbl_historico_viagens", 'Int'>
    readonly data_viagem: FieldRef<"tbl_historico_viagens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tbl_historico_viagens findUnique
   */
  export type tbl_historico_viagensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    /**
     * Filter, which tbl_historico_viagens to fetch.
     */
    where: tbl_historico_viagensWhereUniqueInput
  }

  /**
   * tbl_historico_viagens findUniqueOrThrow
   */
  export type tbl_historico_viagensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    /**
     * Filter, which tbl_historico_viagens to fetch.
     */
    where: tbl_historico_viagensWhereUniqueInput
  }

  /**
   * tbl_historico_viagens findFirst
   */
  export type tbl_historico_viagensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    /**
     * Filter, which tbl_historico_viagens to fetch.
     */
    where?: tbl_historico_viagensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_historico_viagens to fetch.
     */
    orderBy?: tbl_historico_viagensOrderByWithRelationInput | tbl_historico_viagensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_historico_viagens.
     */
    cursor?: tbl_historico_viagensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_historico_viagens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_historico_viagens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_historico_viagens.
     */
    distinct?: Tbl_historico_viagensScalarFieldEnum | Tbl_historico_viagensScalarFieldEnum[]
  }

  /**
   * tbl_historico_viagens findFirstOrThrow
   */
  export type tbl_historico_viagensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    /**
     * Filter, which tbl_historico_viagens to fetch.
     */
    where?: tbl_historico_viagensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_historico_viagens to fetch.
     */
    orderBy?: tbl_historico_viagensOrderByWithRelationInput | tbl_historico_viagensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_historico_viagens.
     */
    cursor?: tbl_historico_viagensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_historico_viagens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_historico_viagens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_historico_viagens.
     */
    distinct?: Tbl_historico_viagensScalarFieldEnum | Tbl_historico_viagensScalarFieldEnum[]
  }

  /**
   * tbl_historico_viagens findMany
   */
  export type tbl_historico_viagensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    /**
     * Filter, which tbl_historico_viagens to fetch.
     */
    where?: tbl_historico_viagensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_historico_viagens to fetch.
     */
    orderBy?: tbl_historico_viagensOrderByWithRelationInput | tbl_historico_viagensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_historico_viagens.
     */
    cursor?: tbl_historico_viagensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_historico_viagens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_historico_viagens.
     */
    skip?: number
    distinct?: Tbl_historico_viagensScalarFieldEnum | Tbl_historico_viagensScalarFieldEnum[]
  }

  /**
   * tbl_historico_viagens create
   */
  export type tbl_historico_viagensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_historico_viagens.
     */
    data: XOR<tbl_historico_viagensCreateInput, tbl_historico_viagensUncheckedCreateInput>
  }

  /**
   * tbl_historico_viagens createMany
   */
  export type tbl_historico_viagensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_historico_viagens.
     */
    data: tbl_historico_viagensCreateManyInput | tbl_historico_viagensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_historico_viagens createManyAndReturn
   */
  export type tbl_historico_viagensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tbl_historico_viagens.
     */
    data: tbl_historico_viagensCreateManyInput | tbl_historico_viagensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tbl_historico_viagens update
   */
  export type tbl_historico_viagensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_historico_viagens.
     */
    data: XOR<tbl_historico_viagensUpdateInput, tbl_historico_viagensUncheckedUpdateInput>
    /**
     * Choose, which tbl_historico_viagens to update.
     */
    where: tbl_historico_viagensWhereUniqueInput
  }

  /**
   * tbl_historico_viagens updateMany
   */
  export type tbl_historico_viagensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_historico_viagens.
     */
    data: XOR<tbl_historico_viagensUpdateManyMutationInput, tbl_historico_viagensUncheckedUpdateManyInput>
    /**
     * Filter which tbl_historico_viagens to update
     */
    where?: tbl_historico_viagensWhereInput
  }

  /**
   * tbl_historico_viagens upsert
   */
  export type tbl_historico_viagensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_historico_viagens to update in case it exists.
     */
    where: tbl_historico_viagensWhereUniqueInput
    /**
     * In case the tbl_historico_viagens found by the `where` argument doesn't exist, create a new tbl_historico_viagens with this data.
     */
    create: XOR<tbl_historico_viagensCreateInput, tbl_historico_viagensUncheckedCreateInput>
    /**
     * In case the tbl_historico_viagens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_historico_viagensUpdateInput, tbl_historico_viagensUncheckedUpdateInput>
  }

  /**
   * tbl_historico_viagens delete
   */
  export type tbl_historico_viagensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    /**
     * Filter which tbl_historico_viagens to delete.
     */
    where: tbl_historico_viagensWhereUniqueInput
  }

  /**
   * tbl_historico_viagens deleteMany
   */
  export type tbl_historico_viagensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_historico_viagens to delete
     */
    where?: tbl_historico_viagensWhereInput
  }

  /**
   * tbl_historico_viagens without action
   */
  export type tbl_historico_viagensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
  }


  /**
   * Model tbl_operacional
   */

  export type AggregateTbl_operacional = {
    _count: Tbl_operacionalCountAggregateOutputType | null
    _avg: Tbl_operacionalAvgAggregateOutputType | null
    _sum: Tbl_operacionalSumAggregateOutputType | null
    _min: Tbl_operacionalMinAggregateOutputType | null
    _max: Tbl_operacionalMaxAggregateOutputType | null
  }

  export type Tbl_operacionalAvgAggregateOutputType = {
    id: number | null
    id_onibus: number | null
  }

  export type Tbl_operacionalSumAggregateOutputType = {
    id: number | null
    id_onibus: number | null
  }

  export type Tbl_operacionalMinAggregateOutputType = {
    id: number | null
    id_onibus: number | null
    sentido: string | null
    data_viagem: Date | null
  }

  export type Tbl_operacionalMaxAggregateOutputType = {
    id: number | null
    id_onibus: number | null
    sentido: string | null
    data_viagem: Date | null
  }

  export type Tbl_operacionalCountAggregateOutputType = {
    id: number
    id_onibus: number
    sentido: number
    data_viagem: number
    _all: number
  }


  export type Tbl_operacionalAvgAggregateInputType = {
    id?: true
    id_onibus?: true
  }

  export type Tbl_operacionalSumAggregateInputType = {
    id?: true
    id_onibus?: true
  }

  export type Tbl_operacionalMinAggregateInputType = {
    id?: true
    id_onibus?: true
    sentido?: true
    data_viagem?: true
  }

  export type Tbl_operacionalMaxAggregateInputType = {
    id?: true
    id_onibus?: true
    sentido?: true
    data_viagem?: true
  }

  export type Tbl_operacionalCountAggregateInputType = {
    id?: true
    id_onibus?: true
    sentido?: true
    data_viagem?: true
    _all?: true
  }

  export type Tbl_operacionalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_operacional to aggregate.
     */
    where?: tbl_operacionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_operacionals to fetch.
     */
    orderBy?: tbl_operacionalOrderByWithRelationInput | tbl_operacionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_operacionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_operacionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_operacionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_operacionals
    **/
    _count?: true | Tbl_operacionalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_operacionalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_operacionalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_operacionalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_operacionalMaxAggregateInputType
  }

  export type GetTbl_operacionalAggregateType<T extends Tbl_operacionalAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_operacional]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_operacional[P]>
      : GetScalarType<T[P], AggregateTbl_operacional[P]>
  }




  export type tbl_operacionalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_operacionalWhereInput
    orderBy?: tbl_operacionalOrderByWithAggregationInput | tbl_operacionalOrderByWithAggregationInput[]
    by: Tbl_operacionalScalarFieldEnum[] | Tbl_operacionalScalarFieldEnum
    having?: tbl_operacionalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_operacionalCountAggregateInputType | true
    _avg?: Tbl_operacionalAvgAggregateInputType
    _sum?: Tbl_operacionalSumAggregateInputType
    _min?: Tbl_operacionalMinAggregateInputType
    _max?: Tbl_operacionalMaxAggregateInputType
  }

  export type Tbl_operacionalGroupByOutputType = {
    id: number
    id_onibus: number
    sentido: string
    data_viagem: Date
    _count: Tbl_operacionalCountAggregateOutputType | null
    _avg: Tbl_operacionalAvgAggregateOutputType | null
    _sum: Tbl_operacionalSumAggregateOutputType | null
    _min: Tbl_operacionalMinAggregateOutputType | null
    _max: Tbl_operacionalMaxAggregateOutputType | null
  }

  type GetTbl_operacionalGroupByPayload<T extends tbl_operacionalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_operacionalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_operacionalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_operacionalGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_operacionalGroupByOutputType[P]>
        }
      >
    >


  export type tbl_operacionalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_onibus?: boolean
    sentido?: boolean
    data_viagem?: boolean
    tbl_historico_viagens?: boolean | tbl_operacional$tbl_historico_viagensArgs<ExtArgs>
    tabela?: boolean | tabelaDefaultArgs<ExtArgs>
    _count?: boolean | Tbl_operacionalCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_operacional"]>

  export type tbl_operacionalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_onibus?: boolean
    sentido?: boolean
    data_viagem?: boolean
    tabela?: boolean | tabelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_operacional"]>

  export type tbl_operacionalSelectScalar = {
    id?: boolean
    id_onibus?: boolean
    sentido?: boolean
    data_viagem?: boolean
  }

  export type tbl_operacionalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_historico_viagens?: boolean | tbl_operacional$tbl_historico_viagensArgs<ExtArgs>
    tabela?: boolean | tabelaDefaultArgs<ExtArgs>
    _count?: boolean | Tbl_operacionalCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tbl_operacionalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tabela?: boolean | tabelaDefaultArgs<ExtArgs>
  }

  export type $tbl_operacionalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_operacional"
    objects: {
      tbl_historico_viagens: Prisma.$tbl_historico_viagensPayload<ExtArgs>[]
      tabela: Prisma.$tabelaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_onibus: number
      sentido: string
      data_viagem: Date
    }, ExtArgs["result"]["tbl_operacional"]>
    composites: {}
  }

  type tbl_operacionalGetPayload<S extends boolean | null | undefined | tbl_operacionalDefaultArgs> = $Result.GetResult<Prisma.$tbl_operacionalPayload, S>

  type tbl_operacionalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_operacionalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_operacionalCountAggregateInputType | true
    }

  export interface tbl_operacionalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_operacional'], meta: { name: 'tbl_operacional' } }
    /**
     * Find zero or one Tbl_operacional that matches the filter.
     * @param {tbl_operacionalFindUniqueArgs} args - Arguments to find a Tbl_operacional
     * @example
     * // Get one Tbl_operacional
     * const tbl_operacional = await prisma.tbl_operacional.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_operacionalFindUniqueArgs>(args: SelectSubset<T, tbl_operacionalFindUniqueArgs<ExtArgs>>): Prisma__tbl_operacionalClient<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_operacional that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_operacionalFindUniqueOrThrowArgs} args - Arguments to find a Tbl_operacional
     * @example
     * // Get one Tbl_operacional
     * const tbl_operacional = await prisma.tbl_operacional.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_operacionalFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_operacionalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_operacionalClient<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_operacional that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_operacionalFindFirstArgs} args - Arguments to find a Tbl_operacional
     * @example
     * // Get one Tbl_operacional
     * const tbl_operacional = await prisma.tbl_operacional.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_operacionalFindFirstArgs>(args?: SelectSubset<T, tbl_operacionalFindFirstArgs<ExtArgs>>): Prisma__tbl_operacionalClient<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_operacional that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_operacionalFindFirstOrThrowArgs} args - Arguments to find a Tbl_operacional
     * @example
     * // Get one Tbl_operacional
     * const tbl_operacional = await prisma.tbl_operacional.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_operacionalFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_operacionalFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_operacionalClient<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_operacionals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_operacionalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_operacionals
     * const tbl_operacionals = await prisma.tbl_operacional.findMany()
     * 
     * // Get first 10 Tbl_operacionals
     * const tbl_operacionals = await prisma.tbl_operacional.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_operacionalWithIdOnly = await prisma.tbl_operacional.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_operacionalFindManyArgs>(args?: SelectSubset<T, tbl_operacionalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_operacional.
     * @param {tbl_operacionalCreateArgs} args - Arguments to create a Tbl_operacional.
     * @example
     * // Create one Tbl_operacional
     * const Tbl_operacional = await prisma.tbl_operacional.create({
     *   data: {
     *     // ... data to create a Tbl_operacional
     *   }
     * })
     * 
     */
    create<T extends tbl_operacionalCreateArgs>(args: SelectSubset<T, tbl_operacionalCreateArgs<ExtArgs>>): Prisma__tbl_operacionalClient<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_operacionals.
     * @param {tbl_operacionalCreateManyArgs} args - Arguments to create many Tbl_operacionals.
     * @example
     * // Create many Tbl_operacionals
     * const tbl_operacional = await prisma.tbl_operacional.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_operacionalCreateManyArgs>(args?: SelectSubset<T, tbl_operacionalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tbl_operacionals and returns the data saved in the database.
     * @param {tbl_operacionalCreateManyAndReturnArgs} args - Arguments to create many Tbl_operacionals.
     * @example
     * // Create many Tbl_operacionals
     * const tbl_operacional = await prisma.tbl_operacional.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tbl_operacionals and only return the `id`
     * const tbl_operacionalWithIdOnly = await prisma.tbl_operacional.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tbl_operacionalCreateManyAndReturnArgs>(args?: SelectSubset<T, tbl_operacionalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tbl_operacional.
     * @param {tbl_operacionalDeleteArgs} args - Arguments to delete one Tbl_operacional.
     * @example
     * // Delete one Tbl_operacional
     * const Tbl_operacional = await prisma.tbl_operacional.delete({
     *   where: {
     *     // ... filter to delete one Tbl_operacional
     *   }
     * })
     * 
     */
    delete<T extends tbl_operacionalDeleteArgs>(args: SelectSubset<T, tbl_operacionalDeleteArgs<ExtArgs>>): Prisma__tbl_operacionalClient<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_operacional.
     * @param {tbl_operacionalUpdateArgs} args - Arguments to update one Tbl_operacional.
     * @example
     * // Update one Tbl_operacional
     * const tbl_operacional = await prisma.tbl_operacional.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_operacionalUpdateArgs>(args: SelectSubset<T, tbl_operacionalUpdateArgs<ExtArgs>>): Prisma__tbl_operacionalClient<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_operacionals.
     * @param {tbl_operacionalDeleteManyArgs} args - Arguments to filter Tbl_operacionals to delete.
     * @example
     * // Delete a few Tbl_operacionals
     * const { count } = await prisma.tbl_operacional.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_operacionalDeleteManyArgs>(args?: SelectSubset<T, tbl_operacionalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_operacionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_operacionalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_operacionals
     * const tbl_operacional = await prisma.tbl_operacional.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_operacionalUpdateManyArgs>(args: SelectSubset<T, tbl_operacionalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_operacional.
     * @param {tbl_operacionalUpsertArgs} args - Arguments to update or create a Tbl_operacional.
     * @example
     * // Update or create a Tbl_operacional
     * const tbl_operacional = await prisma.tbl_operacional.upsert({
     *   create: {
     *     // ... data to create a Tbl_operacional
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_operacional we want to update
     *   }
     * })
     */
    upsert<T extends tbl_operacionalUpsertArgs>(args: SelectSubset<T, tbl_operacionalUpsertArgs<ExtArgs>>): Prisma__tbl_operacionalClient<$Result.GetResult<Prisma.$tbl_operacionalPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_operacionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_operacionalCountArgs} args - Arguments to filter Tbl_operacionals to count.
     * @example
     * // Count the number of Tbl_operacionals
     * const count = await prisma.tbl_operacional.count({
     *   where: {
     *     // ... the filter for the Tbl_operacionals we want to count
     *   }
     * })
    **/
    count<T extends tbl_operacionalCountArgs>(
      args?: Subset<T, tbl_operacionalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_operacionalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_operacional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_operacionalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_operacionalAggregateArgs>(args: Subset<T, Tbl_operacionalAggregateArgs>): Prisma.PrismaPromise<GetTbl_operacionalAggregateType<T>>

    /**
     * Group by Tbl_operacional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_operacionalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_operacionalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_operacionalGroupByArgs['orderBy'] }
        : { orderBy?: tbl_operacionalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_operacionalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_operacionalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_operacional model
   */
  readonly fields: tbl_operacionalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_operacional.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_operacionalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_historico_viagens<T extends tbl_operacional$tbl_historico_viagensArgs<ExtArgs> = {}>(args?: Subset<T, tbl_operacional$tbl_historico_viagensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_historico_viagensPayload<ExtArgs>, T, "findMany"> | Null>
    tabela<T extends tabelaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tabelaDefaultArgs<ExtArgs>>): Prisma__tabelaClient<$Result.GetResult<Prisma.$tabelaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_operacional model
   */ 
  interface tbl_operacionalFieldRefs {
    readonly id: FieldRef<"tbl_operacional", 'Int'>
    readonly id_onibus: FieldRef<"tbl_operacional", 'Int'>
    readonly sentido: FieldRef<"tbl_operacional", 'String'>
    readonly data_viagem: FieldRef<"tbl_operacional", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tbl_operacional findUnique
   */
  export type tbl_operacionalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    /**
     * Filter, which tbl_operacional to fetch.
     */
    where: tbl_operacionalWhereUniqueInput
  }

  /**
   * tbl_operacional findUniqueOrThrow
   */
  export type tbl_operacionalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    /**
     * Filter, which tbl_operacional to fetch.
     */
    where: tbl_operacionalWhereUniqueInput
  }

  /**
   * tbl_operacional findFirst
   */
  export type tbl_operacionalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    /**
     * Filter, which tbl_operacional to fetch.
     */
    where?: tbl_operacionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_operacionals to fetch.
     */
    orderBy?: tbl_operacionalOrderByWithRelationInput | tbl_operacionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_operacionals.
     */
    cursor?: tbl_operacionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_operacionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_operacionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_operacionals.
     */
    distinct?: Tbl_operacionalScalarFieldEnum | Tbl_operacionalScalarFieldEnum[]
  }

  /**
   * tbl_operacional findFirstOrThrow
   */
  export type tbl_operacionalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    /**
     * Filter, which tbl_operacional to fetch.
     */
    where?: tbl_operacionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_operacionals to fetch.
     */
    orderBy?: tbl_operacionalOrderByWithRelationInput | tbl_operacionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_operacionals.
     */
    cursor?: tbl_operacionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_operacionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_operacionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_operacionals.
     */
    distinct?: Tbl_operacionalScalarFieldEnum | Tbl_operacionalScalarFieldEnum[]
  }

  /**
   * tbl_operacional findMany
   */
  export type tbl_operacionalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    /**
     * Filter, which tbl_operacionals to fetch.
     */
    where?: tbl_operacionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_operacionals to fetch.
     */
    orderBy?: tbl_operacionalOrderByWithRelationInput | tbl_operacionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_operacionals.
     */
    cursor?: tbl_operacionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_operacionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_operacionals.
     */
    skip?: number
    distinct?: Tbl_operacionalScalarFieldEnum | Tbl_operacionalScalarFieldEnum[]
  }

  /**
   * tbl_operacional create
   */
  export type tbl_operacionalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_operacional.
     */
    data: XOR<tbl_operacionalCreateInput, tbl_operacionalUncheckedCreateInput>
  }

  /**
   * tbl_operacional createMany
   */
  export type tbl_operacionalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_operacionals.
     */
    data: tbl_operacionalCreateManyInput | tbl_operacionalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_operacional createManyAndReturn
   */
  export type tbl_operacionalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tbl_operacionals.
     */
    data: tbl_operacionalCreateManyInput | tbl_operacionalCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tbl_operacional update
   */
  export type tbl_operacionalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_operacional.
     */
    data: XOR<tbl_operacionalUpdateInput, tbl_operacionalUncheckedUpdateInput>
    /**
     * Choose, which tbl_operacional to update.
     */
    where: tbl_operacionalWhereUniqueInput
  }

  /**
   * tbl_operacional updateMany
   */
  export type tbl_operacionalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_operacionals.
     */
    data: XOR<tbl_operacionalUpdateManyMutationInput, tbl_operacionalUncheckedUpdateManyInput>
    /**
     * Filter which tbl_operacionals to update
     */
    where?: tbl_operacionalWhereInput
  }

  /**
   * tbl_operacional upsert
   */
  export type tbl_operacionalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_operacional to update in case it exists.
     */
    where: tbl_operacionalWhereUniqueInput
    /**
     * In case the tbl_operacional found by the `where` argument doesn't exist, create a new tbl_operacional with this data.
     */
    create: XOR<tbl_operacionalCreateInput, tbl_operacionalUncheckedCreateInput>
    /**
     * In case the tbl_operacional was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_operacionalUpdateInput, tbl_operacionalUncheckedUpdateInput>
  }

  /**
   * tbl_operacional delete
   */
  export type tbl_operacionalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
    /**
     * Filter which tbl_operacional to delete.
     */
    where: tbl_operacionalWhereUniqueInput
  }

  /**
   * tbl_operacional deleteMany
   */
  export type tbl_operacionalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_operacionals to delete
     */
    where?: tbl_operacionalWhereInput
  }

  /**
   * tbl_operacional.tbl_historico_viagens
   */
  export type tbl_operacional$tbl_historico_viagensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_historico_viagens
     */
    select?: tbl_historico_viagensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_historico_viagensInclude<ExtArgs> | null
    where?: tbl_historico_viagensWhereInput
    orderBy?: tbl_historico_viagensOrderByWithRelationInput | tbl_historico_viagensOrderByWithRelationInput[]
    cursor?: tbl_historico_viagensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_historico_viagensScalarFieldEnum | Tbl_historico_viagensScalarFieldEnum[]
  }

  /**
   * tbl_operacional without action
   */
  export type tbl_operacionalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_operacional
     */
    select?: tbl_operacionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_operacionalInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Tbl_enderecoScalarFieldEnum: {
    id: 'id',
    id_usuario: 'id_usuario',
    cep: 'cep',
    rua: 'rua',
    numero: 'numero',
    cidade: 'cidade',
    bairro: 'bairro',
    estado: 'estado'
  };

  export type Tbl_enderecoScalarFieldEnum = (typeof Tbl_enderecoScalarFieldEnum)[keyof typeof Tbl_enderecoScalarFieldEnum]


  export const Tbl_usuariosScalarFieldEnum: {
    id: 'id',
    cpf: 'cpf',
    nome: 'nome',
    sobrenome: 'sobrenome',
    email: 'email',
    telefone: 'telefone',
    foto_perfil: 'foto_perfil'
  };

  export type Tbl_usuariosScalarFieldEnum = (typeof Tbl_usuariosScalarFieldEnum)[keyof typeof Tbl_usuariosScalarFieldEnum]


  export const Tbl_autenticacaoScalarFieldEnum: {
    id: 'id',
    id_usuario: 'id_usuario',
    senha: 'senha'
  };

  export type Tbl_autenticacaoScalarFieldEnum = (typeof Tbl_autenticacaoScalarFieldEnum)[keyof typeof Tbl_autenticacaoScalarFieldEnum]


  export const FavoritosScalarFieldEnum: {
    id: 'id',
    id_itinerario: 'id_itinerario',
    id_usuario: 'id_usuario'
  };

  export type FavoritosScalarFieldEnum = (typeof FavoritosScalarFieldEnum)[keyof typeof FavoritosScalarFieldEnum]


  export const ItinerarioScalarFieldEnum: {
    id: 'id',
    origem: 'origem',
    destino: 'destino',
    linha: 'linha'
  };

  export type ItinerarioScalarFieldEnum = (typeof ItinerarioScalarFieldEnum)[keyof typeof ItinerarioScalarFieldEnum]


  export const TabelaScalarFieldEnum: {
    id: 'id',
    prefixo: 'prefixo',
    linha: 'linha',
    motorista: 'motorista'
  };

  export type TabelaScalarFieldEnum = (typeof TabelaScalarFieldEnum)[keyof typeof TabelaScalarFieldEnum]


  export const Tbl_historico_viagensScalarFieldEnum: {
    id: 'id',
    id_usuario: 'id_usuario',
    codigo_operacao: 'codigo_operacao',
    id_operacional: 'id_operacional',
    data_viagem: 'data_viagem'
  };

  export type Tbl_historico_viagensScalarFieldEnum = (typeof Tbl_historico_viagensScalarFieldEnum)[keyof typeof Tbl_historico_viagensScalarFieldEnum]


  export const Tbl_operacionalScalarFieldEnum: {
    id: 'id',
    id_onibus: 'id_onibus',
    sentido: 'sentido',
    data_viagem: 'data_viagem'
  };

  export type Tbl_operacionalScalarFieldEnum = (typeof Tbl_operacionalScalarFieldEnum)[keyof typeof Tbl_operacionalScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type tbl_enderecoWhereInput = {
    AND?: tbl_enderecoWhereInput | tbl_enderecoWhereInput[]
    OR?: tbl_enderecoWhereInput[]
    NOT?: tbl_enderecoWhereInput | tbl_enderecoWhereInput[]
    id?: IntFilter<"tbl_endereco"> | number
    id_usuario?: IntNullableFilter<"tbl_endereco"> | number | null
    cep?: StringFilter<"tbl_endereco"> | string
    rua?: StringFilter<"tbl_endereco"> | string
    numero?: StringNullableFilter<"tbl_endereco"> | string | null
    cidade?: StringFilter<"tbl_endereco"> | string
    bairro?: StringNullableFilter<"tbl_endereco"> | string | null
    estado?: StringFilter<"tbl_endereco"> | string
    tbl_usuarios?: XOR<Tbl_usuariosNullableRelationFilter, tbl_usuariosWhereInput> | null
  }

  export type tbl_enderecoOrderByWithRelationInput = {
    id?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    cep?: SortOrder
    rua?: SortOrder
    numero?: SortOrderInput | SortOrder
    cidade?: SortOrder
    bairro?: SortOrderInput | SortOrder
    estado?: SortOrder
    tbl_usuarios?: tbl_usuariosOrderByWithRelationInput
  }

  export type tbl_enderecoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_enderecoWhereInput | tbl_enderecoWhereInput[]
    OR?: tbl_enderecoWhereInput[]
    NOT?: tbl_enderecoWhereInput | tbl_enderecoWhereInput[]
    id_usuario?: IntNullableFilter<"tbl_endereco"> | number | null
    cep?: StringFilter<"tbl_endereco"> | string
    rua?: StringFilter<"tbl_endereco"> | string
    numero?: StringNullableFilter<"tbl_endereco"> | string | null
    cidade?: StringFilter<"tbl_endereco"> | string
    bairro?: StringNullableFilter<"tbl_endereco"> | string | null
    estado?: StringFilter<"tbl_endereco"> | string
    tbl_usuarios?: XOR<Tbl_usuariosNullableRelationFilter, tbl_usuariosWhereInput> | null
  }, "id">

  export type tbl_enderecoOrderByWithAggregationInput = {
    id?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    cep?: SortOrder
    rua?: SortOrder
    numero?: SortOrderInput | SortOrder
    cidade?: SortOrder
    bairro?: SortOrderInput | SortOrder
    estado?: SortOrder
    _count?: tbl_enderecoCountOrderByAggregateInput
    _avg?: tbl_enderecoAvgOrderByAggregateInput
    _max?: tbl_enderecoMaxOrderByAggregateInput
    _min?: tbl_enderecoMinOrderByAggregateInput
    _sum?: tbl_enderecoSumOrderByAggregateInput
  }

  export type tbl_enderecoScalarWhereWithAggregatesInput = {
    AND?: tbl_enderecoScalarWhereWithAggregatesInput | tbl_enderecoScalarWhereWithAggregatesInput[]
    OR?: tbl_enderecoScalarWhereWithAggregatesInput[]
    NOT?: tbl_enderecoScalarWhereWithAggregatesInput | tbl_enderecoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_endereco"> | number
    id_usuario?: IntNullableWithAggregatesFilter<"tbl_endereco"> | number | null
    cep?: StringWithAggregatesFilter<"tbl_endereco"> | string
    rua?: StringWithAggregatesFilter<"tbl_endereco"> | string
    numero?: StringNullableWithAggregatesFilter<"tbl_endereco"> | string | null
    cidade?: StringWithAggregatesFilter<"tbl_endereco"> | string
    bairro?: StringNullableWithAggregatesFilter<"tbl_endereco"> | string | null
    estado?: StringWithAggregatesFilter<"tbl_endereco"> | string
  }

  export type tbl_usuariosWhereInput = {
    AND?: tbl_usuariosWhereInput | tbl_usuariosWhereInput[]
    OR?: tbl_usuariosWhereInput[]
    NOT?: tbl_usuariosWhereInput | tbl_usuariosWhereInput[]
    id?: IntFilter<"tbl_usuarios"> | number
    cpf?: StringFilter<"tbl_usuarios"> | string
    nome?: StringFilter<"tbl_usuarios"> | string
    sobrenome?: StringFilter<"tbl_usuarios"> | string
    email?: StringFilter<"tbl_usuarios"> | string
    telefone?: StringFilter<"tbl_usuarios"> | string
    foto_perfil?: StringNullableFilter<"tbl_usuarios"> | string | null
    favoritos?: FavoritosListRelationFilter
    tbl_autenticacao?: Tbl_autenticacaoListRelationFilter
    tbl_endereco?: Tbl_enderecoListRelationFilter
    tbl_historico_viagens?: Tbl_historico_viagensListRelationFilter
  }

  export type tbl_usuariosOrderByWithRelationInput = {
    id?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    favoritos?: favoritosOrderByRelationAggregateInput
    tbl_autenticacao?: tbl_autenticacaoOrderByRelationAggregateInput
    tbl_endereco?: tbl_enderecoOrderByRelationAggregateInput
    tbl_historico_viagens?: tbl_historico_viagensOrderByRelationAggregateInput
  }

  export type tbl_usuariosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_usuariosWhereInput | tbl_usuariosWhereInput[]
    OR?: tbl_usuariosWhereInput[]
    NOT?: tbl_usuariosWhereInput | tbl_usuariosWhereInput[]
    cpf?: StringFilter<"tbl_usuarios"> | string
    nome?: StringFilter<"tbl_usuarios"> | string
    sobrenome?: StringFilter<"tbl_usuarios"> | string
    email?: StringFilter<"tbl_usuarios"> | string
    telefone?: StringFilter<"tbl_usuarios"> | string
    foto_perfil?: StringNullableFilter<"tbl_usuarios"> | string | null
    favoritos?: FavoritosListRelationFilter
    tbl_autenticacao?: Tbl_autenticacaoListRelationFilter
    tbl_endereco?: Tbl_enderecoListRelationFilter
    tbl_historico_viagens?: Tbl_historico_viagensListRelationFilter
  }, "id">

  export type tbl_usuariosOrderByWithAggregationInput = {
    id?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    _count?: tbl_usuariosCountOrderByAggregateInput
    _avg?: tbl_usuariosAvgOrderByAggregateInput
    _max?: tbl_usuariosMaxOrderByAggregateInput
    _min?: tbl_usuariosMinOrderByAggregateInput
    _sum?: tbl_usuariosSumOrderByAggregateInput
  }

  export type tbl_usuariosScalarWhereWithAggregatesInput = {
    AND?: tbl_usuariosScalarWhereWithAggregatesInput | tbl_usuariosScalarWhereWithAggregatesInput[]
    OR?: tbl_usuariosScalarWhereWithAggregatesInput[]
    NOT?: tbl_usuariosScalarWhereWithAggregatesInput | tbl_usuariosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_usuarios"> | number
    cpf?: StringWithAggregatesFilter<"tbl_usuarios"> | string
    nome?: StringWithAggregatesFilter<"tbl_usuarios"> | string
    sobrenome?: StringWithAggregatesFilter<"tbl_usuarios"> | string
    email?: StringWithAggregatesFilter<"tbl_usuarios"> | string
    telefone?: StringWithAggregatesFilter<"tbl_usuarios"> | string
    foto_perfil?: StringNullableWithAggregatesFilter<"tbl_usuarios"> | string | null
  }

  export type tbl_autenticacaoWhereInput = {
    AND?: tbl_autenticacaoWhereInput | tbl_autenticacaoWhereInput[]
    OR?: tbl_autenticacaoWhereInput[]
    NOT?: tbl_autenticacaoWhereInput | tbl_autenticacaoWhereInput[]
    id?: IntFilter<"tbl_autenticacao"> | number
    id_usuario?: IntFilter<"tbl_autenticacao"> | number
    senha?: StringFilter<"tbl_autenticacao"> | string
    tbl_usuarios?: XOR<Tbl_usuariosRelationFilter, tbl_usuariosWhereInput>
  }

  export type tbl_autenticacaoOrderByWithRelationInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    senha?: SortOrder
    tbl_usuarios?: tbl_usuariosOrderByWithRelationInput
  }

  export type tbl_autenticacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_autenticacaoWhereInput | tbl_autenticacaoWhereInput[]
    OR?: tbl_autenticacaoWhereInput[]
    NOT?: tbl_autenticacaoWhereInput | tbl_autenticacaoWhereInput[]
    id_usuario?: IntFilter<"tbl_autenticacao"> | number
    senha?: StringFilter<"tbl_autenticacao"> | string
    tbl_usuarios?: XOR<Tbl_usuariosRelationFilter, tbl_usuariosWhereInput>
  }, "id">

  export type tbl_autenticacaoOrderByWithAggregationInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    senha?: SortOrder
    _count?: tbl_autenticacaoCountOrderByAggregateInput
    _avg?: tbl_autenticacaoAvgOrderByAggregateInput
    _max?: tbl_autenticacaoMaxOrderByAggregateInput
    _min?: tbl_autenticacaoMinOrderByAggregateInput
    _sum?: tbl_autenticacaoSumOrderByAggregateInput
  }

  export type tbl_autenticacaoScalarWhereWithAggregatesInput = {
    AND?: tbl_autenticacaoScalarWhereWithAggregatesInput | tbl_autenticacaoScalarWhereWithAggregatesInput[]
    OR?: tbl_autenticacaoScalarWhereWithAggregatesInput[]
    NOT?: tbl_autenticacaoScalarWhereWithAggregatesInput | tbl_autenticacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_autenticacao"> | number
    id_usuario?: IntWithAggregatesFilter<"tbl_autenticacao"> | number
    senha?: StringWithAggregatesFilter<"tbl_autenticacao"> | string
  }

  export type favoritosWhereInput = {
    AND?: favoritosWhereInput | favoritosWhereInput[]
    OR?: favoritosWhereInput[]
    NOT?: favoritosWhereInput | favoritosWhereInput[]
    id?: IntFilter<"favoritos"> | number
    id_itinerario?: IntFilter<"favoritos"> | number
    id_usuario?: IntFilter<"favoritos"> | number
    itinerario?: XOR<ItinerarioRelationFilter, itinerarioWhereInput>
    tbl_usuarios?: XOR<Tbl_usuariosRelationFilter, tbl_usuariosWhereInput>
  }

  export type favoritosOrderByWithRelationInput = {
    id?: SortOrder
    id_itinerario?: SortOrder
    id_usuario?: SortOrder
    itinerario?: itinerarioOrderByWithRelationInput
    tbl_usuarios?: tbl_usuariosOrderByWithRelationInput
  }

  export type favoritosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: favoritosWhereInput | favoritosWhereInput[]
    OR?: favoritosWhereInput[]
    NOT?: favoritosWhereInput | favoritosWhereInput[]
    id_itinerario?: IntFilter<"favoritos"> | number
    id_usuario?: IntFilter<"favoritos"> | number
    itinerario?: XOR<ItinerarioRelationFilter, itinerarioWhereInput>
    tbl_usuarios?: XOR<Tbl_usuariosRelationFilter, tbl_usuariosWhereInput>
  }, "id">

  export type favoritosOrderByWithAggregationInput = {
    id?: SortOrder
    id_itinerario?: SortOrder
    id_usuario?: SortOrder
    _count?: favoritosCountOrderByAggregateInput
    _avg?: favoritosAvgOrderByAggregateInput
    _max?: favoritosMaxOrderByAggregateInput
    _min?: favoritosMinOrderByAggregateInput
    _sum?: favoritosSumOrderByAggregateInput
  }

  export type favoritosScalarWhereWithAggregatesInput = {
    AND?: favoritosScalarWhereWithAggregatesInput | favoritosScalarWhereWithAggregatesInput[]
    OR?: favoritosScalarWhereWithAggregatesInput[]
    NOT?: favoritosScalarWhereWithAggregatesInput | favoritosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"favoritos"> | number
    id_itinerario?: IntWithAggregatesFilter<"favoritos"> | number
    id_usuario?: IntWithAggregatesFilter<"favoritos"> | number
  }

  export type itinerarioWhereInput = {
    AND?: itinerarioWhereInput | itinerarioWhereInput[]
    OR?: itinerarioWhereInput[]
    NOT?: itinerarioWhereInput | itinerarioWhereInput[]
    id?: IntFilter<"itinerario"> | number
    origem?: StringFilter<"itinerario"> | string
    destino?: StringFilter<"itinerario"> | string
    linha?: StringFilter<"itinerario"> | string
    favoritos?: FavoritosListRelationFilter
  }

  export type itinerarioOrderByWithRelationInput = {
    id?: SortOrder
    origem?: SortOrder
    destino?: SortOrder
    linha?: SortOrder
    favoritos?: favoritosOrderByRelationAggregateInput
  }

  export type itinerarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: itinerarioWhereInput | itinerarioWhereInput[]
    OR?: itinerarioWhereInput[]
    NOT?: itinerarioWhereInput | itinerarioWhereInput[]
    origem?: StringFilter<"itinerario"> | string
    destino?: StringFilter<"itinerario"> | string
    linha?: StringFilter<"itinerario"> | string
    favoritos?: FavoritosListRelationFilter
  }, "id">

  export type itinerarioOrderByWithAggregationInput = {
    id?: SortOrder
    origem?: SortOrder
    destino?: SortOrder
    linha?: SortOrder
    _count?: itinerarioCountOrderByAggregateInput
    _avg?: itinerarioAvgOrderByAggregateInput
    _max?: itinerarioMaxOrderByAggregateInput
    _min?: itinerarioMinOrderByAggregateInput
    _sum?: itinerarioSumOrderByAggregateInput
  }

  export type itinerarioScalarWhereWithAggregatesInput = {
    AND?: itinerarioScalarWhereWithAggregatesInput | itinerarioScalarWhereWithAggregatesInput[]
    OR?: itinerarioScalarWhereWithAggregatesInput[]
    NOT?: itinerarioScalarWhereWithAggregatesInput | itinerarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"itinerario"> | number
    origem?: StringWithAggregatesFilter<"itinerario"> | string
    destino?: StringWithAggregatesFilter<"itinerario"> | string
    linha?: StringWithAggregatesFilter<"itinerario"> | string
  }

  export type tabelaWhereInput = {
    AND?: tabelaWhereInput | tabelaWhereInput[]
    OR?: tabelaWhereInput[]
    NOT?: tabelaWhereInput | tabelaWhereInput[]
    id?: IntFilter<"tabela"> | number
    prefixo?: IntFilter<"tabela"> | number
    linha?: StringFilter<"tabela"> | string
    motorista?: StringFilter<"tabela"> | string
    tbl_operacional?: Tbl_operacionalListRelationFilter
  }

  export type tabelaOrderByWithRelationInput = {
    id?: SortOrder
    prefixo?: SortOrder
    linha?: SortOrder
    motorista?: SortOrder
    tbl_operacional?: tbl_operacionalOrderByRelationAggregateInput
  }

  export type tabelaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tabelaWhereInput | tabelaWhereInput[]
    OR?: tabelaWhereInput[]
    NOT?: tabelaWhereInput | tabelaWhereInput[]
    prefixo?: IntFilter<"tabela"> | number
    linha?: StringFilter<"tabela"> | string
    motorista?: StringFilter<"tabela"> | string
    tbl_operacional?: Tbl_operacionalListRelationFilter
  }, "id">

  export type tabelaOrderByWithAggregationInput = {
    id?: SortOrder
    prefixo?: SortOrder
    linha?: SortOrder
    motorista?: SortOrder
    _count?: tabelaCountOrderByAggregateInput
    _avg?: tabelaAvgOrderByAggregateInput
    _max?: tabelaMaxOrderByAggregateInput
    _min?: tabelaMinOrderByAggregateInput
    _sum?: tabelaSumOrderByAggregateInput
  }

  export type tabelaScalarWhereWithAggregatesInput = {
    AND?: tabelaScalarWhereWithAggregatesInput | tabelaScalarWhereWithAggregatesInput[]
    OR?: tabelaScalarWhereWithAggregatesInput[]
    NOT?: tabelaScalarWhereWithAggregatesInput | tabelaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tabela"> | number
    prefixo?: IntWithAggregatesFilter<"tabela"> | number
    linha?: StringWithAggregatesFilter<"tabela"> | string
    motorista?: StringWithAggregatesFilter<"tabela"> | string
  }

  export type tbl_historico_viagensWhereInput = {
    AND?: tbl_historico_viagensWhereInput | tbl_historico_viagensWhereInput[]
    OR?: tbl_historico_viagensWhereInput[]
    NOT?: tbl_historico_viagensWhereInput | tbl_historico_viagensWhereInput[]
    id?: IntFilter<"tbl_historico_viagens"> | number
    id_usuario?: IntFilter<"tbl_historico_viagens"> | number
    codigo_operacao?: IntFilter<"tbl_historico_viagens"> | number
    id_operacional?: IntFilter<"tbl_historico_viagens"> | number
    data_viagem?: DateTimeFilter<"tbl_historico_viagens"> | Date | string
    tbl_usuarios?: XOR<Tbl_usuariosRelationFilter, tbl_usuariosWhereInput>
    tbl_operacional?: XOR<Tbl_operacionalRelationFilter, tbl_operacionalWhereInput>
  }

  export type tbl_historico_viagensOrderByWithRelationInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    codigo_operacao?: SortOrder
    id_operacional?: SortOrder
    data_viagem?: SortOrder
    tbl_usuarios?: tbl_usuariosOrderByWithRelationInput
    tbl_operacional?: tbl_operacionalOrderByWithRelationInput
  }

  export type tbl_historico_viagensWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_historico_viagensWhereInput | tbl_historico_viagensWhereInput[]
    OR?: tbl_historico_viagensWhereInput[]
    NOT?: tbl_historico_viagensWhereInput | tbl_historico_viagensWhereInput[]
    id_usuario?: IntFilter<"tbl_historico_viagens"> | number
    codigo_operacao?: IntFilter<"tbl_historico_viagens"> | number
    id_operacional?: IntFilter<"tbl_historico_viagens"> | number
    data_viagem?: DateTimeFilter<"tbl_historico_viagens"> | Date | string
    tbl_usuarios?: XOR<Tbl_usuariosRelationFilter, tbl_usuariosWhereInput>
    tbl_operacional?: XOR<Tbl_operacionalRelationFilter, tbl_operacionalWhereInput>
  }, "id">

  export type tbl_historico_viagensOrderByWithAggregationInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    codigo_operacao?: SortOrder
    id_operacional?: SortOrder
    data_viagem?: SortOrder
    _count?: tbl_historico_viagensCountOrderByAggregateInput
    _avg?: tbl_historico_viagensAvgOrderByAggregateInput
    _max?: tbl_historico_viagensMaxOrderByAggregateInput
    _min?: tbl_historico_viagensMinOrderByAggregateInput
    _sum?: tbl_historico_viagensSumOrderByAggregateInput
  }

  export type tbl_historico_viagensScalarWhereWithAggregatesInput = {
    AND?: tbl_historico_viagensScalarWhereWithAggregatesInput | tbl_historico_viagensScalarWhereWithAggregatesInput[]
    OR?: tbl_historico_viagensScalarWhereWithAggregatesInput[]
    NOT?: tbl_historico_viagensScalarWhereWithAggregatesInput | tbl_historico_viagensScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_historico_viagens"> | number
    id_usuario?: IntWithAggregatesFilter<"tbl_historico_viagens"> | number
    codigo_operacao?: IntWithAggregatesFilter<"tbl_historico_viagens"> | number
    id_operacional?: IntWithAggregatesFilter<"tbl_historico_viagens"> | number
    data_viagem?: DateTimeWithAggregatesFilter<"tbl_historico_viagens"> | Date | string
  }

  export type tbl_operacionalWhereInput = {
    AND?: tbl_operacionalWhereInput | tbl_operacionalWhereInput[]
    OR?: tbl_operacionalWhereInput[]
    NOT?: tbl_operacionalWhereInput | tbl_operacionalWhereInput[]
    id?: IntFilter<"tbl_operacional"> | number
    id_onibus?: IntFilter<"tbl_operacional"> | number
    sentido?: StringFilter<"tbl_operacional"> | string
    data_viagem?: DateTimeFilter<"tbl_operacional"> | Date | string
    tbl_historico_viagens?: Tbl_historico_viagensListRelationFilter
    tabela?: XOR<TabelaRelationFilter, tabelaWhereInput>
  }

  export type tbl_operacionalOrderByWithRelationInput = {
    id?: SortOrder
    id_onibus?: SortOrder
    sentido?: SortOrder
    data_viagem?: SortOrder
    tbl_historico_viagens?: tbl_historico_viagensOrderByRelationAggregateInput
    tabela?: tabelaOrderByWithRelationInput
  }

  export type tbl_operacionalWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_operacionalWhereInput | tbl_operacionalWhereInput[]
    OR?: tbl_operacionalWhereInput[]
    NOT?: tbl_operacionalWhereInput | tbl_operacionalWhereInput[]
    id_onibus?: IntFilter<"tbl_operacional"> | number
    sentido?: StringFilter<"tbl_operacional"> | string
    data_viagem?: DateTimeFilter<"tbl_operacional"> | Date | string
    tbl_historico_viagens?: Tbl_historico_viagensListRelationFilter
    tabela?: XOR<TabelaRelationFilter, tabelaWhereInput>
  }, "id">

  export type tbl_operacionalOrderByWithAggregationInput = {
    id?: SortOrder
    id_onibus?: SortOrder
    sentido?: SortOrder
    data_viagem?: SortOrder
    _count?: tbl_operacionalCountOrderByAggregateInput
    _avg?: tbl_operacionalAvgOrderByAggregateInput
    _max?: tbl_operacionalMaxOrderByAggregateInput
    _min?: tbl_operacionalMinOrderByAggregateInput
    _sum?: tbl_operacionalSumOrderByAggregateInput
  }

  export type tbl_operacionalScalarWhereWithAggregatesInput = {
    AND?: tbl_operacionalScalarWhereWithAggregatesInput | tbl_operacionalScalarWhereWithAggregatesInput[]
    OR?: tbl_operacionalScalarWhereWithAggregatesInput[]
    NOT?: tbl_operacionalScalarWhereWithAggregatesInput | tbl_operacionalScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_operacional"> | number
    id_onibus?: IntWithAggregatesFilter<"tbl_operacional"> | number
    sentido?: StringWithAggregatesFilter<"tbl_operacional"> | string
    data_viagem?: DateTimeWithAggregatesFilter<"tbl_operacional"> | Date | string
  }

  export type tbl_enderecoCreateInput = {
    cep: string
    rua: string
    numero?: string | null
    cidade: string
    bairro?: string | null
    estado: string
    tbl_usuarios?: tbl_usuariosCreateNestedOneWithoutTbl_enderecoInput
  }

  export type tbl_enderecoUncheckedCreateInput = {
    id?: number
    id_usuario?: number | null
    cep: string
    rua: string
    numero?: string | null
    cidade: string
    bairro?: string | null
    estado: string
  }

  export type tbl_enderecoUpdateInput = {
    cep?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    tbl_usuarios?: tbl_usuariosUpdateOneWithoutTbl_enderecoNestedInput
  }

  export type tbl_enderecoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    cep?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_enderecoCreateManyInput = {
    id?: number
    id_usuario?: number | null
    cep: string
    rua: string
    numero?: string | null
    cidade: string
    bairro?: string | null
    estado: string
  }

  export type tbl_enderecoUpdateManyMutationInput = {
    cep?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_enderecoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    cep?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_usuariosCreateInput = {
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    favoritos?: favoritosCreateNestedManyWithoutTbl_usuariosInput
    tbl_autenticacao?: tbl_autenticacaoCreateNestedManyWithoutTbl_usuariosInput
    tbl_endereco?: tbl_enderecoCreateNestedManyWithoutTbl_usuariosInput
    tbl_historico_viagens?: tbl_historico_viagensCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosUncheckedCreateInput = {
    id?: number
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_autenticacao?: tbl_autenticacaoUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_endereco?: tbl_enderecoUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_historico_viagens?: tbl_historico_viagensUncheckedCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosUpdateInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    favoritos?: favoritosUpdateManyWithoutTbl_usuariosNestedInput
    tbl_autenticacao?: tbl_autenticacaoUpdateManyWithoutTbl_usuariosNestedInput
    tbl_endereco?: tbl_enderecoUpdateManyWithoutTbl_usuariosNestedInput
    tbl_historico_viagens?: tbl_historico_viagensUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type tbl_usuariosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_autenticacao?: tbl_autenticacaoUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_endereco?: tbl_enderecoUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_historico_viagens?: tbl_historico_viagensUncheckedUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type tbl_usuariosCreateManyInput = {
    id?: number
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
  }

  export type tbl_usuariosUpdateManyMutationInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_usuariosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_autenticacaoCreateInput = {
    senha: string
    tbl_usuarios: tbl_usuariosCreateNestedOneWithoutTbl_autenticacaoInput
  }

  export type tbl_autenticacaoUncheckedCreateInput = {
    id?: number
    id_usuario: number
    senha: string
  }

  export type tbl_autenticacaoUpdateInput = {
    senha?: StringFieldUpdateOperationsInput | string
    tbl_usuarios?: tbl_usuariosUpdateOneRequiredWithoutTbl_autenticacaoNestedInput
  }

  export type tbl_autenticacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_autenticacaoCreateManyInput = {
    id?: number
    id_usuario: number
    senha: string
  }

  export type tbl_autenticacaoUpdateManyMutationInput = {
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_autenticacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type favoritosCreateInput = {
    itinerario: itinerarioCreateNestedOneWithoutFavoritosInput
    tbl_usuarios: tbl_usuariosCreateNestedOneWithoutFavoritosInput
  }

  export type favoritosUncheckedCreateInput = {
    id?: number
    id_itinerario: number
    id_usuario: number
  }

  export type favoritosUpdateInput = {
    itinerario?: itinerarioUpdateOneRequiredWithoutFavoritosNestedInput
    tbl_usuarios?: tbl_usuariosUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type favoritosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_itinerario?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
  }

  export type favoritosCreateManyInput = {
    id?: number
    id_itinerario: number
    id_usuario: number
  }

  export type favoritosUpdateManyMutationInput = {

  }

  export type favoritosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_itinerario?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
  }

  export type itinerarioCreateInput = {
    origem: string
    destino: string
    linha: string
    favoritos?: favoritosCreateNestedManyWithoutItinerarioInput
  }

  export type itinerarioUncheckedCreateInput = {
    id?: number
    origem: string
    destino: string
    linha: string
    favoritos?: favoritosUncheckedCreateNestedManyWithoutItinerarioInput
  }

  export type itinerarioUpdateInput = {
    origem?: StringFieldUpdateOperationsInput | string
    destino?: StringFieldUpdateOperationsInput | string
    linha?: StringFieldUpdateOperationsInput | string
    favoritos?: favoritosUpdateManyWithoutItinerarioNestedInput
  }

  export type itinerarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    origem?: StringFieldUpdateOperationsInput | string
    destino?: StringFieldUpdateOperationsInput | string
    linha?: StringFieldUpdateOperationsInput | string
    favoritos?: favoritosUncheckedUpdateManyWithoutItinerarioNestedInput
  }

  export type itinerarioCreateManyInput = {
    id?: number
    origem: string
    destino: string
    linha: string
  }

  export type itinerarioUpdateManyMutationInput = {
    origem?: StringFieldUpdateOperationsInput | string
    destino?: StringFieldUpdateOperationsInput | string
    linha?: StringFieldUpdateOperationsInput | string
  }

  export type itinerarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    origem?: StringFieldUpdateOperationsInput | string
    destino?: StringFieldUpdateOperationsInput | string
    linha?: StringFieldUpdateOperationsInput | string
  }

  export type tabelaCreateInput = {
    prefixo: number
    linha: string
    motorista: string
    tbl_operacional?: tbl_operacionalCreateNestedManyWithoutTabelaInput
  }

  export type tabelaUncheckedCreateInput = {
    id?: number
    prefixo: number
    linha: string
    motorista: string
    tbl_operacional?: tbl_operacionalUncheckedCreateNestedManyWithoutTabelaInput
  }

  export type tabelaUpdateInput = {
    prefixo?: IntFieldUpdateOperationsInput | number
    linha?: StringFieldUpdateOperationsInput | string
    motorista?: StringFieldUpdateOperationsInput | string
    tbl_operacional?: tbl_operacionalUpdateManyWithoutTabelaNestedInput
  }

  export type tabelaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    prefixo?: IntFieldUpdateOperationsInput | number
    linha?: StringFieldUpdateOperationsInput | string
    motorista?: StringFieldUpdateOperationsInput | string
    tbl_operacional?: tbl_operacionalUncheckedUpdateManyWithoutTabelaNestedInput
  }

  export type tabelaCreateManyInput = {
    id?: number
    prefixo: number
    linha: string
    motorista: string
  }

  export type tabelaUpdateManyMutationInput = {
    prefixo?: IntFieldUpdateOperationsInput | number
    linha?: StringFieldUpdateOperationsInput | string
    motorista?: StringFieldUpdateOperationsInput | string
  }

  export type tabelaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    prefixo?: IntFieldUpdateOperationsInput | number
    linha?: StringFieldUpdateOperationsInput | string
    motorista?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_historico_viagensCreateInput = {
    codigo_operacao: number
    data_viagem?: Date | string
    tbl_usuarios: tbl_usuariosCreateNestedOneWithoutTbl_historico_viagensInput
    tbl_operacional: tbl_operacionalCreateNestedOneWithoutTbl_historico_viagensInput
  }

  export type tbl_historico_viagensUncheckedCreateInput = {
    id?: number
    id_usuario: number
    codigo_operacao: number
    id_operacional: number
    data_viagem?: Date | string
  }

  export type tbl_historico_viagensUpdateInput = {
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
    tbl_usuarios?: tbl_usuariosUpdateOneRequiredWithoutTbl_historico_viagensNestedInput
    tbl_operacional?: tbl_operacionalUpdateOneRequiredWithoutTbl_historico_viagensNestedInput
  }

  export type tbl_historico_viagensUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    id_operacional?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_historico_viagensCreateManyInput = {
    id?: number
    id_usuario: number
    codigo_operacao: number
    id_operacional: number
    data_viagem?: Date | string
  }

  export type tbl_historico_viagensUpdateManyMutationInput = {
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_historico_viagensUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    id_operacional?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_operacionalCreateInput = {
    sentido: string
    data_viagem?: Date | string
    tbl_historico_viagens?: tbl_historico_viagensCreateNestedManyWithoutTbl_operacionalInput
    tabela: tabelaCreateNestedOneWithoutTbl_operacionalInput
  }

  export type tbl_operacionalUncheckedCreateInput = {
    id?: number
    id_onibus: number
    sentido: string
    data_viagem?: Date | string
    tbl_historico_viagens?: tbl_historico_viagensUncheckedCreateNestedManyWithoutTbl_operacionalInput
  }

  export type tbl_operacionalUpdateInput = {
    sentido?: StringFieldUpdateOperationsInput | string
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
    tbl_historico_viagens?: tbl_historico_viagensUpdateManyWithoutTbl_operacionalNestedInput
    tabela?: tabelaUpdateOneRequiredWithoutTbl_operacionalNestedInput
  }

  export type tbl_operacionalUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_onibus?: IntFieldUpdateOperationsInput | number
    sentido?: StringFieldUpdateOperationsInput | string
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
    tbl_historico_viagens?: tbl_historico_viagensUncheckedUpdateManyWithoutTbl_operacionalNestedInput
  }

  export type tbl_operacionalCreateManyInput = {
    id?: number
    id_onibus: number
    sentido: string
    data_viagem?: Date | string
  }

  export type tbl_operacionalUpdateManyMutationInput = {
    sentido?: StringFieldUpdateOperationsInput | string
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_operacionalUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_onibus?: IntFieldUpdateOperationsInput | number
    sentido?: StringFieldUpdateOperationsInput | string
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Tbl_usuariosNullableRelationFilter = {
    is?: tbl_usuariosWhereInput | null
    isNot?: tbl_usuariosWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tbl_enderecoCountOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    cep?: SortOrder
    rua?: SortOrder
    numero?: SortOrder
    cidade?: SortOrder
    bairro?: SortOrder
    estado?: SortOrder
  }

  export type tbl_enderecoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
  }

  export type tbl_enderecoMaxOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    cep?: SortOrder
    rua?: SortOrder
    numero?: SortOrder
    cidade?: SortOrder
    bairro?: SortOrder
    estado?: SortOrder
  }

  export type tbl_enderecoMinOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    cep?: SortOrder
    rua?: SortOrder
    numero?: SortOrder
    cidade?: SortOrder
    bairro?: SortOrder
    estado?: SortOrder
  }

  export type tbl_enderecoSumOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type FavoritosListRelationFilter = {
    every?: favoritosWhereInput
    some?: favoritosWhereInput
    none?: favoritosWhereInput
  }

  export type Tbl_autenticacaoListRelationFilter = {
    every?: tbl_autenticacaoWhereInput
    some?: tbl_autenticacaoWhereInput
    none?: tbl_autenticacaoWhereInput
  }

  export type Tbl_enderecoListRelationFilter = {
    every?: tbl_enderecoWhereInput
    some?: tbl_enderecoWhereInput
    none?: tbl_enderecoWhereInput
  }

  export type Tbl_historico_viagensListRelationFilter = {
    every?: tbl_historico_viagensWhereInput
    some?: tbl_historico_viagensWhereInput
    none?: tbl_historico_viagensWhereInput
  }

  export type favoritosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_autenticacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_enderecoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_historico_viagensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_usuariosCountOrderByAggregateInput = {
    id?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    foto_perfil?: SortOrder
  }

  export type tbl_usuariosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_usuariosMaxOrderByAggregateInput = {
    id?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    foto_perfil?: SortOrder
  }

  export type tbl_usuariosMinOrderByAggregateInput = {
    id?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    foto_perfil?: SortOrder
  }

  export type tbl_usuariosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_usuariosRelationFilter = {
    is?: tbl_usuariosWhereInput
    isNot?: tbl_usuariosWhereInput
  }

  export type tbl_autenticacaoCountOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    senha?: SortOrder
  }

  export type tbl_autenticacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
  }

  export type tbl_autenticacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    senha?: SortOrder
  }

  export type tbl_autenticacaoMinOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    senha?: SortOrder
  }

  export type tbl_autenticacaoSumOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
  }

  export type ItinerarioRelationFilter = {
    is?: itinerarioWhereInput
    isNot?: itinerarioWhereInput
  }

  export type favoritosCountOrderByAggregateInput = {
    id?: SortOrder
    id_itinerario?: SortOrder
    id_usuario?: SortOrder
  }

  export type favoritosAvgOrderByAggregateInput = {
    id?: SortOrder
    id_itinerario?: SortOrder
    id_usuario?: SortOrder
  }

  export type favoritosMaxOrderByAggregateInput = {
    id?: SortOrder
    id_itinerario?: SortOrder
    id_usuario?: SortOrder
  }

  export type favoritosMinOrderByAggregateInput = {
    id?: SortOrder
    id_itinerario?: SortOrder
    id_usuario?: SortOrder
  }

  export type favoritosSumOrderByAggregateInput = {
    id?: SortOrder
    id_itinerario?: SortOrder
    id_usuario?: SortOrder
  }

  export type itinerarioCountOrderByAggregateInput = {
    id?: SortOrder
    origem?: SortOrder
    destino?: SortOrder
    linha?: SortOrder
  }

  export type itinerarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type itinerarioMaxOrderByAggregateInput = {
    id?: SortOrder
    origem?: SortOrder
    destino?: SortOrder
    linha?: SortOrder
  }

  export type itinerarioMinOrderByAggregateInput = {
    id?: SortOrder
    origem?: SortOrder
    destino?: SortOrder
    linha?: SortOrder
  }

  export type itinerarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_operacionalListRelationFilter = {
    every?: tbl_operacionalWhereInput
    some?: tbl_operacionalWhereInput
    none?: tbl_operacionalWhereInput
  }

  export type tbl_operacionalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tabelaCountOrderByAggregateInput = {
    id?: SortOrder
    prefixo?: SortOrder
    linha?: SortOrder
    motorista?: SortOrder
  }

  export type tabelaAvgOrderByAggregateInput = {
    id?: SortOrder
    prefixo?: SortOrder
  }

  export type tabelaMaxOrderByAggregateInput = {
    id?: SortOrder
    prefixo?: SortOrder
    linha?: SortOrder
    motorista?: SortOrder
  }

  export type tabelaMinOrderByAggregateInput = {
    id?: SortOrder
    prefixo?: SortOrder
    linha?: SortOrder
    motorista?: SortOrder
  }

  export type tabelaSumOrderByAggregateInput = {
    id?: SortOrder
    prefixo?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Tbl_operacionalRelationFilter = {
    is?: tbl_operacionalWhereInput
    isNot?: tbl_operacionalWhereInput
  }

  export type tbl_historico_viagensCountOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    codigo_operacao?: SortOrder
    id_operacional?: SortOrder
    data_viagem?: SortOrder
  }

  export type tbl_historico_viagensAvgOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    codigo_operacao?: SortOrder
    id_operacional?: SortOrder
  }

  export type tbl_historico_viagensMaxOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    codigo_operacao?: SortOrder
    id_operacional?: SortOrder
    data_viagem?: SortOrder
  }

  export type tbl_historico_viagensMinOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    codigo_operacao?: SortOrder
    id_operacional?: SortOrder
    data_viagem?: SortOrder
  }

  export type tbl_historico_viagensSumOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    codigo_operacao?: SortOrder
    id_operacional?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type TabelaRelationFilter = {
    is?: tabelaWhereInput
    isNot?: tabelaWhereInput
  }

  export type tbl_operacionalCountOrderByAggregateInput = {
    id?: SortOrder
    id_onibus?: SortOrder
    sentido?: SortOrder
    data_viagem?: SortOrder
  }

  export type tbl_operacionalAvgOrderByAggregateInput = {
    id?: SortOrder
    id_onibus?: SortOrder
  }

  export type tbl_operacionalMaxOrderByAggregateInput = {
    id?: SortOrder
    id_onibus?: SortOrder
    sentido?: SortOrder
    data_viagem?: SortOrder
  }

  export type tbl_operacionalMinOrderByAggregateInput = {
    id?: SortOrder
    id_onibus?: SortOrder
    sentido?: SortOrder
    data_viagem?: SortOrder
  }

  export type tbl_operacionalSumOrderByAggregateInput = {
    id?: SortOrder
    id_onibus?: SortOrder
  }

  export type tbl_usuariosCreateNestedOneWithoutTbl_enderecoInput = {
    create?: XOR<tbl_usuariosCreateWithoutTbl_enderecoInput, tbl_usuariosUncheckedCreateWithoutTbl_enderecoInput>
    connectOrCreate?: tbl_usuariosCreateOrConnectWithoutTbl_enderecoInput
    connect?: tbl_usuariosWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type tbl_usuariosUpdateOneWithoutTbl_enderecoNestedInput = {
    create?: XOR<tbl_usuariosCreateWithoutTbl_enderecoInput, tbl_usuariosUncheckedCreateWithoutTbl_enderecoInput>
    connectOrCreate?: tbl_usuariosCreateOrConnectWithoutTbl_enderecoInput
    upsert?: tbl_usuariosUpsertWithoutTbl_enderecoInput
    disconnect?: tbl_usuariosWhereInput | boolean
    delete?: tbl_usuariosWhereInput | boolean
    connect?: tbl_usuariosWhereUniqueInput
    update?: XOR<XOR<tbl_usuariosUpdateToOneWithWhereWithoutTbl_enderecoInput, tbl_usuariosUpdateWithoutTbl_enderecoInput>, tbl_usuariosUncheckedUpdateWithoutTbl_enderecoInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type favoritosCreateNestedManyWithoutTbl_usuariosInput = {
    create?: XOR<favoritosCreateWithoutTbl_usuariosInput, favoritosUncheckedCreateWithoutTbl_usuariosInput> | favoritosCreateWithoutTbl_usuariosInput[] | favoritosUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutTbl_usuariosInput | favoritosCreateOrConnectWithoutTbl_usuariosInput[]
    createMany?: favoritosCreateManyTbl_usuariosInputEnvelope
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
  }

  export type tbl_autenticacaoCreateNestedManyWithoutTbl_usuariosInput = {
    create?: XOR<tbl_autenticacaoCreateWithoutTbl_usuariosInput, tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput> | tbl_autenticacaoCreateWithoutTbl_usuariosInput[] | tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_autenticacaoCreateOrConnectWithoutTbl_usuariosInput | tbl_autenticacaoCreateOrConnectWithoutTbl_usuariosInput[]
    createMany?: tbl_autenticacaoCreateManyTbl_usuariosInputEnvelope
    connect?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
  }

  export type tbl_enderecoCreateNestedManyWithoutTbl_usuariosInput = {
    create?: XOR<tbl_enderecoCreateWithoutTbl_usuariosInput, tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput> | tbl_enderecoCreateWithoutTbl_usuariosInput[] | tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_enderecoCreateOrConnectWithoutTbl_usuariosInput | tbl_enderecoCreateOrConnectWithoutTbl_usuariosInput[]
    createMany?: tbl_enderecoCreateManyTbl_usuariosInputEnvelope
    connect?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
  }

  export type tbl_historico_viagensCreateNestedManyWithoutTbl_usuariosInput = {
    create?: XOR<tbl_historico_viagensCreateWithoutTbl_usuariosInput, tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput> | tbl_historico_viagensCreateWithoutTbl_usuariosInput[] | tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_historico_viagensCreateOrConnectWithoutTbl_usuariosInput | tbl_historico_viagensCreateOrConnectWithoutTbl_usuariosInput[]
    createMany?: tbl_historico_viagensCreateManyTbl_usuariosInputEnvelope
    connect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
  }

  export type favoritosUncheckedCreateNestedManyWithoutTbl_usuariosInput = {
    create?: XOR<favoritosCreateWithoutTbl_usuariosInput, favoritosUncheckedCreateWithoutTbl_usuariosInput> | favoritosCreateWithoutTbl_usuariosInput[] | favoritosUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutTbl_usuariosInput | favoritosCreateOrConnectWithoutTbl_usuariosInput[]
    createMany?: favoritosCreateManyTbl_usuariosInputEnvelope
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
  }

  export type tbl_autenticacaoUncheckedCreateNestedManyWithoutTbl_usuariosInput = {
    create?: XOR<tbl_autenticacaoCreateWithoutTbl_usuariosInput, tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput> | tbl_autenticacaoCreateWithoutTbl_usuariosInput[] | tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_autenticacaoCreateOrConnectWithoutTbl_usuariosInput | tbl_autenticacaoCreateOrConnectWithoutTbl_usuariosInput[]
    createMany?: tbl_autenticacaoCreateManyTbl_usuariosInputEnvelope
    connect?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
  }

  export type tbl_enderecoUncheckedCreateNestedManyWithoutTbl_usuariosInput = {
    create?: XOR<tbl_enderecoCreateWithoutTbl_usuariosInput, tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput> | tbl_enderecoCreateWithoutTbl_usuariosInput[] | tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_enderecoCreateOrConnectWithoutTbl_usuariosInput | tbl_enderecoCreateOrConnectWithoutTbl_usuariosInput[]
    createMany?: tbl_enderecoCreateManyTbl_usuariosInputEnvelope
    connect?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
  }

  export type tbl_historico_viagensUncheckedCreateNestedManyWithoutTbl_usuariosInput = {
    create?: XOR<tbl_historico_viagensCreateWithoutTbl_usuariosInput, tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput> | tbl_historico_viagensCreateWithoutTbl_usuariosInput[] | tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_historico_viagensCreateOrConnectWithoutTbl_usuariosInput | tbl_historico_viagensCreateOrConnectWithoutTbl_usuariosInput[]
    createMany?: tbl_historico_viagensCreateManyTbl_usuariosInputEnvelope
    connect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
  }

  export type favoritosUpdateManyWithoutTbl_usuariosNestedInput = {
    create?: XOR<favoritosCreateWithoutTbl_usuariosInput, favoritosUncheckedCreateWithoutTbl_usuariosInput> | favoritosCreateWithoutTbl_usuariosInput[] | favoritosUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutTbl_usuariosInput | favoritosCreateOrConnectWithoutTbl_usuariosInput[]
    upsert?: favoritosUpsertWithWhereUniqueWithoutTbl_usuariosInput | favoritosUpsertWithWhereUniqueWithoutTbl_usuariosInput[]
    createMany?: favoritosCreateManyTbl_usuariosInputEnvelope
    set?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    disconnect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    delete?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    update?: favoritosUpdateWithWhereUniqueWithoutTbl_usuariosInput | favoritosUpdateWithWhereUniqueWithoutTbl_usuariosInput[]
    updateMany?: favoritosUpdateManyWithWhereWithoutTbl_usuariosInput | favoritosUpdateManyWithWhereWithoutTbl_usuariosInput[]
    deleteMany?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
  }

  export type tbl_autenticacaoUpdateManyWithoutTbl_usuariosNestedInput = {
    create?: XOR<tbl_autenticacaoCreateWithoutTbl_usuariosInput, tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput> | tbl_autenticacaoCreateWithoutTbl_usuariosInput[] | tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_autenticacaoCreateOrConnectWithoutTbl_usuariosInput | tbl_autenticacaoCreateOrConnectWithoutTbl_usuariosInput[]
    upsert?: tbl_autenticacaoUpsertWithWhereUniqueWithoutTbl_usuariosInput | tbl_autenticacaoUpsertWithWhereUniqueWithoutTbl_usuariosInput[]
    createMany?: tbl_autenticacaoCreateManyTbl_usuariosInputEnvelope
    set?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
    disconnect?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
    delete?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
    connect?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
    update?: tbl_autenticacaoUpdateWithWhereUniqueWithoutTbl_usuariosInput | tbl_autenticacaoUpdateWithWhereUniqueWithoutTbl_usuariosInput[]
    updateMany?: tbl_autenticacaoUpdateManyWithWhereWithoutTbl_usuariosInput | tbl_autenticacaoUpdateManyWithWhereWithoutTbl_usuariosInput[]
    deleteMany?: tbl_autenticacaoScalarWhereInput | tbl_autenticacaoScalarWhereInput[]
  }

  export type tbl_enderecoUpdateManyWithoutTbl_usuariosNestedInput = {
    create?: XOR<tbl_enderecoCreateWithoutTbl_usuariosInput, tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput> | tbl_enderecoCreateWithoutTbl_usuariosInput[] | tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_enderecoCreateOrConnectWithoutTbl_usuariosInput | tbl_enderecoCreateOrConnectWithoutTbl_usuariosInput[]
    upsert?: tbl_enderecoUpsertWithWhereUniqueWithoutTbl_usuariosInput | tbl_enderecoUpsertWithWhereUniqueWithoutTbl_usuariosInput[]
    createMany?: tbl_enderecoCreateManyTbl_usuariosInputEnvelope
    set?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
    disconnect?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
    delete?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
    connect?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
    update?: tbl_enderecoUpdateWithWhereUniqueWithoutTbl_usuariosInput | tbl_enderecoUpdateWithWhereUniqueWithoutTbl_usuariosInput[]
    updateMany?: tbl_enderecoUpdateManyWithWhereWithoutTbl_usuariosInput | tbl_enderecoUpdateManyWithWhereWithoutTbl_usuariosInput[]
    deleteMany?: tbl_enderecoScalarWhereInput | tbl_enderecoScalarWhereInput[]
  }

  export type tbl_historico_viagensUpdateManyWithoutTbl_usuariosNestedInput = {
    create?: XOR<tbl_historico_viagensCreateWithoutTbl_usuariosInput, tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput> | tbl_historico_viagensCreateWithoutTbl_usuariosInput[] | tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_historico_viagensCreateOrConnectWithoutTbl_usuariosInput | tbl_historico_viagensCreateOrConnectWithoutTbl_usuariosInput[]
    upsert?: tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_usuariosInput | tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_usuariosInput[]
    createMany?: tbl_historico_viagensCreateManyTbl_usuariosInputEnvelope
    set?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    disconnect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    delete?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    connect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    update?: tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_usuariosInput | tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_usuariosInput[]
    updateMany?: tbl_historico_viagensUpdateManyWithWhereWithoutTbl_usuariosInput | tbl_historico_viagensUpdateManyWithWhereWithoutTbl_usuariosInput[]
    deleteMany?: tbl_historico_viagensScalarWhereInput | tbl_historico_viagensScalarWhereInput[]
  }

  export type favoritosUncheckedUpdateManyWithoutTbl_usuariosNestedInput = {
    create?: XOR<favoritosCreateWithoutTbl_usuariosInput, favoritosUncheckedCreateWithoutTbl_usuariosInput> | favoritosCreateWithoutTbl_usuariosInput[] | favoritosUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutTbl_usuariosInput | favoritosCreateOrConnectWithoutTbl_usuariosInput[]
    upsert?: favoritosUpsertWithWhereUniqueWithoutTbl_usuariosInput | favoritosUpsertWithWhereUniqueWithoutTbl_usuariosInput[]
    createMany?: favoritosCreateManyTbl_usuariosInputEnvelope
    set?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    disconnect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    delete?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    update?: favoritosUpdateWithWhereUniqueWithoutTbl_usuariosInput | favoritosUpdateWithWhereUniqueWithoutTbl_usuariosInput[]
    updateMany?: favoritosUpdateManyWithWhereWithoutTbl_usuariosInput | favoritosUpdateManyWithWhereWithoutTbl_usuariosInput[]
    deleteMany?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
  }

  export type tbl_autenticacaoUncheckedUpdateManyWithoutTbl_usuariosNestedInput = {
    create?: XOR<tbl_autenticacaoCreateWithoutTbl_usuariosInput, tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput> | tbl_autenticacaoCreateWithoutTbl_usuariosInput[] | tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_autenticacaoCreateOrConnectWithoutTbl_usuariosInput | tbl_autenticacaoCreateOrConnectWithoutTbl_usuariosInput[]
    upsert?: tbl_autenticacaoUpsertWithWhereUniqueWithoutTbl_usuariosInput | tbl_autenticacaoUpsertWithWhereUniqueWithoutTbl_usuariosInput[]
    createMany?: tbl_autenticacaoCreateManyTbl_usuariosInputEnvelope
    set?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
    disconnect?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
    delete?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
    connect?: tbl_autenticacaoWhereUniqueInput | tbl_autenticacaoWhereUniqueInput[]
    update?: tbl_autenticacaoUpdateWithWhereUniqueWithoutTbl_usuariosInput | tbl_autenticacaoUpdateWithWhereUniqueWithoutTbl_usuariosInput[]
    updateMany?: tbl_autenticacaoUpdateManyWithWhereWithoutTbl_usuariosInput | tbl_autenticacaoUpdateManyWithWhereWithoutTbl_usuariosInput[]
    deleteMany?: tbl_autenticacaoScalarWhereInput | tbl_autenticacaoScalarWhereInput[]
  }

  export type tbl_enderecoUncheckedUpdateManyWithoutTbl_usuariosNestedInput = {
    create?: XOR<tbl_enderecoCreateWithoutTbl_usuariosInput, tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput> | tbl_enderecoCreateWithoutTbl_usuariosInput[] | tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_enderecoCreateOrConnectWithoutTbl_usuariosInput | tbl_enderecoCreateOrConnectWithoutTbl_usuariosInput[]
    upsert?: tbl_enderecoUpsertWithWhereUniqueWithoutTbl_usuariosInput | tbl_enderecoUpsertWithWhereUniqueWithoutTbl_usuariosInput[]
    createMany?: tbl_enderecoCreateManyTbl_usuariosInputEnvelope
    set?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
    disconnect?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
    delete?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
    connect?: tbl_enderecoWhereUniqueInput | tbl_enderecoWhereUniqueInput[]
    update?: tbl_enderecoUpdateWithWhereUniqueWithoutTbl_usuariosInput | tbl_enderecoUpdateWithWhereUniqueWithoutTbl_usuariosInput[]
    updateMany?: tbl_enderecoUpdateManyWithWhereWithoutTbl_usuariosInput | tbl_enderecoUpdateManyWithWhereWithoutTbl_usuariosInput[]
    deleteMany?: tbl_enderecoScalarWhereInput | tbl_enderecoScalarWhereInput[]
  }

  export type tbl_historico_viagensUncheckedUpdateManyWithoutTbl_usuariosNestedInput = {
    create?: XOR<tbl_historico_viagensCreateWithoutTbl_usuariosInput, tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput> | tbl_historico_viagensCreateWithoutTbl_usuariosInput[] | tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput[]
    connectOrCreate?: tbl_historico_viagensCreateOrConnectWithoutTbl_usuariosInput | tbl_historico_viagensCreateOrConnectWithoutTbl_usuariosInput[]
    upsert?: tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_usuariosInput | tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_usuariosInput[]
    createMany?: tbl_historico_viagensCreateManyTbl_usuariosInputEnvelope
    set?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    disconnect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    delete?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    connect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    update?: tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_usuariosInput | tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_usuariosInput[]
    updateMany?: tbl_historico_viagensUpdateManyWithWhereWithoutTbl_usuariosInput | tbl_historico_viagensUpdateManyWithWhereWithoutTbl_usuariosInput[]
    deleteMany?: tbl_historico_viagensScalarWhereInput | tbl_historico_viagensScalarWhereInput[]
  }

  export type tbl_usuariosCreateNestedOneWithoutTbl_autenticacaoInput = {
    create?: XOR<tbl_usuariosCreateWithoutTbl_autenticacaoInput, tbl_usuariosUncheckedCreateWithoutTbl_autenticacaoInput>
    connectOrCreate?: tbl_usuariosCreateOrConnectWithoutTbl_autenticacaoInput
    connect?: tbl_usuariosWhereUniqueInput
  }

  export type tbl_usuariosUpdateOneRequiredWithoutTbl_autenticacaoNestedInput = {
    create?: XOR<tbl_usuariosCreateWithoutTbl_autenticacaoInput, tbl_usuariosUncheckedCreateWithoutTbl_autenticacaoInput>
    connectOrCreate?: tbl_usuariosCreateOrConnectWithoutTbl_autenticacaoInput
    upsert?: tbl_usuariosUpsertWithoutTbl_autenticacaoInput
    connect?: tbl_usuariosWhereUniqueInput
    update?: XOR<XOR<tbl_usuariosUpdateToOneWithWhereWithoutTbl_autenticacaoInput, tbl_usuariosUpdateWithoutTbl_autenticacaoInput>, tbl_usuariosUncheckedUpdateWithoutTbl_autenticacaoInput>
  }

  export type itinerarioCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<itinerarioCreateWithoutFavoritosInput, itinerarioUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: itinerarioCreateOrConnectWithoutFavoritosInput
    connect?: itinerarioWhereUniqueInput
  }

  export type tbl_usuariosCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<tbl_usuariosCreateWithoutFavoritosInput, tbl_usuariosUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: tbl_usuariosCreateOrConnectWithoutFavoritosInput
    connect?: tbl_usuariosWhereUniqueInput
  }

  export type itinerarioUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<itinerarioCreateWithoutFavoritosInput, itinerarioUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: itinerarioCreateOrConnectWithoutFavoritosInput
    upsert?: itinerarioUpsertWithoutFavoritosInput
    connect?: itinerarioWhereUniqueInput
    update?: XOR<XOR<itinerarioUpdateToOneWithWhereWithoutFavoritosInput, itinerarioUpdateWithoutFavoritosInput>, itinerarioUncheckedUpdateWithoutFavoritosInput>
  }

  export type tbl_usuariosUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<tbl_usuariosCreateWithoutFavoritosInput, tbl_usuariosUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: tbl_usuariosCreateOrConnectWithoutFavoritosInput
    upsert?: tbl_usuariosUpsertWithoutFavoritosInput
    connect?: tbl_usuariosWhereUniqueInput
    update?: XOR<XOR<tbl_usuariosUpdateToOneWithWhereWithoutFavoritosInput, tbl_usuariosUpdateWithoutFavoritosInput>, tbl_usuariosUncheckedUpdateWithoutFavoritosInput>
  }

  export type favoritosCreateNestedManyWithoutItinerarioInput = {
    create?: XOR<favoritosCreateWithoutItinerarioInput, favoritosUncheckedCreateWithoutItinerarioInput> | favoritosCreateWithoutItinerarioInput[] | favoritosUncheckedCreateWithoutItinerarioInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutItinerarioInput | favoritosCreateOrConnectWithoutItinerarioInput[]
    createMany?: favoritosCreateManyItinerarioInputEnvelope
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
  }

  export type favoritosUncheckedCreateNestedManyWithoutItinerarioInput = {
    create?: XOR<favoritosCreateWithoutItinerarioInput, favoritosUncheckedCreateWithoutItinerarioInput> | favoritosCreateWithoutItinerarioInput[] | favoritosUncheckedCreateWithoutItinerarioInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutItinerarioInput | favoritosCreateOrConnectWithoutItinerarioInput[]
    createMany?: favoritosCreateManyItinerarioInputEnvelope
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
  }

  export type favoritosUpdateManyWithoutItinerarioNestedInput = {
    create?: XOR<favoritosCreateWithoutItinerarioInput, favoritosUncheckedCreateWithoutItinerarioInput> | favoritosCreateWithoutItinerarioInput[] | favoritosUncheckedCreateWithoutItinerarioInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutItinerarioInput | favoritosCreateOrConnectWithoutItinerarioInput[]
    upsert?: favoritosUpsertWithWhereUniqueWithoutItinerarioInput | favoritosUpsertWithWhereUniqueWithoutItinerarioInput[]
    createMany?: favoritosCreateManyItinerarioInputEnvelope
    set?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    disconnect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    delete?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    update?: favoritosUpdateWithWhereUniqueWithoutItinerarioInput | favoritosUpdateWithWhereUniqueWithoutItinerarioInput[]
    updateMany?: favoritosUpdateManyWithWhereWithoutItinerarioInput | favoritosUpdateManyWithWhereWithoutItinerarioInput[]
    deleteMany?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
  }

  export type favoritosUncheckedUpdateManyWithoutItinerarioNestedInput = {
    create?: XOR<favoritosCreateWithoutItinerarioInput, favoritosUncheckedCreateWithoutItinerarioInput> | favoritosCreateWithoutItinerarioInput[] | favoritosUncheckedCreateWithoutItinerarioInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutItinerarioInput | favoritosCreateOrConnectWithoutItinerarioInput[]
    upsert?: favoritosUpsertWithWhereUniqueWithoutItinerarioInput | favoritosUpsertWithWhereUniqueWithoutItinerarioInput[]
    createMany?: favoritosCreateManyItinerarioInputEnvelope
    set?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    disconnect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    delete?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    update?: favoritosUpdateWithWhereUniqueWithoutItinerarioInput | favoritosUpdateWithWhereUniqueWithoutItinerarioInput[]
    updateMany?: favoritosUpdateManyWithWhereWithoutItinerarioInput | favoritosUpdateManyWithWhereWithoutItinerarioInput[]
    deleteMany?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
  }

  export type tbl_operacionalCreateNestedManyWithoutTabelaInput = {
    create?: XOR<tbl_operacionalCreateWithoutTabelaInput, tbl_operacionalUncheckedCreateWithoutTabelaInput> | tbl_operacionalCreateWithoutTabelaInput[] | tbl_operacionalUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: tbl_operacionalCreateOrConnectWithoutTabelaInput | tbl_operacionalCreateOrConnectWithoutTabelaInput[]
    createMany?: tbl_operacionalCreateManyTabelaInputEnvelope
    connect?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
  }

  export type tbl_operacionalUncheckedCreateNestedManyWithoutTabelaInput = {
    create?: XOR<tbl_operacionalCreateWithoutTabelaInput, tbl_operacionalUncheckedCreateWithoutTabelaInput> | tbl_operacionalCreateWithoutTabelaInput[] | tbl_operacionalUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: tbl_operacionalCreateOrConnectWithoutTabelaInput | tbl_operacionalCreateOrConnectWithoutTabelaInput[]
    createMany?: tbl_operacionalCreateManyTabelaInputEnvelope
    connect?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
  }

  export type tbl_operacionalUpdateManyWithoutTabelaNestedInput = {
    create?: XOR<tbl_operacionalCreateWithoutTabelaInput, tbl_operacionalUncheckedCreateWithoutTabelaInput> | tbl_operacionalCreateWithoutTabelaInput[] | tbl_operacionalUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: tbl_operacionalCreateOrConnectWithoutTabelaInput | tbl_operacionalCreateOrConnectWithoutTabelaInput[]
    upsert?: tbl_operacionalUpsertWithWhereUniqueWithoutTabelaInput | tbl_operacionalUpsertWithWhereUniqueWithoutTabelaInput[]
    createMany?: tbl_operacionalCreateManyTabelaInputEnvelope
    set?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
    disconnect?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
    delete?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
    connect?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
    update?: tbl_operacionalUpdateWithWhereUniqueWithoutTabelaInput | tbl_operacionalUpdateWithWhereUniqueWithoutTabelaInput[]
    updateMany?: tbl_operacionalUpdateManyWithWhereWithoutTabelaInput | tbl_operacionalUpdateManyWithWhereWithoutTabelaInput[]
    deleteMany?: tbl_operacionalScalarWhereInput | tbl_operacionalScalarWhereInput[]
  }

  export type tbl_operacionalUncheckedUpdateManyWithoutTabelaNestedInput = {
    create?: XOR<tbl_operacionalCreateWithoutTabelaInput, tbl_operacionalUncheckedCreateWithoutTabelaInput> | tbl_operacionalCreateWithoutTabelaInput[] | tbl_operacionalUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: tbl_operacionalCreateOrConnectWithoutTabelaInput | tbl_operacionalCreateOrConnectWithoutTabelaInput[]
    upsert?: tbl_operacionalUpsertWithWhereUniqueWithoutTabelaInput | tbl_operacionalUpsertWithWhereUniqueWithoutTabelaInput[]
    createMany?: tbl_operacionalCreateManyTabelaInputEnvelope
    set?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
    disconnect?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
    delete?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
    connect?: tbl_operacionalWhereUniqueInput | tbl_operacionalWhereUniqueInput[]
    update?: tbl_operacionalUpdateWithWhereUniqueWithoutTabelaInput | tbl_operacionalUpdateWithWhereUniqueWithoutTabelaInput[]
    updateMany?: tbl_operacionalUpdateManyWithWhereWithoutTabelaInput | tbl_operacionalUpdateManyWithWhereWithoutTabelaInput[]
    deleteMany?: tbl_operacionalScalarWhereInput | tbl_operacionalScalarWhereInput[]
  }

  export type tbl_usuariosCreateNestedOneWithoutTbl_historico_viagensInput = {
    create?: XOR<tbl_usuariosCreateWithoutTbl_historico_viagensInput, tbl_usuariosUncheckedCreateWithoutTbl_historico_viagensInput>
    connectOrCreate?: tbl_usuariosCreateOrConnectWithoutTbl_historico_viagensInput
    connect?: tbl_usuariosWhereUniqueInput
  }

  export type tbl_operacionalCreateNestedOneWithoutTbl_historico_viagensInput = {
    create?: XOR<tbl_operacionalCreateWithoutTbl_historico_viagensInput, tbl_operacionalUncheckedCreateWithoutTbl_historico_viagensInput>
    connectOrCreate?: tbl_operacionalCreateOrConnectWithoutTbl_historico_viagensInput
    connect?: tbl_operacionalWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type tbl_usuariosUpdateOneRequiredWithoutTbl_historico_viagensNestedInput = {
    create?: XOR<tbl_usuariosCreateWithoutTbl_historico_viagensInput, tbl_usuariosUncheckedCreateWithoutTbl_historico_viagensInput>
    connectOrCreate?: tbl_usuariosCreateOrConnectWithoutTbl_historico_viagensInput
    upsert?: tbl_usuariosUpsertWithoutTbl_historico_viagensInput
    connect?: tbl_usuariosWhereUniqueInput
    update?: XOR<XOR<tbl_usuariosUpdateToOneWithWhereWithoutTbl_historico_viagensInput, tbl_usuariosUpdateWithoutTbl_historico_viagensInput>, tbl_usuariosUncheckedUpdateWithoutTbl_historico_viagensInput>
  }

  export type tbl_operacionalUpdateOneRequiredWithoutTbl_historico_viagensNestedInput = {
    create?: XOR<tbl_operacionalCreateWithoutTbl_historico_viagensInput, tbl_operacionalUncheckedCreateWithoutTbl_historico_viagensInput>
    connectOrCreate?: tbl_operacionalCreateOrConnectWithoutTbl_historico_viagensInput
    upsert?: tbl_operacionalUpsertWithoutTbl_historico_viagensInput
    connect?: tbl_operacionalWhereUniqueInput
    update?: XOR<XOR<tbl_operacionalUpdateToOneWithWhereWithoutTbl_historico_viagensInput, tbl_operacionalUpdateWithoutTbl_historico_viagensInput>, tbl_operacionalUncheckedUpdateWithoutTbl_historico_viagensInput>
  }

  export type tbl_historico_viagensCreateNestedManyWithoutTbl_operacionalInput = {
    create?: XOR<tbl_historico_viagensCreateWithoutTbl_operacionalInput, tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput> | tbl_historico_viagensCreateWithoutTbl_operacionalInput[] | tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput[]
    connectOrCreate?: tbl_historico_viagensCreateOrConnectWithoutTbl_operacionalInput | tbl_historico_viagensCreateOrConnectWithoutTbl_operacionalInput[]
    createMany?: tbl_historico_viagensCreateManyTbl_operacionalInputEnvelope
    connect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
  }

  export type tabelaCreateNestedOneWithoutTbl_operacionalInput = {
    create?: XOR<tabelaCreateWithoutTbl_operacionalInput, tabelaUncheckedCreateWithoutTbl_operacionalInput>
    connectOrCreate?: tabelaCreateOrConnectWithoutTbl_operacionalInput
    connect?: tabelaWhereUniqueInput
  }

  export type tbl_historico_viagensUncheckedCreateNestedManyWithoutTbl_operacionalInput = {
    create?: XOR<tbl_historico_viagensCreateWithoutTbl_operacionalInput, tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput> | tbl_historico_viagensCreateWithoutTbl_operacionalInput[] | tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput[]
    connectOrCreate?: tbl_historico_viagensCreateOrConnectWithoutTbl_operacionalInput | tbl_historico_viagensCreateOrConnectWithoutTbl_operacionalInput[]
    createMany?: tbl_historico_viagensCreateManyTbl_operacionalInputEnvelope
    connect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
  }

  export type tbl_historico_viagensUpdateManyWithoutTbl_operacionalNestedInput = {
    create?: XOR<tbl_historico_viagensCreateWithoutTbl_operacionalInput, tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput> | tbl_historico_viagensCreateWithoutTbl_operacionalInput[] | tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput[]
    connectOrCreate?: tbl_historico_viagensCreateOrConnectWithoutTbl_operacionalInput | tbl_historico_viagensCreateOrConnectWithoutTbl_operacionalInput[]
    upsert?: tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_operacionalInput | tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_operacionalInput[]
    createMany?: tbl_historico_viagensCreateManyTbl_operacionalInputEnvelope
    set?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    disconnect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    delete?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    connect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    update?: tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_operacionalInput | tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_operacionalInput[]
    updateMany?: tbl_historico_viagensUpdateManyWithWhereWithoutTbl_operacionalInput | tbl_historico_viagensUpdateManyWithWhereWithoutTbl_operacionalInput[]
    deleteMany?: tbl_historico_viagensScalarWhereInput | tbl_historico_viagensScalarWhereInput[]
  }

  export type tabelaUpdateOneRequiredWithoutTbl_operacionalNestedInput = {
    create?: XOR<tabelaCreateWithoutTbl_operacionalInput, tabelaUncheckedCreateWithoutTbl_operacionalInput>
    connectOrCreate?: tabelaCreateOrConnectWithoutTbl_operacionalInput
    upsert?: tabelaUpsertWithoutTbl_operacionalInput
    connect?: tabelaWhereUniqueInput
    update?: XOR<XOR<tabelaUpdateToOneWithWhereWithoutTbl_operacionalInput, tabelaUpdateWithoutTbl_operacionalInput>, tabelaUncheckedUpdateWithoutTbl_operacionalInput>
  }

  export type tbl_historico_viagensUncheckedUpdateManyWithoutTbl_operacionalNestedInput = {
    create?: XOR<tbl_historico_viagensCreateWithoutTbl_operacionalInput, tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput> | tbl_historico_viagensCreateWithoutTbl_operacionalInput[] | tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput[]
    connectOrCreate?: tbl_historico_viagensCreateOrConnectWithoutTbl_operacionalInput | tbl_historico_viagensCreateOrConnectWithoutTbl_operacionalInput[]
    upsert?: tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_operacionalInput | tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_operacionalInput[]
    createMany?: tbl_historico_viagensCreateManyTbl_operacionalInputEnvelope
    set?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    disconnect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    delete?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    connect?: tbl_historico_viagensWhereUniqueInput | tbl_historico_viagensWhereUniqueInput[]
    update?: tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_operacionalInput | tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_operacionalInput[]
    updateMany?: tbl_historico_viagensUpdateManyWithWhereWithoutTbl_operacionalInput | tbl_historico_viagensUpdateManyWithWhereWithoutTbl_operacionalInput[]
    deleteMany?: tbl_historico_viagensScalarWhereInput | tbl_historico_viagensScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type tbl_usuariosCreateWithoutTbl_enderecoInput = {
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    favoritos?: favoritosCreateNestedManyWithoutTbl_usuariosInput
    tbl_autenticacao?: tbl_autenticacaoCreateNestedManyWithoutTbl_usuariosInput
    tbl_historico_viagens?: tbl_historico_viagensCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosUncheckedCreateWithoutTbl_enderecoInput = {
    id?: number
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_autenticacao?: tbl_autenticacaoUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_historico_viagens?: tbl_historico_viagensUncheckedCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosCreateOrConnectWithoutTbl_enderecoInput = {
    where: tbl_usuariosWhereUniqueInput
    create: XOR<tbl_usuariosCreateWithoutTbl_enderecoInput, tbl_usuariosUncheckedCreateWithoutTbl_enderecoInput>
  }

  export type tbl_usuariosUpsertWithoutTbl_enderecoInput = {
    update: XOR<tbl_usuariosUpdateWithoutTbl_enderecoInput, tbl_usuariosUncheckedUpdateWithoutTbl_enderecoInput>
    create: XOR<tbl_usuariosCreateWithoutTbl_enderecoInput, tbl_usuariosUncheckedCreateWithoutTbl_enderecoInput>
    where?: tbl_usuariosWhereInput
  }

  export type tbl_usuariosUpdateToOneWithWhereWithoutTbl_enderecoInput = {
    where?: tbl_usuariosWhereInput
    data: XOR<tbl_usuariosUpdateWithoutTbl_enderecoInput, tbl_usuariosUncheckedUpdateWithoutTbl_enderecoInput>
  }

  export type tbl_usuariosUpdateWithoutTbl_enderecoInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    favoritos?: favoritosUpdateManyWithoutTbl_usuariosNestedInput
    tbl_autenticacao?: tbl_autenticacaoUpdateManyWithoutTbl_usuariosNestedInput
    tbl_historico_viagens?: tbl_historico_viagensUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type tbl_usuariosUncheckedUpdateWithoutTbl_enderecoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_autenticacao?: tbl_autenticacaoUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_historico_viagens?: tbl_historico_viagensUncheckedUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type favoritosCreateWithoutTbl_usuariosInput = {
    itinerario: itinerarioCreateNestedOneWithoutFavoritosInput
  }

  export type favoritosUncheckedCreateWithoutTbl_usuariosInput = {
    id?: number
    id_itinerario: number
  }

  export type favoritosCreateOrConnectWithoutTbl_usuariosInput = {
    where: favoritosWhereUniqueInput
    create: XOR<favoritosCreateWithoutTbl_usuariosInput, favoritosUncheckedCreateWithoutTbl_usuariosInput>
  }

  export type favoritosCreateManyTbl_usuariosInputEnvelope = {
    data: favoritosCreateManyTbl_usuariosInput | favoritosCreateManyTbl_usuariosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_autenticacaoCreateWithoutTbl_usuariosInput = {
    senha: string
  }

  export type tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput = {
    id?: number
    senha: string
  }

  export type tbl_autenticacaoCreateOrConnectWithoutTbl_usuariosInput = {
    where: tbl_autenticacaoWhereUniqueInput
    create: XOR<tbl_autenticacaoCreateWithoutTbl_usuariosInput, tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput>
  }

  export type tbl_autenticacaoCreateManyTbl_usuariosInputEnvelope = {
    data: tbl_autenticacaoCreateManyTbl_usuariosInput | tbl_autenticacaoCreateManyTbl_usuariosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_enderecoCreateWithoutTbl_usuariosInput = {
    cep: string
    rua: string
    numero?: string | null
    cidade: string
    bairro?: string | null
    estado: string
  }

  export type tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput = {
    id?: number
    cep: string
    rua: string
    numero?: string | null
    cidade: string
    bairro?: string | null
    estado: string
  }

  export type tbl_enderecoCreateOrConnectWithoutTbl_usuariosInput = {
    where: tbl_enderecoWhereUniqueInput
    create: XOR<tbl_enderecoCreateWithoutTbl_usuariosInput, tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput>
  }

  export type tbl_enderecoCreateManyTbl_usuariosInputEnvelope = {
    data: tbl_enderecoCreateManyTbl_usuariosInput | tbl_enderecoCreateManyTbl_usuariosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_historico_viagensCreateWithoutTbl_usuariosInput = {
    codigo_operacao: number
    data_viagem?: Date | string
    tbl_operacional: tbl_operacionalCreateNestedOneWithoutTbl_historico_viagensInput
  }

  export type tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput = {
    id?: number
    codigo_operacao: number
    id_operacional: number
    data_viagem?: Date | string
  }

  export type tbl_historico_viagensCreateOrConnectWithoutTbl_usuariosInput = {
    where: tbl_historico_viagensWhereUniqueInput
    create: XOR<tbl_historico_viagensCreateWithoutTbl_usuariosInput, tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput>
  }

  export type tbl_historico_viagensCreateManyTbl_usuariosInputEnvelope = {
    data: tbl_historico_viagensCreateManyTbl_usuariosInput | tbl_historico_viagensCreateManyTbl_usuariosInput[]
    skipDuplicates?: boolean
  }

  export type favoritosUpsertWithWhereUniqueWithoutTbl_usuariosInput = {
    where: favoritosWhereUniqueInput
    update: XOR<favoritosUpdateWithoutTbl_usuariosInput, favoritosUncheckedUpdateWithoutTbl_usuariosInput>
    create: XOR<favoritosCreateWithoutTbl_usuariosInput, favoritosUncheckedCreateWithoutTbl_usuariosInput>
  }

  export type favoritosUpdateWithWhereUniqueWithoutTbl_usuariosInput = {
    where: favoritosWhereUniqueInput
    data: XOR<favoritosUpdateWithoutTbl_usuariosInput, favoritosUncheckedUpdateWithoutTbl_usuariosInput>
  }

  export type favoritosUpdateManyWithWhereWithoutTbl_usuariosInput = {
    where: favoritosScalarWhereInput
    data: XOR<favoritosUpdateManyMutationInput, favoritosUncheckedUpdateManyWithoutTbl_usuariosInput>
  }

  export type favoritosScalarWhereInput = {
    AND?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
    OR?: favoritosScalarWhereInput[]
    NOT?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
    id?: IntFilter<"favoritos"> | number
    id_itinerario?: IntFilter<"favoritos"> | number
    id_usuario?: IntFilter<"favoritos"> | number
  }

  export type tbl_autenticacaoUpsertWithWhereUniqueWithoutTbl_usuariosInput = {
    where: tbl_autenticacaoWhereUniqueInput
    update: XOR<tbl_autenticacaoUpdateWithoutTbl_usuariosInput, tbl_autenticacaoUncheckedUpdateWithoutTbl_usuariosInput>
    create: XOR<tbl_autenticacaoCreateWithoutTbl_usuariosInput, tbl_autenticacaoUncheckedCreateWithoutTbl_usuariosInput>
  }

  export type tbl_autenticacaoUpdateWithWhereUniqueWithoutTbl_usuariosInput = {
    where: tbl_autenticacaoWhereUniqueInput
    data: XOR<tbl_autenticacaoUpdateWithoutTbl_usuariosInput, tbl_autenticacaoUncheckedUpdateWithoutTbl_usuariosInput>
  }

  export type tbl_autenticacaoUpdateManyWithWhereWithoutTbl_usuariosInput = {
    where: tbl_autenticacaoScalarWhereInput
    data: XOR<tbl_autenticacaoUpdateManyMutationInput, tbl_autenticacaoUncheckedUpdateManyWithoutTbl_usuariosInput>
  }

  export type tbl_autenticacaoScalarWhereInput = {
    AND?: tbl_autenticacaoScalarWhereInput | tbl_autenticacaoScalarWhereInput[]
    OR?: tbl_autenticacaoScalarWhereInput[]
    NOT?: tbl_autenticacaoScalarWhereInput | tbl_autenticacaoScalarWhereInput[]
    id?: IntFilter<"tbl_autenticacao"> | number
    id_usuario?: IntFilter<"tbl_autenticacao"> | number
    senha?: StringFilter<"tbl_autenticacao"> | string
  }

  export type tbl_enderecoUpsertWithWhereUniqueWithoutTbl_usuariosInput = {
    where: tbl_enderecoWhereUniqueInput
    update: XOR<tbl_enderecoUpdateWithoutTbl_usuariosInput, tbl_enderecoUncheckedUpdateWithoutTbl_usuariosInput>
    create: XOR<tbl_enderecoCreateWithoutTbl_usuariosInput, tbl_enderecoUncheckedCreateWithoutTbl_usuariosInput>
  }

  export type tbl_enderecoUpdateWithWhereUniqueWithoutTbl_usuariosInput = {
    where: tbl_enderecoWhereUniqueInput
    data: XOR<tbl_enderecoUpdateWithoutTbl_usuariosInput, tbl_enderecoUncheckedUpdateWithoutTbl_usuariosInput>
  }

  export type tbl_enderecoUpdateManyWithWhereWithoutTbl_usuariosInput = {
    where: tbl_enderecoScalarWhereInput
    data: XOR<tbl_enderecoUpdateManyMutationInput, tbl_enderecoUncheckedUpdateManyWithoutTbl_usuariosInput>
  }

  export type tbl_enderecoScalarWhereInput = {
    AND?: tbl_enderecoScalarWhereInput | tbl_enderecoScalarWhereInput[]
    OR?: tbl_enderecoScalarWhereInput[]
    NOT?: tbl_enderecoScalarWhereInput | tbl_enderecoScalarWhereInput[]
    id?: IntFilter<"tbl_endereco"> | number
    id_usuario?: IntNullableFilter<"tbl_endereco"> | number | null
    cep?: StringFilter<"tbl_endereco"> | string
    rua?: StringFilter<"tbl_endereco"> | string
    numero?: StringNullableFilter<"tbl_endereco"> | string | null
    cidade?: StringFilter<"tbl_endereco"> | string
    bairro?: StringNullableFilter<"tbl_endereco"> | string | null
    estado?: StringFilter<"tbl_endereco"> | string
  }

  export type tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_usuariosInput = {
    where: tbl_historico_viagensWhereUniqueInput
    update: XOR<tbl_historico_viagensUpdateWithoutTbl_usuariosInput, tbl_historico_viagensUncheckedUpdateWithoutTbl_usuariosInput>
    create: XOR<tbl_historico_viagensCreateWithoutTbl_usuariosInput, tbl_historico_viagensUncheckedCreateWithoutTbl_usuariosInput>
  }

  export type tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_usuariosInput = {
    where: tbl_historico_viagensWhereUniqueInput
    data: XOR<tbl_historico_viagensUpdateWithoutTbl_usuariosInput, tbl_historico_viagensUncheckedUpdateWithoutTbl_usuariosInput>
  }

  export type tbl_historico_viagensUpdateManyWithWhereWithoutTbl_usuariosInput = {
    where: tbl_historico_viagensScalarWhereInput
    data: XOR<tbl_historico_viagensUpdateManyMutationInput, tbl_historico_viagensUncheckedUpdateManyWithoutTbl_usuariosInput>
  }

  export type tbl_historico_viagensScalarWhereInput = {
    AND?: tbl_historico_viagensScalarWhereInput | tbl_historico_viagensScalarWhereInput[]
    OR?: tbl_historico_viagensScalarWhereInput[]
    NOT?: tbl_historico_viagensScalarWhereInput | tbl_historico_viagensScalarWhereInput[]
    id?: IntFilter<"tbl_historico_viagens"> | number
    id_usuario?: IntFilter<"tbl_historico_viagens"> | number
    codigo_operacao?: IntFilter<"tbl_historico_viagens"> | number
    id_operacional?: IntFilter<"tbl_historico_viagens"> | number
    data_viagem?: DateTimeFilter<"tbl_historico_viagens"> | Date | string
  }

  export type tbl_usuariosCreateWithoutTbl_autenticacaoInput = {
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    favoritos?: favoritosCreateNestedManyWithoutTbl_usuariosInput
    tbl_endereco?: tbl_enderecoCreateNestedManyWithoutTbl_usuariosInput
    tbl_historico_viagens?: tbl_historico_viagensCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosUncheckedCreateWithoutTbl_autenticacaoInput = {
    id?: number
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_endereco?: tbl_enderecoUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_historico_viagens?: tbl_historico_viagensUncheckedCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosCreateOrConnectWithoutTbl_autenticacaoInput = {
    where: tbl_usuariosWhereUniqueInput
    create: XOR<tbl_usuariosCreateWithoutTbl_autenticacaoInput, tbl_usuariosUncheckedCreateWithoutTbl_autenticacaoInput>
  }

  export type tbl_usuariosUpsertWithoutTbl_autenticacaoInput = {
    update: XOR<tbl_usuariosUpdateWithoutTbl_autenticacaoInput, tbl_usuariosUncheckedUpdateWithoutTbl_autenticacaoInput>
    create: XOR<tbl_usuariosCreateWithoutTbl_autenticacaoInput, tbl_usuariosUncheckedCreateWithoutTbl_autenticacaoInput>
    where?: tbl_usuariosWhereInput
  }

  export type tbl_usuariosUpdateToOneWithWhereWithoutTbl_autenticacaoInput = {
    where?: tbl_usuariosWhereInput
    data: XOR<tbl_usuariosUpdateWithoutTbl_autenticacaoInput, tbl_usuariosUncheckedUpdateWithoutTbl_autenticacaoInput>
  }

  export type tbl_usuariosUpdateWithoutTbl_autenticacaoInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    favoritos?: favoritosUpdateManyWithoutTbl_usuariosNestedInput
    tbl_endereco?: tbl_enderecoUpdateManyWithoutTbl_usuariosNestedInput
    tbl_historico_viagens?: tbl_historico_viagensUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type tbl_usuariosUncheckedUpdateWithoutTbl_autenticacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_endereco?: tbl_enderecoUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_historico_viagens?: tbl_historico_viagensUncheckedUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type itinerarioCreateWithoutFavoritosInput = {
    origem: string
    destino: string
    linha: string
  }

  export type itinerarioUncheckedCreateWithoutFavoritosInput = {
    id?: number
    origem: string
    destino: string
    linha: string
  }

  export type itinerarioCreateOrConnectWithoutFavoritosInput = {
    where: itinerarioWhereUniqueInput
    create: XOR<itinerarioCreateWithoutFavoritosInput, itinerarioUncheckedCreateWithoutFavoritosInput>
  }

  export type tbl_usuariosCreateWithoutFavoritosInput = {
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    tbl_autenticacao?: tbl_autenticacaoCreateNestedManyWithoutTbl_usuariosInput
    tbl_endereco?: tbl_enderecoCreateNestedManyWithoutTbl_usuariosInput
    tbl_historico_viagens?: tbl_historico_viagensCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosUncheckedCreateWithoutFavoritosInput = {
    id?: number
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    tbl_autenticacao?: tbl_autenticacaoUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_endereco?: tbl_enderecoUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_historico_viagens?: tbl_historico_viagensUncheckedCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosCreateOrConnectWithoutFavoritosInput = {
    where: tbl_usuariosWhereUniqueInput
    create: XOR<tbl_usuariosCreateWithoutFavoritosInput, tbl_usuariosUncheckedCreateWithoutFavoritosInput>
  }

  export type itinerarioUpsertWithoutFavoritosInput = {
    update: XOR<itinerarioUpdateWithoutFavoritosInput, itinerarioUncheckedUpdateWithoutFavoritosInput>
    create: XOR<itinerarioCreateWithoutFavoritosInput, itinerarioUncheckedCreateWithoutFavoritosInput>
    where?: itinerarioWhereInput
  }

  export type itinerarioUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: itinerarioWhereInput
    data: XOR<itinerarioUpdateWithoutFavoritosInput, itinerarioUncheckedUpdateWithoutFavoritosInput>
  }

  export type itinerarioUpdateWithoutFavoritosInput = {
    origem?: StringFieldUpdateOperationsInput | string
    destino?: StringFieldUpdateOperationsInput | string
    linha?: StringFieldUpdateOperationsInput | string
  }

  export type itinerarioUncheckedUpdateWithoutFavoritosInput = {
    id?: IntFieldUpdateOperationsInput | number
    origem?: StringFieldUpdateOperationsInput | string
    destino?: StringFieldUpdateOperationsInput | string
    linha?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_usuariosUpsertWithoutFavoritosInput = {
    update: XOR<tbl_usuariosUpdateWithoutFavoritosInput, tbl_usuariosUncheckedUpdateWithoutFavoritosInput>
    create: XOR<tbl_usuariosCreateWithoutFavoritosInput, tbl_usuariosUncheckedCreateWithoutFavoritosInput>
    where?: tbl_usuariosWhereInput
  }

  export type tbl_usuariosUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: tbl_usuariosWhereInput
    data: XOR<tbl_usuariosUpdateWithoutFavoritosInput, tbl_usuariosUncheckedUpdateWithoutFavoritosInput>
  }

  export type tbl_usuariosUpdateWithoutFavoritosInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_autenticacao?: tbl_autenticacaoUpdateManyWithoutTbl_usuariosNestedInput
    tbl_endereco?: tbl_enderecoUpdateManyWithoutTbl_usuariosNestedInput
    tbl_historico_viagens?: tbl_historico_viagensUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type tbl_usuariosUncheckedUpdateWithoutFavoritosInput = {
    id?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_autenticacao?: tbl_autenticacaoUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_endereco?: tbl_enderecoUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_historico_viagens?: tbl_historico_viagensUncheckedUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type favoritosCreateWithoutItinerarioInput = {
    tbl_usuarios: tbl_usuariosCreateNestedOneWithoutFavoritosInput
  }

  export type favoritosUncheckedCreateWithoutItinerarioInput = {
    id?: number
    id_usuario: number
  }

  export type favoritosCreateOrConnectWithoutItinerarioInput = {
    where: favoritosWhereUniqueInput
    create: XOR<favoritosCreateWithoutItinerarioInput, favoritosUncheckedCreateWithoutItinerarioInput>
  }

  export type favoritosCreateManyItinerarioInputEnvelope = {
    data: favoritosCreateManyItinerarioInput | favoritosCreateManyItinerarioInput[]
    skipDuplicates?: boolean
  }

  export type favoritosUpsertWithWhereUniqueWithoutItinerarioInput = {
    where: favoritosWhereUniqueInput
    update: XOR<favoritosUpdateWithoutItinerarioInput, favoritosUncheckedUpdateWithoutItinerarioInput>
    create: XOR<favoritosCreateWithoutItinerarioInput, favoritosUncheckedCreateWithoutItinerarioInput>
  }

  export type favoritosUpdateWithWhereUniqueWithoutItinerarioInput = {
    where: favoritosWhereUniqueInput
    data: XOR<favoritosUpdateWithoutItinerarioInput, favoritosUncheckedUpdateWithoutItinerarioInput>
  }

  export type favoritosUpdateManyWithWhereWithoutItinerarioInput = {
    where: favoritosScalarWhereInput
    data: XOR<favoritosUpdateManyMutationInput, favoritosUncheckedUpdateManyWithoutItinerarioInput>
  }

  export type tbl_operacionalCreateWithoutTabelaInput = {
    sentido: string
    data_viagem?: Date | string
    tbl_historico_viagens?: tbl_historico_viagensCreateNestedManyWithoutTbl_operacionalInput
  }

  export type tbl_operacionalUncheckedCreateWithoutTabelaInput = {
    id?: number
    sentido: string
    data_viagem?: Date | string
    tbl_historico_viagens?: tbl_historico_viagensUncheckedCreateNestedManyWithoutTbl_operacionalInput
  }

  export type tbl_operacionalCreateOrConnectWithoutTabelaInput = {
    where: tbl_operacionalWhereUniqueInput
    create: XOR<tbl_operacionalCreateWithoutTabelaInput, tbl_operacionalUncheckedCreateWithoutTabelaInput>
  }

  export type tbl_operacionalCreateManyTabelaInputEnvelope = {
    data: tbl_operacionalCreateManyTabelaInput | tbl_operacionalCreateManyTabelaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_operacionalUpsertWithWhereUniqueWithoutTabelaInput = {
    where: tbl_operacionalWhereUniqueInput
    update: XOR<tbl_operacionalUpdateWithoutTabelaInput, tbl_operacionalUncheckedUpdateWithoutTabelaInput>
    create: XOR<tbl_operacionalCreateWithoutTabelaInput, tbl_operacionalUncheckedCreateWithoutTabelaInput>
  }

  export type tbl_operacionalUpdateWithWhereUniqueWithoutTabelaInput = {
    where: tbl_operacionalWhereUniqueInput
    data: XOR<tbl_operacionalUpdateWithoutTabelaInput, tbl_operacionalUncheckedUpdateWithoutTabelaInput>
  }

  export type tbl_operacionalUpdateManyWithWhereWithoutTabelaInput = {
    where: tbl_operacionalScalarWhereInput
    data: XOR<tbl_operacionalUpdateManyMutationInput, tbl_operacionalUncheckedUpdateManyWithoutTabelaInput>
  }

  export type tbl_operacionalScalarWhereInput = {
    AND?: tbl_operacionalScalarWhereInput | tbl_operacionalScalarWhereInput[]
    OR?: tbl_operacionalScalarWhereInput[]
    NOT?: tbl_operacionalScalarWhereInput | tbl_operacionalScalarWhereInput[]
    id?: IntFilter<"tbl_operacional"> | number
    id_onibus?: IntFilter<"tbl_operacional"> | number
    sentido?: StringFilter<"tbl_operacional"> | string
    data_viagem?: DateTimeFilter<"tbl_operacional"> | Date | string
  }

  export type tbl_usuariosCreateWithoutTbl_historico_viagensInput = {
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    favoritos?: favoritosCreateNestedManyWithoutTbl_usuariosInput
    tbl_autenticacao?: tbl_autenticacaoCreateNestedManyWithoutTbl_usuariosInput
    tbl_endereco?: tbl_enderecoCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosUncheckedCreateWithoutTbl_historico_viagensInput = {
    id?: number
    cpf: string
    nome: string
    sobrenome: string
    email: string
    telefone: string
    foto_perfil?: string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_autenticacao?: tbl_autenticacaoUncheckedCreateNestedManyWithoutTbl_usuariosInput
    tbl_endereco?: tbl_enderecoUncheckedCreateNestedManyWithoutTbl_usuariosInput
  }

  export type tbl_usuariosCreateOrConnectWithoutTbl_historico_viagensInput = {
    where: tbl_usuariosWhereUniqueInput
    create: XOR<tbl_usuariosCreateWithoutTbl_historico_viagensInput, tbl_usuariosUncheckedCreateWithoutTbl_historico_viagensInput>
  }

  export type tbl_operacionalCreateWithoutTbl_historico_viagensInput = {
    sentido: string
    data_viagem?: Date | string
    tabela: tabelaCreateNestedOneWithoutTbl_operacionalInput
  }

  export type tbl_operacionalUncheckedCreateWithoutTbl_historico_viagensInput = {
    id?: number
    id_onibus: number
    sentido: string
    data_viagem?: Date | string
  }

  export type tbl_operacionalCreateOrConnectWithoutTbl_historico_viagensInput = {
    where: tbl_operacionalWhereUniqueInput
    create: XOR<tbl_operacionalCreateWithoutTbl_historico_viagensInput, tbl_operacionalUncheckedCreateWithoutTbl_historico_viagensInput>
  }

  export type tbl_usuariosUpsertWithoutTbl_historico_viagensInput = {
    update: XOR<tbl_usuariosUpdateWithoutTbl_historico_viagensInput, tbl_usuariosUncheckedUpdateWithoutTbl_historico_viagensInput>
    create: XOR<tbl_usuariosCreateWithoutTbl_historico_viagensInput, tbl_usuariosUncheckedCreateWithoutTbl_historico_viagensInput>
    where?: tbl_usuariosWhereInput
  }

  export type tbl_usuariosUpdateToOneWithWhereWithoutTbl_historico_viagensInput = {
    where?: tbl_usuariosWhereInput
    data: XOR<tbl_usuariosUpdateWithoutTbl_historico_viagensInput, tbl_usuariosUncheckedUpdateWithoutTbl_historico_viagensInput>
  }

  export type tbl_usuariosUpdateWithoutTbl_historico_viagensInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    favoritos?: favoritosUpdateManyWithoutTbl_usuariosNestedInput
    tbl_autenticacao?: tbl_autenticacaoUpdateManyWithoutTbl_usuariosNestedInput
    tbl_endereco?: tbl_enderecoUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type tbl_usuariosUncheckedUpdateWithoutTbl_historico_viagensInput = {
    id?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_autenticacao?: tbl_autenticacaoUncheckedUpdateManyWithoutTbl_usuariosNestedInput
    tbl_endereco?: tbl_enderecoUncheckedUpdateManyWithoutTbl_usuariosNestedInput
  }

  export type tbl_operacionalUpsertWithoutTbl_historico_viagensInput = {
    update: XOR<tbl_operacionalUpdateWithoutTbl_historico_viagensInput, tbl_operacionalUncheckedUpdateWithoutTbl_historico_viagensInput>
    create: XOR<tbl_operacionalCreateWithoutTbl_historico_viagensInput, tbl_operacionalUncheckedCreateWithoutTbl_historico_viagensInput>
    where?: tbl_operacionalWhereInput
  }

  export type tbl_operacionalUpdateToOneWithWhereWithoutTbl_historico_viagensInput = {
    where?: tbl_operacionalWhereInput
    data: XOR<tbl_operacionalUpdateWithoutTbl_historico_viagensInput, tbl_operacionalUncheckedUpdateWithoutTbl_historico_viagensInput>
  }

  export type tbl_operacionalUpdateWithoutTbl_historico_viagensInput = {
    sentido?: StringFieldUpdateOperationsInput | string
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
    tabela?: tabelaUpdateOneRequiredWithoutTbl_operacionalNestedInput
  }

  export type tbl_operacionalUncheckedUpdateWithoutTbl_historico_viagensInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_onibus?: IntFieldUpdateOperationsInput | number
    sentido?: StringFieldUpdateOperationsInput | string
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_historico_viagensCreateWithoutTbl_operacionalInput = {
    codigo_operacao: number
    data_viagem?: Date | string
    tbl_usuarios: tbl_usuariosCreateNestedOneWithoutTbl_historico_viagensInput
  }

  export type tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput = {
    id?: number
    id_usuario: number
    codigo_operacao: number
    data_viagem?: Date | string
  }

  export type tbl_historico_viagensCreateOrConnectWithoutTbl_operacionalInput = {
    where: tbl_historico_viagensWhereUniqueInput
    create: XOR<tbl_historico_viagensCreateWithoutTbl_operacionalInput, tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput>
  }

  export type tbl_historico_viagensCreateManyTbl_operacionalInputEnvelope = {
    data: tbl_historico_viagensCreateManyTbl_operacionalInput | tbl_historico_viagensCreateManyTbl_operacionalInput[]
    skipDuplicates?: boolean
  }

  export type tabelaCreateWithoutTbl_operacionalInput = {
    prefixo: number
    linha: string
    motorista: string
  }

  export type tabelaUncheckedCreateWithoutTbl_operacionalInput = {
    id?: number
    prefixo: number
    linha: string
    motorista: string
  }

  export type tabelaCreateOrConnectWithoutTbl_operacionalInput = {
    where: tabelaWhereUniqueInput
    create: XOR<tabelaCreateWithoutTbl_operacionalInput, tabelaUncheckedCreateWithoutTbl_operacionalInput>
  }

  export type tbl_historico_viagensUpsertWithWhereUniqueWithoutTbl_operacionalInput = {
    where: tbl_historico_viagensWhereUniqueInput
    update: XOR<tbl_historico_viagensUpdateWithoutTbl_operacionalInput, tbl_historico_viagensUncheckedUpdateWithoutTbl_operacionalInput>
    create: XOR<tbl_historico_viagensCreateWithoutTbl_operacionalInput, tbl_historico_viagensUncheckedCreateWithoutTbl_operacionalInput>
  }

  export type tbl_historico_viagensUpdateWithWhereUniqueWithoutTbl_operacionalInput = {
    where: tbl_historico_viagensWhereUniqueInput
    data: XOR<tbl_historico_viagensUpdateWithoutTbl_operacionalInput, tbl_historico_viagensUncheckedUpdateWithoutTbl_operacionalInput>
  }

  export type tbl_historico_viagensUpdateManyWithWhereWithoutTbl_operacionalInput = {
    where: tbl_historico_viagensScalarWhereInput
    data: XOR<tbl_historico_viagensUpdateManyMutationInput, tbl_historico_viagensUncheckedUpdateManyWithoutTbl_operacionalInput>
  }

  export type tabelaUpsertWithoutTbl_operacionalInput = {
    update: XOR<tabelaUpdateWithoutTbl_operacionalInput, tabelaUncheckedUpdateWithoutTbl_operacionalInput>
    create: XOR<tabelaCreateWithoutTbl_operacionalInput, tabelaUncheckedCreateWithoutTbl_operacionalInput>
    where?: tabelaWhereInput
  }

  export type tabelaUpdateToOneWithWhereWithoutTbl_operacionalInput = {
    where?: tabelaWhereInput
    data: XOR<tabelaUpdateWithoutTbl_operacionalInput, tabelaUncheckedUpdateWithoutTbl_operacionalInput>
  }

  export type tabelaUpdateWithoutTbl_operacionalInput = {
    prefixo?: IntFieldUpdateOperationsInput | number
    linha?: StringFieldUpdateOperationsInput | string
    motorista?: StringFieldUpdateOperationsInput | string
  }

  export type tabelaUncheckedUpdateWithoutTbl_operacionalInput = {
    id?: IntFieldUpdateOperationsInput | number
    prefixo?: IntFieldUpdateOperationsInput | number
    linha?: StringFieldUpdateOperationsInput | string
    motorista?: StringFieldUpdateOperationsInput | string
  }

  export type favoritosCreateManyTbl_usuariosInput = {
    id?: number
    id_itinerario: number
  }

  export type tbl_autenticacaoCreateManyTbl_usuariosInput = {
    id?: number
    senha: string
  }

  export type tbl_enderecoCreateManyTbl_usuariosInput = {
    id?: number
    cep: string
    rua: string
    numero?: string | null
    cidade: string
    bairro?: string | null
    estado: string
  }

  export type tbl_historico_viagensCreateManyTbl_usuariosInput = {
    id?: number
    codigo_operacao: number
    id_operacional: number
    data_viagem?: Date | string
  }

  export type favoritosUpdateWithoutTbl_usuariosInput = {
    itinerario?: itinerarioUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type favoritosUncheckedUpdateWithoutTbl_usuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_itinerario?: IntFieldUpdateOperationsInput | number
  }

  export type favoritosUncheckedUpdateManyWithoutTbl_usuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_itinerario?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_autenticacaoUpdateWithoutTbl_usuariosInput = {
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_autenticacaoUncheckedUpdateWithoutTbl_usuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_autenticacaoUncheckedUpdateManyWithoutTbl_usuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_enderecoUpdateWithoutTbl_usuariosInput = {
    cep?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_enderecoUncheckedUpdateWithoutTbl_usuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    cep?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_enderecoUncheckedUpdateManyWithoutTbl_usuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    cep?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_historico_viagensUpdateWithoutTbl_usuariosInput = {
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
    tbl_operacional?: tbl_operacionalUpdateOneRequiredWithoutTbl_historico_viagensNestedInput
  }

  export type tbl_historico_viagensUncheckedUpdateWithoutTbl_usuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    id_operacional?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_historico_viagensUncheckedUpdateManyWithoutTbl_usuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    id_operacional?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type favoritosCreateManyItinerarioInput = {
    id?: number
    id_usuario: number
  }

  export type favoritosUpdateWithoutItinerarioInput = {
    tbl_usuarios?: tbl_usuariosUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type favoritosUncheckedUpdateWithoutItinerarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
  }

  export type favoritosUncheckedUpdateManyWithoutItinerarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_operacionalCreateManyTabelaInput = {
    id?: number
    sentido: string
    data_viagem?: Date | string
  }

  export type tbl_operacionalUpdateWithoutTabelaInput = {
    sentido?: StringFieldUpdateOperationsInput | string
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
    tbl_historico_viagens?: tbl_historico_viagensUpdateManyWithoutTbl_operacionalNestedInput
  }

  export type tbl_operacionalUncheckedUpdateWithoutTabelaInput = {
    id?: IntFieldUpdateOperationsInput | number
    sentido?: StringFieldUpdateOperationsInput | string
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
    tbl_historico_viagens?: tbl_historico_viagensUncheckedUpdateManyWithoutTbl_operacionalNestedInput
  }

  export type tbl_operacionalUncheckedUpdateManyWithoutTabelaInput = {
    id?: IntFieldUpdateOperationsInput | number
    sentido?: StringFieldUpdateOperationsInput | string
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_historico_viagensCreateManyTbl_operacionalInput = {
    id?: number
    id_usuario: number
    codigo_operacao: number
    data_viagem?: Date | string
  }

  export type tbl_historico_viagensUpdateWithoutTbl_operacionalInput = {
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
    tbl_usuarios?: tbl_usuariosUpdateOneRequiredWithoutTbl_historico_viagensNestedInput
  }

  export type tbl_historico_viagensUncheckedUpdateWithoutTbl_operacionalInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_historico_viagensUncheckedUpdateManyWithoutTbl_operacionalInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    codigo_operacao?: IntFieldUpdateOperationsInput | number
    data_viagem?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use Tbl_usuariosCountOutputTypeDefaultArgs instead
     */
    export type Tbl_usuariosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_usuariosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ItinerarioCountOutputTypeDefaultArgs instead
     */
    export type ItinerarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ItinerarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TabelaCountOutputTypeDefaultArgs instead
     */
    export type TabelaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TabelaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_operacionalCountOutputTypeDefaultArgs instead
     */
    export type Tbl_operacionalCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_operacionalCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_enderecoDefaultArgs instead
     */
    export type tbl_enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_enderecoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_usuariosDefaultArgs instead
     */
    export type tbl_usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_usuariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_autenticacaoDefaultArgs instead
     */
    export type tbl_autenticacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_autenticacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use favoritosDefaultArgs instead
     */
    export type favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = favoritosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use itinerarioDefaultArgs instead
     */
    export type itinerarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = itinerarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tabelaDefaultArgs instead
     */
    export type tabelaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tabelaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_historico_viagensDefaultArgs instead
     */
    export type tbl_historico_viagensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_historico_viagensDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_operacionalDefaultArgs instead
     */
    export type tbl_operacionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_operacionalDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}